name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: -Dwarnings
  MSRV: "1.65"
  RUST_LOG: "trace"

jobs:
  build_and_test_nix:
    name: Build and test (Nix)
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        name: [macOS-arm-latest]
        rust: [stable]
        include:
          # - name: macOS-latest
          #   os: macOS-latest
          #   release-os: darwin
          #   release-arch: x86_64
          #   runner: [self-hosted, macOS, X64]
          - name: macOS-arm-latest
            os: macOS-latest
            release-os: darwin
            release-arch: aarch64
            runner: [self-hosted, macOS, ARM64]

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        submodules: recursive

    - name: Install ${{ matrix.rust }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: tests (all features)
      run: cargo test --workspace --all-features --lib --bins --tests magic_endpoint_connect_close
      
    - name: doctests
      run: cargo test --workspace --all-features --doc
      
  check_fmt_and_docs:
    name: Checking fmt and docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt

    - name: fmt
      run: cargo fmt --all -- --check

    - name: Docs
      run: cargo doc

  clippy_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: dtolnay/rust-toolchain@stable
      with:
          components: clippy

    # TODO: We have a bunch of platform-dependent code so should
    #    probably run this job on the full platofrm matrix
    - name: clippy check (all features)
      run: cargo clippy --workspace --all-features --all-targets

    - name: clippy check (no features)
      run: cargo clippy --workspace --no-default-features --all-targets

    - name: clippy check (default features)
      run: cargo clippy --workspace --all-targets

