[package]
name = "iroh"
authors = ["Kasey Huizinga <klhuizinga@gmail.com>", "Martijn Faassen <faassen@startifact.com>"]
description = "Command line interface for interacting with iroh."
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

exclude = [
  "tests/**",
  "fixtures/**",
]

[features]
testing = ["dep:relative-path"]

[dependencies]
anyhow.workspace = true
async-stream.workspace = true
clap.workspace = true
config.workspace = true
console.workspace = true
crossterm.workspace = true
futures.workspace = true
git-version.workspace = true
indicatif.workspace = true
iroh-api.workspace = true
iroh-localops.workspace = true
iroh-metrics.workspace = true
iroh-util.workspace = true
relative-path = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }
sysinfo.workspace = true
tokio = { workspace = true, features = ["fs", "io-util"] }
tracing.workspace = true
which.workspace = true

[dev-dependencies]
# We want to compile `iroh` in test mode, but we can't specify that yet:
# https://github.com/rust-lang/cargo/issues/1982
# This is a workaround for enabling features only during testing: 
# https://github.com/DesmondWillowbrook/cargo-optional-features-for-testing-and-examples
# It is needed to have trycmd invoke a version of the iroh CLI in testing
# mode. trycmd needs to have an actual binary to invoke.
# Unfortunately this also turns on the feature during development, which may be
# confusing. See the comments in `run.rs` surrounding this.
iroh = { workspace = true, features = ["testing"] }
iroh-api = { workspace = true, features = ["testing"] }
trycmd.workspace = true
