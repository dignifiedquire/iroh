<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="629.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="11773"><g><title>iroh`iroh::commands::node::spawn_daemon_node::_{{closure}} (2 samples, 0.02%)</title><rect x="0.0085%" y="437" width="0.0170%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.2585%" y="447.50"></text></g><g><title>dyld`start (5 samples, 0.04%)</title><rect x="0.0000%" y="581" width="0.0425%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="591.50"></text></g><g><title>iroh`main (5 samples, 0.04%)</title><rect x="0.0000%" y="565" width="0.0425%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="575.50"></text></g><g><title>iroh`std::rt::lang_start_internal (5 samples, 0.04%)</title><rect x="0.0000%" y="549" width="0.0425%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="559.50"></text></g><g><title>iroh`std::rt::lang_start::_{{closure}} (5 samples, 0.04%)</title><rect x="0.0000%" y="533" width="0.0425%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="543.50"></text></g><g><title>iroh`std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.04%)</title><rect x="0.0000%" y="517" width="0.0425%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="527.50"></text></g><g><title>iroh`iroh::main (5 samples, 0.04%)</title><rect x="0.0000%" y="501" width="0.0425%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="511.50"></text></g><g><title>iroh`tokio::runtime::context::runtime::enter_runtime (4 samples, 0.03%)</title><rect x="0.0085%" y="485" width="0.0340%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="4"/><text x="0.2585%" y="495.50"></text></g><g><title>iroh`tokio::runtime::park::CachedParkThread::block_on (4 samples, 0.03%)</title><rect x="0.0085%" y="469" width="0.0340%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="4"/><text x="0.2585%" y="479.50"></text></g><g><title>iroh`iroh::commands::Cli::run::_{{closure}} (4 samples, 0.03%)</title><rect x="0.0085%" y="453" width="0.0340%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="4"/><text x="0.2585%" y="463.50"></text></g><g><title>iroh`iroh_sync::store::fs::Store::new (2 samples, 0.02%)</title><rect x="0.0255%" y="437" width="0.0170%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="2"/><text x="0.2755%" y="447.50"></text></g><g><title>iroh`redb::db::Database::create (2 samples, 0.02%)</title><rect x="0.0255%" y="421" width="0.0170%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="2"/><text x="0.2755%" y="431.50"></text></g><g><title>iroh`redb::db::Database::new (2 samples, 0.02%)</title><rect x="0.0255%" y="405" width="0.0170%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="2"/><text x="0.2755%" y="415.50"></text></g><g><title>iroh`redb::db::Database::do_repair (2 samples, 0.02%)</title><rect x="0.0255%" y="389" width="0.0170%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="2"/><text x="0.2755%" y="399.50"></text></g><g><title>iroh`std::time::SystemTime::checked_add (2 samples, 0.02%)</title><rect x="0.0595%" y="501" width="0.0170%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="2"/><text x="0.3095%" y="511.50"></text></g><g><title>iroh`&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="0.1019%" y="485" width="0.0170%" height="15" fill="rgb(231,73,38)" fg:x="12" fg:w="2"/><text x="0.3519%" y="495.50"></text></g><g><title>iroh`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.03%)</title><rect x="0.1784%" y="469" width="0.0255%" height="15" fill="rgb(225,20,46)" fg:x="21" fg:w="3"/><text x="0.4284%" y="479.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3 samples, 0.03%)</title><rect x="0.1784%" y="453" width="0.0255%" height="15" fill="rgb(210,31,41)" fg:x="21" fg:w="3"/><text x="0.4284%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.02%)</title><rect x="0.1869%" y="437" width="0.0170%" height="15" fill="rgb(221,200,47)" fg:x="22" fg:w="2"/><text x="0.4369%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__gettimeofday (10 samples, 0.08%)</title><rect x="0.2124%" y="469" width="0.0849%" height="15" fill="rgb(226,26,5)" fg:x="25" fg:w="10"/><text x="0.4624%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (60 samples, 0.51%)</title><rect x="0.2973%" y="469" width="0.5096%" height="15" fill="rgb(249,33,26)" fg:x="35" fg:w="60"/><text x="0.5473%" y="479.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::wait_until_internal (85 samples, 0.72%)</title><rect x="0.1189%" y="485" width="0.7220%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="85"/><text x="0.3689%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (3 samples, 0.03%)</title><rect x="0.8154%" y="469" width="0.0255%" height="15" fill="rgb(221,5,38)" fg:x="96" fg:w="3"/><text x="1.0654%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (2 samples, 0.02%)</title><rect x="0.8239%" y="453" width="0.0170%" height="15" fill="rgb(247,18,42)" fg:x="97" fg:w="2"/><text x="1.0739%" y="463.50"></text></g><g><title>iroh`parking_lot::raw_mutex::RawMutex::lock_slow (8 samples, 0.07%)</title><rect x="0.8409%" y="485" width="0.0680%" height="15" fill="rgb(241,131,45)" fg:x="99" fg:w="8"/><text x="1.0909%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (6 samples, 0.05%)</title><rect x="0.8579%" y="469" width="0.0510%" height="15" fill="rgb(249,31,29)" fg:x="101" fg:w="6"/><text x="1.1079%" y="479.50"></text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (4 samples, 0.03%)</title><rect x="0.9089%" y="485" width="0.0340%" height="15" fill="rgb(225,111,53)" fg:x="107" fg:w="4"/><text x="1.1589%" y="495.50"></text></g><g><title>iroh`futures_task::waker::wake_by_ref_arc_raw (8 samples, 0.07%)</title><rect x="0.9938%" y="469" width="0.0680%" height="15" fill="rgb(238,160,17)" fg:x="117" fg:w="8"/><text x="1.2438%" y="479.50"></text></g><g><title>iroh`&lt;iroh_bytes::util::progress::WithFilterMap&lt;I,U,F&gt; as iroh_bytes::util::progress::ProgressSender&gt;::try_send (2 samples, 0.02%)</title><rect x="1.1127%" y="437" width="0.0170%" height="15" fill="rgb(214,148,48)" fg:x="131" fg:w="2"/><text x="1.3627%" y="447.50"></text></g><g><title>iroh`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (2 samples, 0.02%)</title><rect x="1.1382%" y="437" width="0.0170%" height="15" fill="rgb(232,36,49)" fg:x="134" fg:w="2"/><text x="1.3882%" y="447.50"></text></g><g><title>iroh`bao_tree::io::outboard_size (2 samples, 0.02%)</title><rect x="1.1807%" y="437" width="0.0170%" height="15" fill="rgb(209,103,24)" fg:x="139" fg:w="2"/><text x="1.4307%" y="447.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 0.02%)</title><rect x="1.2146%" y="437" width="0.0170%" height="15" fill="rgb(229,88,8)" fg:x="143" fg:w="2"/><text x="1.4646%" y="447.50"></text></g><g><title>iroh`iroh::baomap::flat::Options::owned_data_path (2 samples, 0.02%)</title><rect x="1.2486%" y="437" width="0.0170%" height="15" fill="rgb(213,181,19)" fg:x="147" fg:w="2"/><text x="1.4986%" y="447.50"></text></g><g><title>iroh`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="1.4865%" y="421" width="0.0170%" height="15" fill="rgb(254,191,54)" fg:x="175" fg:w="2"/><text x="1.7365%" y="431.50"></text></g><g><title>iroh`&lt;iroh::baomap::flat::Inner as iroh_bytes::baomap::LivenessTracker&gt;::on_clone (3 samples, 0.03%)</title><rect x="1.5034%" y="421" width="0.0255%" height="15" fill="rgb(241,83,37)" fg:x="177" fg:w="3"/><text x="1.7534%" y="431.50"></text></g><g><title>iroh`&lt;iroh_bytes::util::Hash as core::cmp::Ord&gt;::cmp (11 samples, 0.09%)</title><rect x="1.5289%" y="421" width="0.0934%" height="15" fill="rgb(233,36,39)" fg:x="180" fg:w="11"/><text x="1.7789%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (10 samples, 0.08%)</title><rect x="1.7243%" y="341" width="0.0849%" height="15" fill="rgb(226,3,54)" fg:x="203" fg:w="10"/><text x="1.9743%" y="351.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.10%)</title><rect x="1.7158%" y="357" width="0.1019%" height="15" fill="rgb(245,192,40)" fg:x="202" fg:w="12"/><text x="1.9658%" y="367.50"></text></g><g><title>iroh`tokio::runtime::context::with_scheduler (5 samples, 0.04%)</title><rect x="1.8177%" y="357" width="0.0425%" height="15" fill="rgb(238,167,29)" fg:x="214" fg:w="5"/><text x="2.0677%" y="367.50"></text></g><g><title>iroh`tokio::runtime::driver::Handle::unpark (7 samples, 0.06%)</title><rect x="1.8602%" y="357" width="0.0595%" height="15" fill="rgb(232,182,51)" fg:x="219" fg:w="7"/><text x="2.1102%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`kevent (6 samples, 0.05%)</title><rect x="1.8687%" y="341" width="0.0510%" height="15" fill="rgb(231,60,39)" fg:x="220" fg:w="6"/><text x="2.1187%" y="351.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (26 samples, 0.22%)</title><rect x="1.7073%" y="373" width="0.2208%" height="15" fill="rgb(208,69,12)" fg:x="201" fg:w="26"/><text x="1.9573%" y="383.50"></text></g><g><title>iroh`&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (30 samples, 0.25%)</title><rect x="1.6988%" y="389" width="0.2548%" height="15" fill="rgb(235,93,37)" fg:x="200" fg:w="30"/><text x="1.9488%" y="399.50"></text></g><g><title>iroh`tokio::runtime::task::waker::wake_by_ref (2 samples, 0.02%)</title><rect x="1.9366%" y="373" width="0.0170%" height="15" fill="rgb(213,116,39)" fg:x="228" fg:w="2"/><text x="2.1866%" y="383.50"></text></g><g><title>iroh`flume::Hook&lt;T,S&gt;::fire_send (5 samples, 0.04%)</title><rect x="1.9536%" y="389" width="0.0425%" height="15" fill="rgb(222,207,29)" fg:x="230" fg:w="5"/><text x="2.2036%" y="399.50"></text></g><g><title>iroh`flume::Shared&lt;T&gt;::send_sync (44 samples, 0.37%)</title><rect x="1.6478%" y="405" width="0.3737%" height="15" fill="rgb(206,96,30)" fg:x="194" fg:w="44"/><text x="1.8978%" y="415.50"></text></g><g><title>iroh`tokio::runtime::task::raw::schedule (3 samples, 0.03%)</title><rect x="1.9961%" y="389" width="0.0255%" height="15" fill="rgb(218,138,4)" fg:x="235" fg:w="3"/><text x="2.2461%" y="399.50"></text></g><g><title>iroh`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (4 samples, 0.03%)</title><rect x="2.1065%" y="357" width="0.0340%" height="15" fill="rgb(250,191,14)" fg:x="248" fg:w="4"/><text x="2.3565%" y="367.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (9 samples, 0.08%)</title><rect x="2.0725%" y="389" width="0.0764%" height="15" fill="rgb(239,60,40)" fg:x="244" fg:w="9"/><text x="2.3225%" y="399.50"></text></g><g><title>iroh`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (7 samples, 0.06%)</title><rect x="2.0895%" y="373" width="0.0595%" height="15" fill="rgb(206,27,48)" fg:x="246" fg:w="7"/><text x="2.3395%" y="383.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="2.1490%" y="389" width="0.0170%" height="15" fill="rgb(225,35,8)" fg:x="253" fg:w="2"/><text x="2.3990%" y="399.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="2.1490%" y="373" width="0.0170%" height="15" fill="rgb(250,213,24)" fg:x="253" fg:w="2"/><text x="2.3990%" y="383.50"></text></g><g><title>iroh`iroh::node::RpcHandler&lt;D,S&gt;::blob_add_from_path0::_{{closure}}::_{{closure}} (21 samples, 0.18%)</title><rect x="2.0216%" y="405" width="0.1784%" height="15" fill="rgb(247,123,22)" fg:x="238" fg:w="21"/><text x="2.2716%" y="415.50"></text></g><g><title>iroh`&lt;iroh_bytes::util::progress::WithFilterMap&lt;I,U,F&gt; as iroh_bytes::util::progress::ProgressSender&gt;::blocking_send (69 samples, 0.59%)</title><rect x="1.6224%" y="421" width="0.5861%" height="15" fill="rgb(231,138,38)" fg:x="191" fg:w="69"/><text x="1.8724%" y="431.50"></text></g><g><title>iroh`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (8 samples, 0.07%)</title><rect x="2.2084%" y="421" width="0.0680%" height="15" fill="rgb(231,145,46)" fg:x="260" fg:w="8"/><text x="2.4584%" y="431.50"></text></g><g><title>iroh`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.02%)</title><rect x="2.2849%" y="421" width="0.0170%" height="15" fill="rgb(251,118,11)" fg:x="269" fg:w="2"/><text x="2.5349%" y="431.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (6 samples, 0.05%)</title><rect x="2.3019%" y="421" width="0.0510%" height="15" fill="rgb(217,147,25)" fg:x="271" fg:w="6"/><text x="2.5519%" y="431.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (6 samples, 0.05%)</title><rect x="2.3019%" y="405" width="0.0510%" height="15" fill="rgb(247,81,37)" fg:x="271" fg:w="6"/><text x="2.5519%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="2.3359%" y="389" width="0.0170%" height="15" fill="rgb(209,12,38)" fg:x="275" fg:w="2"/><text x="2.5859%" y="399.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="2.3528%" y="421" width="0.0170%" height="15" fill="rgb(227,1,9)" fg:x="277" fg:w="2"/><text x="2.6028%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="2.3783%" y="405" width="0.0255%" height="15" fill="rgb(248,47,43)" fg:x="280" fg:w="3"/><text x="2.6283%" y="415.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.05%)</title><rect x="2.3698%" y="421" width="0.0510%" height="15" fill="rgb(221,10,30)" fg:x="279" fg:w="6"/><text x="2.6198%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (2 samples, 0.02%)</title><rect x="2.4038%" y="405" width="0.0170%" height="15" fill="rgb(210,229,1)" fg:x="283" fg:w="2"/><text x="2.6538%" y="415.50"></text></g><g><title>iroh`&lt;alloc::vec::splice::Splice&lt;I,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="2.4378%" y="405" width="0.0255%" height="15" fill="rgb(222,148,37)" fg:x="287" fg:w="3"/><text x="2.6878%" y="415.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="2.4463%" y="389" width="0.0170%" height="15" fill="rgb(234,67,33)" fg:x="288" fg:w="2"/><text x="2.6963%" y="399.50"></text></g><g><title>iroh`bao_tree::io::outboard::PreOrderMemOutboard::into_inner_with_prefix (5 samples, 0.04%)</title><rect x="2.4378%" y="421" width="0.0425%" height="15" fill="rgb(247,98,35)" fg:x="287" fg:w="5"/><text x="2.6878%" y="431.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="2.4633%" y="405" width="0.0170%" height="15" fill="rgb(247,138,52)" fg:x="290" fg:w="2"/><text x="2.7133%" y="415.50"></text></g><g><title>iroh`bao_tree::io::outboard::flip_post (2 samples, 0.02%)</title><rect x="2.4803%" y="421" width="0.0170%" height="15" fill="rgb(213,79,30)" fg:x="292" fg:w="2"/><text x="2.7303%" y="431.50"></text></g><g><title>iroh`positioned_io::vec::_&lt;impl positioned_io::ReadAt for alloc::vec::Vec&lt;u8&gt;&gt;::read_at (3 samples, 0.03%)</title><rect x="2.5057%" y="405" width="0.0255%" height="15" fill="rgb(246,177,23)" fg:x="295" fg:w="3"/><text x="2.7557%" y="415.50"></text></g><g><title>iroh`bao_tree::io::sync::_&lt;impl bao_tree::io::outboard::PostOrderMemOutboard&gt;::load (5 samples, 0.04%)</title><rect x="2.4972%" y="421" width="0.0425%" height="15" fill="rgb(230,62,27)" fg:x="294" fg:w="5"/><text x="2.7472%" y="431.50"></text></g><g><title>iroh`&lt;bao_tree::iter::PostOrderNodeIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.04%)</title><rect x="2.5822%" y="405" width="0.0425%" height="15" fill="rgb(216,154,8)" fg:x="304" fg:w="5"/><text x="2.8322%" y="415.50"></text></g><g><title>iroh`&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.04%)</title><rect x="2.6246%" y="405" width="0.0425%" height="15" fill="rgb(244,35,45)" fg:x="309" fg:w="5"/><text x="2.8746%" y="415.50"></text></g><g><title>iroh`bao_tree::recursive_hash_subtree (21 samples, 0.18%)</title><rect x="2.6671%" y="341" width="0.1784%" height="15" fill="rgb(251,115,12)" fg:x="314" fg:w="21"/><text x="2.9171%" y="351.50"></text></g><g><title>iroh`iroh_blake3::portable::compress_in_place (20 samples, 0.17%)</title><rect x="2.6756%" y="325" width="0.1699%" height="15" fill="rgb(240,54,50)" fg:x="315" fg:w="20"/><text x="2.9256%" y="335.50"></text></g><g><title>iroh`bao_tree::recursive_hash_subtree (39 samples, 0.33%)</title><rect x="2.6671%" y="357" width="0.3313%" height="15" fill="rgb(233,84,52)" fg:x="314" fg:w="39"/><text x="2.9171%" y="367.50"></text></g><g><title>iroh`iroh_blake3::portable::compress_in_place (18 samples, 0.15%)</title><rect x="2.8455%" y="341" width="0.1529%" height="15" fill="rgb(207,117,47)" fg:x="335" fg:w="18"/><text x="3.0955%" y="351.50"></text></g><g><title>iroh`bao_tree::recursive_hash_subtree (61 samples, 0.52%)</title><rect x="2.6671%" y="373" width="0.5181%" height="15" fill="rgb(249,43,39)" fg:x="314" fg:w="61"/><text x="2.9171%" y="383.50"></text></g><g><title>iroh`iroh_blake3::portable::compress_in_place (20 samples, 0.17%)</title><rect x="3.0154%" y="357" width="0.1699%" height="15" fill="rgb(209,38,44)" fg:x="355" fg:w="20"/><text x="3.2654%" y="367.50"></text></g><g><title>iroh`iroh_blake3::portable::compress_in_place (14 samples, 0.12%)</title><rect x="3.1853%" y="373" width="0.1189%" height="15" fill="rgb(236,212,23)" fg:x="375" fg:w="14"/><text x="3.4353%" y="383.50"></text></g><g><title>iroh`bao_tree::recursive_hash_subtree (76 samples, 0.65%)</title><rect x="2.6671%" y="389" width="0.6455%" height="15" fill="rgb(242,79,21)" fg:x="314" fg:w="76"/><text x="2.9171%" y="399.50"></text></g><g><title>iroh`iroh_blake3::guts::ChunkState::finalize (2 samples, 0.02%)</title><rect x="3.3127%" y="389" width="0.0170%" height="15" fill="rgb(211,96,35)" fg:x="390" fg:w="2"/><text x="3.5627%" y="399.50"></text></g><g><title>iroh`bao_tree::recursive_hash_subtree (92 samples, 0.78%)</title><rect x="2.6671%" y="405" width="0.7814%" height="15" fill="rgb(253,215,40)" fg:x="314" fg:w="92"/><text x="2.9171%" y="415.50"></text></g><g><title>iroh`iroh_blake3::portable::compress_in_place (14 samples, 0.12%)</title><rect x="3.3297%" y="389" width="0.1189%" height="15" fill="rgb(211,81,21)" fg:x="392" fg:w="14"/><text x="3.5797%" y="399.50"></text></g><g><title>iroh`iroh_blake3::compress_parents_parallel (2 samples, 0.02%)</title><rect x="3.4656%" y="357" width="0.0170%" height="15" fill="rgb(208,190,38)" fg:x="408" fg:w="2"/><text x="3.7156%" y="367.50"></text></g><g><title>iroh`iroh_blake3::portable::compress_in_place (2 samples, 0.02%)</title><rect x="3.4656%" y="341" width="0.0170%" height="15" fill="rgb(235,213,38)" fg:x="408" fg:w="2"/><text x="3.7156%" y="351.50"></text></g><g><title>iroh`blake3_hash4_neon (2 samples, 0.02%)</title><rect x="3.4910%" y="309" width="0.0170%" height="15" fill="rgb(237,122,38)" fg:x="411" fg:w="2"/><text x="3.7410%" y="319.50"></text></g><g><title>iroh`iroh_blake3::compress_parents_parallel (3 samples, 0.03%)</title><rect x="3.4910%" y="325" width="0.0255%" height="15" fill="rgb(244,218,35)" fg:x="411" fg:w="3"/><text x="3.7410%" y="335.50"></text></g><g><title>iroh`blake3_hash4_neon (86 samples, 0.73%)</title><rect x="3.5165%" y="309" width="0.7305%" height="15" fill="rgb(240,68,47)" fg:x="414" fg:w="86"/><text x="3.7665%" y="319.50"></text></g><g><title>iroh`iroh_blake3::Hasher::update (94 samples, 0.80%)</title><rect x="3.4656%" y="389" width="0.7984%" height="15" fill="rgb(210,16,53)" fg:x="408" fg:w="94"/><text x="3.7156%" y="399.50"></text></g><g><title>iroh`iroh_blake3::compress_subtree_to_parent_node (94 samples, 0.80%)</title><rect x="3.4656%" y="373" width="0.7984%" height="15" fill="rgb(235,124,12)" fg:x="408" fg:w="94"/><text x="3.7156%" y="383.50"></text></g><g><title>iroh`iroh_blake3::compress_subtree_wide (92 samples, 0.78%)</title><rect x="3.4825%" y="357" width="0.7814%" height="15" fill="rgb(224,169,11)" fg:x="410" fg:w="92"/><text x="3.7325%" y="367.50"></text></g><g><title>iroh`iroh_blake3::compress_subtree_wide (91 samples, 0.77%)</title><rect x="3.4910%" y="341" width="0.7730%" height="15" fill="rgb(250,166,2)" fg:x="411" fg:w="91"/><text x="3.7410%" y="351.50"></text></g><g><title>iroh`iroh_blake3::compress_subtree_wide (88 samples, 0.75%)</title><rect x="3.5165%" y="325" width="0.7475%" height="15" fill="rgb(242,216,29)" fg:x="414" fg:w="88"/><text x="3.7665%" y="335.50"></text></g><g><title>iroh`blake3_hash_many_neon (2 samples, 0.02%)</title><rect x="4.2470%" y="309" width="0.0170%" height="15" fill="rgb(230,116,27)" fg:x="500" fg:w="2"/><text x="4.4970%" y="319.50"></text></g><g><title>iroh`iroh_blake3::guts::hash_subtree (96 samples, 0.82%)</title><rect x="3.4571%" y="405" width="0.8154%" height="15" fill="rgb(228,99,48)" fg:x="407" fg:w="96"/><text x="3.7071%" y="415.50"></text></g><g><title>iroh`iroh_blake3::portable::compress_in_place (2 samples, 0.02%)</title><rect x="4.2725%" y="405" width="0.0170%" height="15" fill="rgb(253,11,6)" fg:x="503" fg:w="2"/><text x="4.5225%" y="415.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.03%)</title><rect x="4.3574%" y="293" width="0.0255%" height="15" fill="rgb(247,143,39)" fg:x="513" fg:w="3"/><text x="4.6074%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.02%)</title><rect x="4.3659%" y="277" width="0.0170%" height="15" fill="rgb(236,97,10)" fg:x="514" fg:w="2"/><text x="4.6159%" y="287.50"></text></g><g><title>iroh`tokio::runtime::driver::Handle::unpark (4 samples, 0.03%)</title><rect x="4.3829%" y="293" width="0.0340%" height="15" fill="rgb(233,208,19)" fg:x="516" fg:w="4"/><text x="4.6329%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`kevent (4 samples, 0.03%)</title><rect x="4.3829%" y="277" width="0.0340%" height="15" fill="rgb(216,164,2)" fg:x="516" fg:w="4"/><text x="4.6329%" y="287.50"></text></g><g><title>iroh`&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (9 samples, 0.08%)</title><rect x="4.3574%" y="325" width="0.0764%" height="15" fill="rgb(220,129,5)" fg:x="513" fg:w="9"/><text x="4.6074%" y="335.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (9 samples, 0.08%)</title><rect x="4.3574%" y="309" width="0.0764%" height="15" fill="rgb(242,17,10)" fg:x="513" fg:w="9"/><text x="4.6074%" y="319.50"></text></g><g><title>iroh`flume::Shared&lt;T&gt;::send_sync (13 samples, 0.11%)</title><rect x="4.3404%" y="341" width="0.1104%" height="15" fill="rgb(242,107,0)" fg:x="511" fg:w="13"/><text x="4.5904%" y="351.50"></text></g><g><title>iroh`iroh::node::RpcHandler&lt;D,S&gt;::blob_add_from_path0::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="4.4509%" y="341" width="0.0170%" height="15" fill="rgb(251,28,31)" fg:x="524" fg:w="2"/><text x="4.7009%" y="351.50"></text></g><g><title>iroh`&lt;iroh_bytes::util::progress::WithFilterMap&lt;I,U,F&gt; as iroh_bytes::util::progress::ProgressSender&gt;::try_send (16 samples, 0.14%)</title><rect x="4.3404%" y="357" width="0.1359%" height="15" fill="rgb(233,223,10)" fg:x="511" fg:w="16"/><text x="4.5904%" y="367.50"></text></g><g><title>iroh`std::io::default_read_buf (819 samples, 6.96%)</title><rect x="4.3319%" y="373" width="6.9566%" height="15" fill="rgb(215,21,27)" fg:x="510" fg:w="819"/><text x="4.5819%" y="383.50">iroh`std:..</text></g><g><title>libsystem_kernel.dylib`read (801 samples, 6.80%)</title><rect x="4.4848%" y="357" width="6.8037%" height="15" fill="rgb(232,23,21)" fg:x="528" fg:w="801"/><text x="4.7348%" y="367.50">libsystem..</text></g><g><title>iroh`&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1,006 samples, 8.54%)</title><rect x="4.3235%" y="389" width="8.5450%" height="15" fill="rgb(244,5,23)" fg:x="509" fg:w="1006"/><text x="4.5735%" y="399.50">iroh`&lt;std::i..</text></g><g><title>libsystem_platform.dylib`__bzero (186 samples, 1.58%)</title><rect x="11.2885%" y="373" width="1.5799%" height="15" fill="rgb(226,81,46)" fg:x="1329" fg:w="186"/><text x="11.5385%" y="383.50"></text></g><g><title>iroh`std::io::default_read_buf (2 samples, 0.02%)</title><rect x="12.8684%" y="389" width="0.0170%" height="15" fill="rgb(247,70,30)" fg:x="1515" fg:w="2"/><text x="13.1184%" y="399.50"></text></g><g><title>iroh`std::io::default_read_exact (1,014 samples, 8.61%)</title><rect x="4.2895%" y="405" width="8.6129%" height="15" fill="rgb(212,68,19)" fg:x="505" fg:w="1014"/><text x="4.5395%" y="415.50">iroh`std::io..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="12.8854%" y="389" width="0.0170%" height="15" fill="rgb(240,187,13)" fg:x="1517" fg:w="2"/><text x="13.1354%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.05%)</title><rect x="12.9109%" y="373" width="0.0510%" height="15" fill="rgb(223,113,26)" fg:x="1520" fg:w="6"/><text x="13.1609%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.05%)</title><rect x="12.9109%" y="357" width="0.0510%" height="15" fill="rgb(206,192,2)" fg:x="1520" fg:w="6"/><text x="13.1609%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.02%)</title><rect x="12.9449%" y="341" width="0.0170%" height="15" fill="rgb(241,108,4)" fg:x="1524" fg:w="2"/><text x="13.1949%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (31 samples, 0.26%)</title><rect x="12.9024%" y="405" width="0.2633%" height="15" fill="rgb(247,173,49)" fg:x="1519" fg:w="31"/><text x="13.1524%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.26%)</title><rect x="12.9024%" y="389" width="0.2633%" height="15" fill="rgb(224,114,35)" fg:x="1519" fg:w="31"/><text x="13.1524%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (24 samples, 0.20%)</title><rect x="12.9619%" y="373" width="0.2039%" height="15" fill="rgb(245,159,27)" fg:x="1526" fg:w="24"/><text x="13.2119%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="13.1657%" y="405" width="0.0255%" height="15" fill="rgb(245,172,44)" fg:x="1550" fg:w="3"/><text x="13.4157%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.05%)</title><rect x="13.1912%" y="405" width="0.0510%" height="15" fill="rgb(236,23,11)" fg:x="1553" fg:w="6"/><text x="13.4412%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (3 samples, 0.03%)</title><rect x="13.2167%" y="389" width="0.0255%" height="15" fill="rgb(205,117,38)" fg:x="1556" fg:w="3"/><text x="13.4667%" y="399.50"></text></g><g><title>iroh`bao_tree::io::sync::outboard_post_order (1,262 samples, 10.72%)</title><rect x="2.5397%" y="421" width="10.7194%" height="15" fill="rgb(237,72,25)" fg:x="299" fg:w="1262"/><text x="2.7897%" y="431.50">iroh`bao_tree::i..</text></g><g><title>iroh`bao_tree::tree::ByteNum::to_usize (2 samples, 0.02%)</title><rect x="13.2592%" y="421" width="0.0170%" height="15" fill="rgb(244,70,9)" fg:x="1561" fg:w="2"/><text x="13.5092%" y="431.50"></text></g><g><title>iroh`core::ffi::c_str::CStr::from_bytes_with_nul (8 samples, 0.07%)</title><rect x="13.2761%" y="421" width="0.0680%" height="15" fill="rgb(217,125,39)" fg:x="1563" fg:w="8"/><text x="13.5261%" y="431.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;iroh_bytes::util::progress::FlumeProgressSender&lt;iroh_bytes::provider::AddProgress&gt;&gt; (2 samples, 0.02%)</title><rect x="13.3526%" y="421" width="0.0170%" height="15" fill="rgb(235,36,10)" fg:x="1572" fg:w="2"/><text x="13.6026%" y="431.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;iroh_bytes::util::progress::WithFilterMap&lt;iroh_bytes::util::progress::FlumeProgressSender&lt;iroh_bytes::provider::AddProgress&gt;,iroh_bytes::baomap::ImportProgress,iroh::node::RpcHandler&lt;iroh::baomap::flat::Store,iroh_sync::store::fs::Store&gt;::blob_add_from_path0::{{closure}}::{{closure}}&gt;&gt; (3 samples, 0.03%)</title><rect x="13.3696%" y="421" width="0.0255%" height="15" fill="rgb(251,123,47)" fg:x="1574" fg:w="3"/><text x="13.6196%" y="431.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;iroh_bytes::util::progress::FlumeProgressSender&lt;iroh_bytes::provider::AddProgress&gt;&gt; (3 samples, 0.03%)</title><rect x="13.3696%" y="405" width="0.0255%" height="15" fill="rgb(221,13,13)" fg:x="1574" fg:w="3"/><text x="13.6196%" y="415.50"></text></g><g><title>iroh`iroh::baomap::flat::CompleteEntry::union_with (6 samples, 0.05%)</title><rect x="13.4036%" y="421" width="0.0510%" height="15" fill="rgb(238,131,9)" fg:x="1578" fg:w="6"/><text x="13.6536%" y="431.50"></text></g><g><title>iroh`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="13.4545%" y="405" width="0.0255%" height="15" fill="rgb(211,50,8)" fg:x="1584" fg:w="3"/><text x="13.7045%" y="415.50"></text></g><g><title>iroh`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="13.4970%" y="389" width="0.0170%" height="15" fill="rgb(245,182,24)" fg:x="1589" fg:w="2"/><text x="13.7470%" y="399.50"></text></g><g><title>iroh`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="13.5140%" y="389" width="0.0255%" height="15" fill="rgb(242,14,37)" fg:x="1591" fg:w="3"/><text x="13.7640%" y="399.50"></text></g><g><title>iroh`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.07%)</title><rect x="13.5564%" y="373" width="0.0680%" height="15" fill="rgb(246,228,12)" fg:x="1596" fg:w="8"/><text x="13.8064%" y="383.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.07%)</title><rect x="13.5564%" y="357" width="0.0680%" height="15" fill="rgb(213,55,15)" fg:x="1596" fg:w="8"/><text x="13.8064%" y="367.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (8 samples, 0.07%)</title><rect x="13.5564%" y="341" width="0.0680%" height="15" fill="rgb(209,9,3)" fg:x="1596" fg:w="8"/><text x="13.8064%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (7 samples, 0.06%)</title><rect x="13.5649%" y="325" width="0.0595%" height="15" fill="rgb(230,59,30)" fg:x="1597" fg:w="7"/><text x="13.8149%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.03%)</title><rect x="13.5904%" y="309" width="0.0340%" height="15" fill="rgb(209,121,21)" fg:x="1600" fg:w="4"/><text x="13.8404%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.03%)</title><rect x="13.5904%" y="293" width="0.0340%" height="15" fill="rgb(220,109,13)" fg:x="1600" fg:w="4"/><text x="13.8404%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.02%)</title><rect x="13.6074%" y="277" width="0.0170%" height="15" fill="rgb(232,18,1)" fg:x="1602" fg:w="2"/><text x="13.8574%" y="287.50"></text></g><g><title>iroh`core::fmt::Formatter::pad (2 samples, 0.02%)</title><rect x="13.6244%" y="373" width="0.0170%" height="15" fill="rgb(215,41,42)" fg:x="1604" fg:w="2"/><text x="13.8744%" y="383.50"></text></g><g><title>iroh`&lt;iroh::baomap::flat::FileName as core::fmt::Display&gt;::fmt (20 samples, 0.17%)</title><rect x="13.4800%" y="405" width="0.1699%" height="15" fill="rgb(224,123,36)" fg:x="1587" fg:w="20"/><text x="13.7300%" y="415.50"></text></g><g><title>iroh`core::fmt::write (12 samples, 0.10%)</title><rect x="13.5479%" y="389" width="0.1019%" height="15" fill="rgb(240,125,3)" fg:x="1595" fg:w="12"/><text x="13.7979%" y="399.50"></text></g><g><title>iroh`iroh::baomap::flat::Options::owned_data_path (28 samples, 0.24%)</title><rect x="13.4545%" y="421" width="0.2378%" height="15" fill="rgb(205,98,50)" fg:x="1584" fg:w="28"/><text x="13.7045%" y="431.50"></text></g><g><title>iroh`std::path::Path::_join (3 samples, 0.03%)</title><rect x="13.6669%" y="405" width="0.0255%" height="15" fill="rgb(205,185,37)" fg:x="1609" fg:w="3"/><text x="13.9169%" y="415.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="13.6754%" y="389" width="0.0170%" height="15" fill="rgb(238,207,15)" fg:x="1610" fg:w="2"/><text x="13.9254%" y="399.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="13.6754%" y="373" width="0.0170%" height="15" fill="rgb(213,199,42)" fg:x="1610" fg:w="2"/><text x="13.9254%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="13.6754%" y="357" width="0.0170%" height="15" fill="rgb(235,201,11)" fg:x="1610" fg:w="2"/><text x="13.9254%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="13.6754%" y="341" width="0.0170%" height="15" fill="rgb(207,46,11)" fg:x="1610" fg:w="2"/><text x="13.9254%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="13.6754%" y="325" width="0.0170%" height="15" fill="rgb(241,35,35)" fg:x="1610" fg:w="2"/><text x="13.9254%" y="335.50"></text></g><g><title>iroh`iroh::baomap::flat::Options::owned_outboard_path (2 samples, 0.02%)</title><rect x="13.6923%" y="421" width="0.0170%" height="15" fill="rgb(243,32,47)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="431.50"></text></g><g><title>iroh`std::path::Path::_join (2 samples, 0.02%)</title><rect x="13.6923%" y="405" width="0.0170%" height="15" fill="rgb(247,202,23)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="415.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="13.6923%" y="389" width="0.0170%" height="15" fill="rgb(219,102,11)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="399.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="13.6923%" y="373" width="0.0170%" height="15" fill="rgb(243,110,44)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="13.6923%" y="357" width="0.0170%" height="15" fill="rgb(222,74,54)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="13.6923%" y="341" width="0.0170%" height="15" fill="rgb(216,99,12)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="13.6923%" y="325" width="0.0170%" height="15" fill="rgb(226,22,26)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="13.6923%" y="309" width="0.0170%" height="15" fill="rgb(217,163,10)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="13.6923%" y="293" width="0.0170%" height="15" fill="rgb(213,25,53)" fg:x="1612" fg:w="2"/><text x="13.9423%" y="303.50"></text></g><g><title>iroh`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="13.7178%" y="389" width="0.0340%" height="15" fill="rgb(252,105,26)" fg:x="1615" fg:w="4"/><text x="13.9678%" y="399.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="13.7263%" y="373" width="0.0255%" height="15" fill="rgb(220,39,43)" fg:x="1616" fg:w="3"/><text x="13.9763%" y="383.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="13.7263%" y="357" width="0.0255%" height="15" fill="rgb(229,68,48)" fg:x="1616" fg:w="3"/><text x="13.9763%" y="367.50"></text></g><g><title>iroh`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (3 samples, 0.03%)</title><rect x="13.7518%" y="389" width="0.0255%" height="15" fill="rgb(252,8,32)" fg:x="1619" fg:w="3"/><text x="14.0018%" y="399.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="13.8113%" y="325" width="0.0255%" height="15" fill="rgb(223,20,43)" fg:x="1626" fg:w="3"/><text x="14.0613%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="13.8198%" y="309" width="0.0170%" height="15" fill="rgb(229,81,49)" fg:x="1627" fg:w="2"/><text x="14.0698%" y="319.50"></text></g><g><title>iroh`alloc::fmt::format::format_inner (8 samples, 0.07%)</title><rect x="13.7773%" y="389" width="0.0680%" height="15" fill="rgb(236,28,36)" fg:x="1622" fg:w="8"/><text x="14.0273%" y="399.50"></text></g><g><title>iroh`core::fmt::write (5 samples, 0.04%)</title><rect x="13.8028%" y="373" width="0.0425%" height="15" fill="rgb(249,185,26)" fg:x="1625" fg:w="5"/><text x="14.0528%" y="383.50"></text></g><g><title>iroh`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="13.8113%" y="357" width="0.0340%" height="15" fill="rgb(249,174,33)" fg:x="1626" fg:w="4"/><text x="14.0613%" y="367.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="13.8113%" y="341" width="0.0340%" height="15" fill="rgb(233,201,37)" fg:x="1626" fg:w="4"/><text x="14.0613%" y="351.50"></text></g><g><title>iroh`rand::rngs::thread::thread_rng (6 samples, 0.05%)</title><rect x="13.9302%" y="373" width="0.0510%" height="15" fill="rgb(221,78,26)" fg:x="1640" fg:w="6"/><text x="14.1802%" y="383.50"></text></g><g><title>iroh`iroh::baomap::new_uuid (16 samples, 0.14%)</title><rect x="13.8537%" y="389" width="0.1359%" height="15" fill="rgb(250,127,30)" fg:x="1631" fg:w="16"/><text x="14.1037%" y="399.50"></text></g><g><title>iroh`iroh::baomap::temp_name (33 samples, 0.28%)</title><rect x="13.7178%" y="405" width="0.2803%" height="15" fill="rgb(230,49,44)" fg:x="1615" fg:w="33"/><text x="13.9678%" y="415.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="14.0066%" y="389" width="0.0170%" height="15" fill="rgb(229,67,23)" fg:x="1649" fg:w="2"/><text x="14.2566%" y="399.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="14.0066%" y="373" width="0.0170%" height="15" fill="rgb(249,83,47)" fg:x="1649" fg:w="2"/><text x="14.2566%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="14.0066%" y="357" width="0.0170%" height="15" fill="rgb(215,43,3)" fg:x="1649" fg:w="2"/><text x="14.2566%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="14.0066%" y="341" width="0.0170%" height="15" fill="rgb(238,154,13)" fg:x="1649" fg:w="2"/><text x="14.2566%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="14.0066%" y="325" width="0.0170%" height="15" fill="rgb(219,56,2)" fg:x="1649" fg:w="2"/><text x="14.2566%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="14.0066%" y="309" width="0.0170%" height="15" fill="rgb(233,0,4)" fg:x="1649" fg:w="2"/><text x="14.2566%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="14.0066%" y="293" width="0.0170%" height="15" fill="rgb(235,30,7)" fg:x="1649" fg:w="2"/><text x="14.2566%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.02%)</title><rect x="14.0066%" y="277" width="0.0170%" height="15" fill="rgb(250,79,13)" fg:x="1649" fg:w="2"/><text x="14.2566%" y="287.50"></text></g><g><title>iroh`iroh::baomap::flat::Store::temp_path (39 samples, 0.33%)</title><rect x="13.7093%" y="421" width="0.3313%" height="15" fill="rgb(211,146,34)" fg:x="1614" fg:w="39"/><text x="13.9593%" y="431.50"></text></g><g><title>iroh`std::path::Path::_join (5 samples, 0.04%)</title><rect x="13.9981%" y="405" width="0.0425%" height="15" fill="rgb(228,22,38)" fg:x="1648" fg:w="5"/><text x="14.2481%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="14.0236%" y="389" width="0.0170%" height="15" fill="rgb(235,168,5)" fg:x="1651" fg:w="2"/><text x="14.2736%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="14.0236%" y="373" width="0.0170%" height="15" fill="rgb(221,155,16)" fg:x="1651" fg:w="2"/><text x="14.2736%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="14.0236%" y="357" width="0.0170%" height="15" fill="rgb(215,215,53)" fg:x="1651" fg:w="2"/><text x="14.2736%" y="367.50"></text></g><g><title>iroh`iroh::baomap::temp_name (2 samples, 0.02%)</title><rect x="14.0406%" y="421" width="0.0170%" height="15" fill="rgb(223,4,10)" fg:x="1653" fg:w="2"/><text x="14.2906%" y="431.50"></text></g><g><title>iroh`&lt;iroh::baomap::flat::Inner as iroh_bytes::baomap::LivenessTracker&gt;::on_clone (10 samples, 0.08%)</title><rect x="14.0661%" y="405" width="0.0849%" height="15" fill="rgb(234,103,6)" fg:x="1656" fg:w="10"/><text x="14.3161%" y="415.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="14.1340%" y="389" width="0.0170%" height="15" fill="rgb(227,97,0)" fg:x="1664" fg:w="2"/><text x="14.3840%" y="399.50"></text></g><g><title>iroh`&lt;iroh_bytes::util::Hash as core::cmp::Ord&gt;::cmp (3 samples, 0.03%)</title><rect x="14.1510%" y="405" width="0.0255%" height="15" fill="rgb(234,150,53)" fg:x="1666" fg:w="3"/><text x="14.4010%" y="415.50"></text></g><g><title>iroh`iroh_bytes::baomap::TempTag::new (14 samples, 0.12%)</title><rect x="14.0661%" y="421" width="0.1189%" height="15" fill="rgb(228,201,54)" fg:x="1656" fg:w="14"/><text x="14.3161%" y="431.50"></text></g><g><title>iroh`positioned_io::ReadAt::read_exact_at (4 samples, 0.03%)</title><rect x="14.1850%" y="421" width="0.0340%" height="15" fill="rgb(222,22,37)" fg:x="1670" fg:w="4"/><text x="14.4350%" y="431.50"></text></g><g><title>iroh`&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.02%)</title><rect x="14.2360%" y="389" width="0.0170%" height="15" fill="rgb(237,53,32)" fg:x="1676" fg:w="2"/><text x="14.4860%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.03%)</title><rect x="14.2614%" y="389" width="0.0340%" height="15" fill="rgb(233,25,53)" fg:x="1679" fg:w="4"/><text x="14.5114%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.03%)</title><rect x="14.2614%" y="373" width="0.0340%" height="15" fill="rgb(210,40,34)" fg:x="1679" fg:w="4"/><text x="14.5114%" y="383.50"></text></g><g><title>iroh`reflink_copy::sys::unix::macos::reflink (9 samples, 0.08%)</title><rect x="14.2275%" y="405" width="0.0764%" height="15" fill="rgb(241,220,44)" fg:x="1675" fg:w="9"/><text x="14.4775%" y="415.50"></text></g><g><title>iroh`std::path::Path::is_file (28 samples, 0.24%)</title><rect x="14.3039%" y="405" width="0.2378%" height="15" fill="rgb(235,28,35)" fg:x="1684" fg:w="28"/><text x="14.5539%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`stat (28 samples, 0.24%)</title><rect x="14.3039%" y="389" width="0.2378%" height="15" fill="rgb(210,56,17)" fg:x="1684" fg:w="28"/><text x="14.5539%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`clonefile (4 samples, 0.03%)</title><rect x="14.5417%" y="405" width="0.0340%" height="15" fill="rgb(224,130,29)" fg:x="1712" fg:w="4"/><text x="14.7917%" y="415.50"></text></g><g><title>iroh`reflink_copy::reflink_or_copy::inner (2,623 samples, 22.28%)</title><rect x="14.2190%" y="421" width="22.2798%" height="15" fill="rgb(235,212,8)" fg:x="1674" fg:w="2623"/><text x="14.4690%" y="431.50">iroh`reflink_copy::reflink_or_copy:..</text></g><g><title>libsystem_kernel.dylib`clonefileat (2,581 samples, 21.92%)</title><rect x="14.5757%" y="405" width="21.9230%" height="15" fill="rgb(223,33,50)" fg:x="1716" fg:w="2581"/><text x="14.8257%" y="415.50">libsystem_kernel.dylib`clonefileat</text></g><g><title>libsystem_kernel.dylib`__open (345 samples, 2.93%)</title><rect x="36.4988%" y="389" width="2.9304%" height="15" fill="rgb(219,149,13)" fg:x="4297" fg:w="345"/><text x="36.7488%" y="399.50">li..</text></g><g><title>iroh`std::fs::OpenOptions::_open (346 samples, 2.94%)</title><rect x="36.4988%" y="421" width="2.9389%" height="15" fill="rgb(250,156,29)" fg:x="4297" fg:w="346"/><text x="36.7488%" y="431.50">ir..</text></g><g><title>iroh`std::sys::unix::fs::File::open_c (346 samples, 2.94%)</title><rect x="36.4988%" y="405" width="2.9389%" height="15" fill="rgb(216,193,19)" fg:x="4297" fg:w="346"/><text x="36.7488%" y="415.50">ir..</text></g><g><title>libsystem_kernel.dylib`__rename (1,888 samples, 16.04%)</title><rect x="39.4887%" y="389" width="16.0367%" height="15" fill="rgb(216,135,14)" fg:x="4649" fg:w="1888"/><text x="39.7387%" y="399.50">libsystem_kernel.dylib`__..</text></g><g><title>iroh`std::sys::unix::fs::rename (1,894 samples, 16.09%)</title><rect x="39.4462%" y="405" width="16.0877%" height="15" fill="rgb(241,47,5)" fg:x="4644" fg:w="1894"/><text x="39.6962%" y="415.50">iroh`std::sys::unix::fs::..</text></g><g><title>iroh`std::fs::rename (1,896 samples, 16.10%)</title><rect x="39.4377%" y="421" width="16.1046%" height="15" fill="rgb(233,42,35)" fg:x="4643" fg:w="1896"/><text x="39.6877%" y="431.50">iroh`std::fs::rename</text></g><g><title>iroh`std::fs::write::inner (115 samples, 0.98%)</title><rect x="55.5508%" y="405" width="0.9768%" height="15" fill="rgb(231,13,6)" fg:x="6540" fg:w="115"/><text x="55.8008%" y="415.50"></text></g><g><title>iroh`std::sys::unix::fs::File::open_c (115 samples, 0.98%)</title><rect x="55.5508%" y="389" width="0.9768%" height="15" fill="rgb(207,181,40)" fg:x="6540" fg:w="115"/><text x="55.8008%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__open (115 samples, 0.98%)</title><rect x="55.5508%" y="373" width="0.9768%" height="15" fill="rgb(254,173,49)" fg:x="6540" fg:w="115"/><text x="55.8008%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`close (78 samples, 0.66%)</title><rect x="56.5276%" y="405" width="0.6625%" height="15" fill="rgb(221,1,38)" fg:x="6655" fg:w="78"/><text x="56.7776%" y="415.50"></text></g><g><title>iroh`std::fs::write (284 samples, 2.41%)</title><rect x="55.5423%" y="421" width="2.4123%" height="15" fill="rgb(206,124,46)" fg:x="6539" fg:w="284"/><text x="55.7923%" y="431.50">ir..</text></g><g><title>libsystem_kernel.dylib`write (90 samples, 0.76%)</title><rect x="57.1902%" y="405" width="0.7645%" height="15" fill="rgb(249,21,11)" fg:x="6733" fg:w="90"/><text x="57.4402%" y="415.50"></text></g><g><title>iroh`std::path::Path::_join (4 samples, 0.03%)</title><rect x="57.9631%" y="421" width="0.0340%" height="15" fill="rgb(222,201,40)" fg:x="6824" fg:w="4"/><text x="58.2131%" y="431.50"></text></g><g><title>iroh`core::ffi::c_str::CStr::from_bytes_with_nul (2 samples, 0.02%)</title><rect x="58.0056%" y="405" width="0.0170%" height="15" fill="rgb(235,61,29)" fg:x="6829" fg:w="2"/><text x="58.2556%" y="415.50"></text></g><g><title>iroh`std::path::Path::is_file (198 samples, 1.68%)</title><rect x="57.9971%" y="421" width="1.6818%" height="15" fill="rgb(219,207,3)" fg:x="6828" fg:w="198"/><text x="58.2471%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`stat (194 samples, 1.65%)</title><rect x="58.0311%" y="405" width="1.6478%" height="15" fill="rgb(222,56,46)" fg:x="6832" fg:w="194"/><text x="58.2811%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`close (60 samples, 0.51%)</title><rect x="59.6874%" y="421" width="0.5096%" height="15" fill="rgb(239,76,54)" fg:x="7027" fg:w="60"/><text x="59.9374%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`stat (474 samples, 4.03%)</title><rect x="60.1971%" y="421" width="4.0262%" height="15" fill="rgb(231,124,27)" fg:x="7087" fg:w="474"/><text x="60.4471%" y="431.50">libs..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.04%)</title><rect x="64.2232%" y="421" width="0.0425%" height="15" fill="rgb(249,195,6)" fg:x="7561" fg:w="5"/><text x="64.4732%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.03%)</title><rect x="64.2317%" y="405" width="0.0340%" height="15" fill="rgb(237,174,47)" fg:x="7562" fg:w="4"/><text x="64.4817%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.03%)</title><rect x="64.2317%" y="389" width="0.0340%" height="15" fill="rgb(206,201,31)" fg:x="7562" fg:w="4"/><text x="64.4817%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.03%)</title><rect x="64.2317%" y="373" width="0.0340%" height="15" fill="rgb(231,57,52)" fg:x="7562" fg:w="4"/><text x="64.4817%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`medium_size (6 samples, 0.05%)</title><rect x="64.2912%" y="405" width="0.0510%" height="15" fill="rgb(248,177,22)" fg:x="7569" fg:w="6"/><text x="64.5412%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.10%)</title><rect x="64.2742%" y="421" width="0.1019%" height="15" fill="rgb(215,211,37)" fg:x="7567" fg:w="12"/><text x="64.5242%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.03%)</title><rect x="64.3421%" y="405" width="0.0340%" height="15" fill="rgb(241,128,51)" fg:x="7575" fg:w="4"/><text x="64.5921%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.02%)</title><rect x="64.3761%" y="421" width="0.0170%" height="15" fill="rgb(227,165,31)" fg:x="7579" fg:w="2"/><text x="64.6261%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.03%)</title><rect x="64.3931%" y="421" width="0.0340%" height="15" fill="rgb(228,167,24)" fg:x="7581" fg:w="4"/><text x="64.6431%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (64 samples, 0.54%)</title><rect x="64.4356%" y="405" width="0.5436%" height="15" fill="rgb(228,143,12)" fg:x="7586" fg:w="64"/><text x="64.6856%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (66 samples, 0.56%)</title><rect x="64.4271%" y="421" width="0.5606%" height="15" fill="rgb(249,149,8)" fg:x="7585" fg:w="66"/><text x="64.6771%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (42 samples, 0.36%)</title><rect x="64.9962%" y="421" width="0.3567%" height="15" fill="rgb(243,35,44)" fg:x="7652" fg:w="42"/><text x="65.2462%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (42 samples, 0.36%)</title><rect x="64.9962%" y="405" width="0.3567%" height="15" fill="rgb(246,89,9)" fg:x="7652" fg:w="42"/><text x="65.2462%" y="415.50"></text></g><g><title>iroh`iroh::baomap::flat::Store::import_file_sync (7,549 samples, 64.12%)</title><rect x="1.2656%" y="437" width="64.1213%" height="15" fill="rgb(233,213,13)" fg:x="149" fg:w="7549"/><text x="1.5156%" y="447.50">iroh`iroh::baomap::flat::Store::import_file_sync</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="65.3614%" y="421" width="0.0255%" height="15" fill="rgb(233,141,41)" fg:x="7695" fg:w="3"/><text x="65.6114%" y="431.50"></text></g><g><title>iroh`iroh::baomap::flat::Store::owned_data_path (2 samples, 0.02%)</title><rect x="65.3869%" y="437" width="0.0170%" height="15" fill="rgb(239,167,4)" fg:x="7698" fg:w="2"/><text x="65.6369%" y="447.50"></text></g><g><title>iroh`reflink_copy::reflink_or_copy::inner (2 samples, 0.02%)</title><rect x="65.4209%" y="437" width="0.0170%" height="15" fill="rgb(209,217,16)" fg:x="7702" fg:w="2"/><text x="65.6709%" y="447.50"></text></g><g><title>iroh`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (7,580 samples, 64.38%)</title><rect x="1.0702%" y="453" width="64.3846%" height="15" fill="rgb(219,88,35)" fg:x="126" fg:w="7580"/><text x="1.3202%" y="463.50">iroh`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>iroh`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="65.4549%" y="453" width="0.0170%" height="15" fill="rgb(220,193,23)" fg:x="7706" fg:w="2"/><text x="65.7049%" y="463.50"></text></g><g><title>iroh`__floatuntidf (2 samples, 0.02%)</title><rect x="65.4803%" y="421" width="0.0170%" height="15" fill="rgb(230,90,52)" fg:x="7709" fg:w="2"/><text x="65.7303%" y="431.50"></text></g><g><title>iroh`DYLD-STUB$$clock_gettime (2 samples, 0.02%)</title><rect x="65.7182%" y="405" width="0.0170%" height="15" fill="rgb(252,106,19)" fg:x="7737" fg:w="2"/><text x="65.9682%" y="415.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::park::Parker::park (3 samples, 0.03%)</title><rect x="65.7437%" y="405" width="0.0255%" height="15" fill="rgb(206,74,20)" fg:x="7740" fg:w="3"/><text x="65.9937%" y="415.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (2 samples, 0.02%)</title><rect x="65.7691%" y="405" width="0.0170%" height="15" fill="rgb(230,138,44)" fg:x="7743" fg:w="2"/><text x="66.0191%" y="415.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::wait_until_internal (2 samples, 0.02%)</title><rect x="65.8541%" y="389" width="0.0170%" height="15" fill="rgb(235,182,43)" fg:x="7753" fg:w="2"/><text x="66.1041%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (102 samples, 0.87%)</title><rect x="66.0155%" y="357" width="0.8664%" height="15" fill="rgb(242,16,51)" fg:x="7772" fg:w="102"/><text x="66.2655%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (7 samples, 0.06%)</title><rect x="66.8818%" y="357" width="0.0595%" height="15" fill="rgb(248,9,4)" fg:x="7874" fg:w="7"/><text x="67.1318%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (6 samples, 0.05%)</title><rect x="66.8903%" y="341" width="0.0510%" height="15" fill="rgb(210,31,22)" fg:x="7875" fg:w="6"/><text x="67.1403%" y="351.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::wait_until_internal (116 samples, 0.99%)</title><rect x="65.9645%" y="373" width="0.9853%" height="15" fill="rgb(239,54,39)" fg:x="7766" fg:w="116"/><text x="66.2145%" y="383.50"></text></g><g><title>iroh`mio::poll::Poll::poll (2 samples, 0.02%)</title><rect x="67.0262%" y="357" width="0.0170%" height="15" fill="rgb(230,99,41)" fg:x="7891" fg:w="2"/><text x="67.2762%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (5 samples, 0.04%)</title><rect x="67.0857%" y="325" width="0.0425%" height="15" fill="rgb(253,106,12)" fg:x="7898" fg:w="5"/><text x="67.3357%" y="335.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (10 samples, 0.08%)</title><rect x="67.0517%" y="341" width="0.0849%" height="15" fill="rgb(213,46,41)" fg:x="7894" fg:w="10"/><text x="67.3017%" y="351.50"></text></g><g><title>iroh`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (11 samples, 0.09%)</title><rect x="67.0517%" y="357" width="0.0934%" height="15" fill="rgb(215,133,35)" fg:x="7894" fg:w="11"/><text x="67.3017%" y="367.50"></text></g><g><title>iroh`mio::poll::Poll::poll (2 samples, 0.02%)</title><rect x="67.1876%" y="341" width="0.0170%" height="15" fill="rgb(213,28,5)" fg:x="7910" fg:w="2"/><text x="67.4376%" y="351.50"></text></g><g><title>iroh`tokio::runtime::io::scheduled_io::ScheduledIo::wake (3 samples, 0.03%)</title><rect x="67.2046%" y="341" width="0.0255%" height="15" fill="rgb(215,77,49)" fg:x="7912" fg:w="3"/><text x="67.4546%" y="351.50"></text></g><g><title>iroh`tokio::runtime::task::waker::wake_by_val (3 samples, 0.03%)</title><rect x="67.2046%" y="325" width="0.0255%" height="15" fill="rgb(248,100,22)" fg:x="7912" fg:w="3"/><text x="67.4546%" y="335.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (3 samples, 0.03%)</title><rect x="67.2046%" y="309" width="0.0255%" height="15" fill="rgb(208,67,9)" fg:x="7912" fg:w="3"/><text x="67.4546%" y="319.50"></text></g><g><title>iroh`tokio::runtime::context::with_scheduler (3 samples, 0.03%)</title><rect x="67.2046%" y="293" width="0.0255%" height="15" fill="rgb(219,133,21)" fg:x="7912" fg:w="3"/><text x="67.4546%" y="303.50"></text></g><g><title>iroh`tokio::runtime::io::driver::Driver::turn (128 samples, 1.09%)</title><rect x="67.1537%" y="357" width="1.0872%" height="15" fill="rgb(246,46,29)" fg:x="7906" fg:w="128"/><text x="67.4037%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`kevent (119 samples, 1.01%)</title><rect x="67.2301%" y="341" width="1.0108%" height="15" fill="rgb(246,185,52)" fg:x="7915" fg:w="119"/><text x="67.4801%" y="351.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (3 samples, 0.03%)</title><rect x="68.2494%" y="341" width="0.0255%" height="15" fill="rgb(252,136,11)" fg:x="8035" fg:w="3"/><text x="68.4994%" y="351.50"></text></g><g><title> 32]&gt; (3 samples, 0.03%)</title><rect x="68.2494%" y="325" width="0.0255%" height="15" fill="rgb(219,138,53)" fg:x="8035" fg:w="3"/><text x="68.4994%" y="335.50"></text></g><g><title>iroh`tokio::runtime::time::wheel::Wheel::poll (3 samples, 0.03%)</title><rect x="68.2834%" y="341" width="0.0255%" height="15" fill="rgb(211,51,23)" fg:x="8039" fg:w="3"/><text x="68.5334%" y="351.50"></text></g><g><title>iroh`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (8 samples, 0.07%)</title><rect x="68.2494%" y="357" width="0.0680%" height="15" fill="rgb(247,221,28)" fg:x="8035" fg:w="8"/><text x="68.4994%" y="367.50"></text></g><g><title>iroh`tokio::runtime::time::Driver::park_internal (162 samples, 1.38%)</title><rect x="66.9668%" y="373" width="1.3760%" height="15" fill="rgb(251,222,45)" fg:x="7884" fg:w="162"/><text x="67.2168%" y="383.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.02%)</title><rect x="68.3258%" y="357" width="0.0170%" height="15" fill="rgb(217,162,53)" fg:x="8044" fg:w="2"/><text x="68.5758%" y="367.50"></text></g><g><title>iroh`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (3 samples, 0.03%)</title><rect x="68.3428%" y="373" width="0.0255%" height="15" fill="rgb(229,93,14)" fg:x="8046" fg:w="3"/><text x="68.5928%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_wait (3 samples, 0.03%)</title><rect x="68.3683%" y="373" width="0.0255%" height="15" fill="rgb(209,67,49)" fg:x="8049" fg:w="3"/><text x="68.6183%" y="383.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::park::Parker::park (298 samples, 2.53%)</title><rect x="65.8711%" y="389" width="2.5312%" height="15" fill="rgb(213,87,29)" fg:x="7755" fg:w="298"/><text x="66.1211%" y="399.50">ir..</text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (313 samples, 2.66%)</title><rect x="65.7861%" y="405" width="2.6586%" height="15" fill="rgb(205,151,52)" fg:x="7745" fg:w="313"/><text x="66.0361%" y="415.50">ir..</text></g><g><title>iroh`tokio::runtime::time::Driver::park_internal (5 samples, 0.04%)</title><rect x="68.4023%" y="389" width="0.0425%" height="15" fill="rgb(253,215,39)" fg:x="8053" fg:w="5"/><text x="68.6523%" y="399.50"></text></g><g><title>iroh`tokio::runtime::io::driver::Driver::turn (5 samples, 0.04%)</title><rect x="68.4023%" y="373" width="0.0425%" height="15" fill="rgb(221,220,41)" fg:x="8053" fg:w="5"/><text x="68.6523%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`kevent (4 samples, 0.03%)</title><rect x="68.4108%" y="357" width="0.0340%" height="15" fill="rgb(218,133,21)" fg:x="8054" fg:w="4"/><text x="68.6608%" y="367.50"></text></g><g><title>iroh`parking_lot_core::parking_lot::lock_bucket_pair (2 samples, 0.02%)</title><rect x="68.5212%" y="373" width="0.0170%" height="15" fill="rgb(221,193,43)" fg:x="8067" fg:w="2"/><text x="68.7712%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (22 samples, 0.19%)</title><rect x="68.5382%" y="373" width="0.1869%" height="15" fill="rgb(240,128,52)" fg:x="8069" fg:w="22"/><text x="68.7882%" y="383.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::notify_one_slow (29 samples, 0.25%)</title><rect x="68.4957%" y="389" width="0.2463%" height="15" fill="rgb(253,114,12)" fg:x="8064" fg:w="29"/><text x="68.7457%" y="399.50"></text></g><g><title>iroh`tokio::runtime::driver::Handle::unpark (38 samples, 0.32%)</title><rect x="68.7420%" y="389" width="0.3228%" height="15" fill="rgb(215,223,47)" fg:x="8093" fg:w="38"/><text x="68.9920%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`kevent (37 samples, 0.31%)</title><rect x="68.7505%" y="373" width="0.3143%" height="15" fill="rgb(248,225,23)" fg:x="8094" fg:w="37"/><text x="69.0005%" y="383.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (2 samples, 0.02%)</title><rect x="69.0648%" y="389" width="0.0170%" height="15" fill="rgb(250,108,0)" fg:x="8131" fg:w="2"/><text x="69.3148%" y="399.50"></text></g><g><title>iroh`&lt;quinn::connection::ConnectionDriver as core::future::future::Future&gt;::poll (6 samples, 0.05%)</title><rect x="69.1413%" y="373" width="0.0510%" height="15" fill="rgb(228,208,7)" fg:x="8140" fg:w="6"/><text x="69.3913%" y="383.50"></text></g><g><title>iroh`quinn::endpoint::Endpoint::new_with_runtime::_{{closure}} (5 samples, 0.04%)</title><rect x="69.2007%" y="373" width="0.0425%" height="15" fill="rgb(244,45,10)" fg:x="8147" fg:w="5"/><text x="69.4507%" y="383.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::notify_one_slow (13 samples, 0.11%)</title><rect x="69.2517%" y="341" width="0.1104%" height="15" fill="rgb(207,125,25)" fg:x="8153" fg:w="13"/><text x="69.5017%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (12 samples, 0.10%)</title><rect x="69.2602%" y="325" width="0.1019%" height="15" fill="rgb(210,195,18)" fg:x="8154" fg:w="12"/><text x="69.5102%" y="335.50"></text></g><g><title>iroh`tokio::runtime::driver::Handle::unpark (2 samples, 0.02%)</title><rect x="69.3621%" y="341" width="0.0170%" height="15" fill="rgb(249,80,12)" fg:x="8166" fg:w="2"/><text x="69.6121%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.02%)</title><rect x="69.3621%" y="325" width="0.0170%" height="15" fill="rgb(221,65,9)" fg:x="8166" fg:w="2"/><text x="69.6121%" y="335.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (17 samples, 0.14%)</title><rect x="69.2432%" y="373" width="0.1444%" height="15" fill="rgb(235,49,36)" fg:x="8152" fg:w="17"/><text x="69.4932%" y="383.50"></text></g><g><title>iroh`tokio::runtime::context::with_scheduler (17 samples, 0.14%)</title><rect x="69.2432%" y="357" width="0.1444%" height="15" fill="rgb(225,32,20)" fg:x="8152" fg:w="17"/><text x="69.4932%" y="367.50"></text></g><g><title>iroh`&lt;quinn_proto::congestion::cubic::Cubic as quinn_proto::congestion::Controller&gt;::window (4 samples, 0.03%)</title><rect x="69.5235%" y="341" width="0.0340%" height="15" fill="rgb(215,141,46)" fg:x="8185" fg:w="4"/><text x="69.7735%" y="351.50"></text></g><g><title>iroh`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="69.5575%" y="341" width="0.0170%" height="15" fill="rgb(250,160,47)" fg:x="8189" fg:w="2"/><text x="69.8075%" y="351.50"></text></g><g><title>iroh`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="69.5829%" y="341" width="0.0255%" height="15" fill="rgb(216,222,40)" fg:x="8192" fg:w="3"/><text x="69.8329%" y="351.50"></text></g><g><title>iroh`quinn::mutex::non_tracking::Mutex&lt;T&gt;::lock (5 samples, 0.04%)</title><rect x="69.6254%" y="341" width="0.0425%" height="15" fill="rgb(234,217,39)" fg:x="8197" fg:w="5"/><text x="69.8754%" y="351.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::on_packet_authenticated (3 samples, 0.03%)</title><rect x="69.8123%" y="293" width="0.0255%" height="15" fill="rgb(207,178,40)" fg:x="8219" fg:w="3"/><text x="70.0623%" y="303.50"></text></g><g><title>iroh`quinn_proto::range_set::array_range_set::ArrayRangeSet::insert (2 samples, 0.02%)</title><rect x="69.8208%" y="277" width="0.0170%" height="15" fill="rgb(221,136,13)" fg:x="8220" fg:w="2"/><text x="70.0708%" y="287.50"></text></g><g><title>iroh`&lt;quinn_proto::frame::Iter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="69.9397%" y="261" width="0.0255%" height="15" fill="rgb(249,199,10)" fg:x="8234" fg:w="3"/><text x="70.1897%" y="271.50"></text></g><g><title>iroh`&lt;quinn_proto::varint::VarInt as quinn_proto::coding::Codec&gt;::decode (2 samples, 0.02%)</title><rect x="69.9482%" y="245" width="0.0170%" height="15" fill="rgb(249,222,13)" fg:x="8235" fg:w="2"/><text x="70.1982%" y="255.50"></text></g><g><title>iroh`&lt;quinn_proto::varint::VarInt as quinn_proto::coding::Codec&gt;::decode (2 samples, 0.02%)</title><rect x="69.9652%" y="261" width="0.0170%" height="15" fill="rgb(244,185,38)" fg:x="8237" fg:w="2"/><text x="70.2152%" y="271.50"></text></g><g><title>iroh`&lt;quinn_proto::varint::VarInt as quinn_proto::coding::Codec&gt;::decode (3 samples, 0.03%)</title><rect x="70.0671%" y="245" width="0.0255%" height="15" fill="rgb(236,202,9)" fg:x="8249" fg:w="3"/><text x="70.3171%" y="255.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (2 samples, 0.02%)</title><rect x="70.0926%" y="245" width="0.0170%" height="15" fill="rgb(250,229,37)" fg:x="8252" fg:w="2"/><text x="70.3426%" y="255.50"></text></g><g><title>iroh`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (2 samples, 0.02%)</title><rect x="70.0926%" y="229" width="0.0170%" height="15" fill="rgb(206,174,23)" fg:x="8252" fg:w="2"/><text x="70.3426%" y="239.50"></text></g><g><title>iroh`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (3 samples, 0.03%)</title><rect x="70.1096%" y="245" width="0.0255%" height="15" fill="rgb(211,33,43)" fg:x="8254" fg:w="3"/><text x="70.3596%" y="255.50"></text></g><g><title>iroh`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (2 samples, 0.02%)</title><rect x="70.1351%" y="245" width="0.0170%" height="15" fill="rgb(245,58,50)" fg:x="8257" fg:w="2"/><text x="70.3851%" y="255.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::detect_lost_packets (15 samples, 0.13%)</title><rect x="70.1520%" y="245" width="0.1274%" height="15" fill="rgb(244,68,36)" fg:x="8259" fg:w="15"/><text x="70.4020%" y="255.50"></text></g><g><title>iroh`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (4 samples, 0.03%)</title><rect x="70.2455%" y="229" width="0.0340%" height="15" fill="rgb(232,229,15)" fg:x="8270" fg:w="4"/><text x="70.4955%" y="239.50"></text></g><g><title>iroh`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="70.4408%" y="181" width="0.0170%" height="15" fill="rgb(254,30,23)" fg:x="8293" fg:w="2"/><text x="70.6908%" y="191.50"></text></g><g><title>iroh`alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_back_checked (2 samples, 0.02%)</title><rect x="70.4578%" y="181" width="0.0170%" height="15" fill="rgb(235,160,14)" fg:x="8295" fg:w="2"/><text x="70.7078%" y="191.50"></text></g><g><title>iroh`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (4 samples, 0.03%)</title><rect x="70.4748%" y="181" width="0.0340%" height="15" fill="rgb(212,155,44)" fg:x="8297" fg:w="4"/><text x="70.7248%" y="191.50"></text></g><g><title>iroh`quinn_proto::range_set::btree_range_set::RangeSet::insert (14 samples, 0.12%)</title><rect x="70.4069%" y="197" width="0.1189%" height="15" fill="rgb(226,2,50)" fg:x="8289" fg:w="14"/><text x="70.6569%" y="207.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="70.5088%" y="181" width="0.0170%" height="15" fill="rgb(234,177,6)" fg:x="8301" fg:w="2"/><text x="70.7588%" y="191.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (5 samples, 0.04%)</title><rect x="70.5428%" y="181" width="0.0425%" height="15" fill="rgb(217,24,9)" fg:x="8305" fg:w="5"/><text x="70.7928%" y="191.50"></text></g><g><title>iroh`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (4 samples, 0.03%)</title><rect x="70.5513%" y="165" width="0.0340%" height="15" fill="rgb(220,13,46)" fg:x="8306" fg:w="4"/><text x="70.8013%" y="175.50"></text></g><g><title>iroh`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (4 samples, 0.03%)</title><rect x="70.5513%" y="149" width="0.0340%" height="15" fill="rgb(239,221,27)" fg:x="8306" fg:w="4"/><text x="70.8013%" y="159.50"></text></g><g><title>iroh`quinn_proto::range_set::btree_range_set::RangeSet::pop_min (8 samples, 0.07%)</title><rect x="70.5258%" y="197" width="0.0680%" height="15" fill="rgb(222,198,25)" fg:x="8303" fg:w="8"/><text x="70.7758%" y="207.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::on_packet_acked (37 samples, 0.31%)</title><rect x="70.2879%" y="245" width="0.3143%" height="15" fill="rgb(211,99,13)" fg:x="8275" fg:w="37"/><text x="70.5379%" y="255.50"></text></g><g><title>iroh`quinn_proto::connection::streams::state::StreamsState::received_ack_of (35 samples, 0.30%)</title><rect x="70.3049%" y="229" width="0.2973%" height="15" fill="rgb(232,111,31)" fg:x="8277" fg:w="35"/><text x="70.5549%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::send_buffer::SendBuffer::ack (32 samples, 0.27%)</title><rect x="70.3304%" y="213" width="0.2718%" height="15" fill="rgb(245,82,37)" fg:x="8280" fg:w="32"/><text x="70.5804%" y="223.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::set_loss_detection_timer (3 samples, 0.03%)</title><rect x="70.6022%" y="245" width="0.0255%" height="15" fill="rgb(227,149,46)" fg:x="8312" fg:w="3"/><text x="70.8522%" y="255.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::pto_time_and_space (2 samples, 0.02%)</title><rect x="70.6107%" y="229" width="0.0170%" height="15" fill="rgb(218,36,50)" fg:x="8313" fg:w="2"/><text x="70.8607%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::paths::RttEstimator::update (3 samples, 0.03%)</title><rect x="70.6277%" y="245" width="0.0255%" height="15" fill="rgb(226,80,48)" fg:x="8315" fg:w="3"/><text x="70.8777%" y="255.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::on_ack_received (77 samples, 0.65%)</title><rect x="70.0076%" y="261" width="0.6540%" height="15" fill="rgb(238,224,15)" fg:x="8242" fg:w="77"/><text x="70.2576%" y="271.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::process_payload (96 samples, 0.82%)</title><rect x="69.8717%" y="277" width="0.8154%" height="15" fill="rgb(241,136,10)" fg:x="8226" fg:w="96"/><text x="70.1217%" y="287.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::process_decrypted_packet (102 samples, 0.87%)</title><rect x="69.8378%" y="293" width="0.8664%" height="15" fill="rgb(208,32,45)" fg:x="8222" fg:w="102"/><text x="70.0878%" y="303.50"></text></g><g><title>iroh`GFp_ChaCha20_ctr32 (5 samples, 0.04%)</title><rect x="70.7211%" y="229" width="0.0425%" height="15" fill="rgb(207,135,9)" fg:x="8326" fg:w="5"/><text x="70.9711%" y="239.50"></text></g><g><title>iroh`ring::aead::chacha20_poly1305::chacha20_poly1305_open (9 samples, 0.08%)</title><rect x="70.7126%" y="245" width="0.0764%" height="15" fill="rgb(206,86,44)" fg:x="8325" fg:w="9"/><text x="70.9626%" y="255.50"></text></g><g><title>iroh`GFp_poly1305_update (3 samples, 0.03%)</title><rect x="70.7636%" y="229" width="0.0255%" height="15" fill="rgb(245,177,15)" fg:x="8331" fg:w="3"/><text x="71.0136%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::handle_packet (125 samples, 1.06%)</title><rect x="69.7443%" y="309" width="1.0618%" height="15" fill="rgb(206,64,50)" fg:x="8211" fg:w="125"/><text x="69.9943%" y="319.50"></text></g><g><title>iroh`quinn_proto::crypto::rustls::_&lt;impl quinn_proto::crypto::PacketKey for rustls::quic::PacketKey&gt;::decrypt (12 samples, 0.10%)</title><rect x="70.7042%" y="293" width="0.1019%" height="15" fill="rgb(234,36,40)" fg:x="8324" fg:w="12"/><text x="70.9542%" y="303.50"></text></g><g><title>iroh`rustls::quic::PacketKey::decrypt_in_place (11 samples, 0.09%)</title><rect x="70.7126%" y="277" width="0.0934%" height="15" fill="rgb(213,64,8)" fg:x="8325" fg:w="11"/><text x="70.9626%" y="287.50"></text></g><g><title>iroh`ring::aead::open_within_::open_within (11 samples, 0.09%)</title><rect x="70.7126%" y="261" width="0.0934%" height="15" fill="rgb(210,75,36)" fg:x="8325" fg:w="11"/><text x="70.9626%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="70.7891%" y="245" width="0.0170%" height="15" fill="rgb(229,88,21)" fg:x="8334" fg:w="2"/><text x="71.0391%" y="255.50"></text></g><g><title>iroh`ring::aead::quic::HeaderProtectionKey::new_mask (5 samples, 0.04%)</title><rect x="70.8486%" y="245" width="0.0425%" height="15" fill="rgb(252,204,47)" fg:x="8341" fg:w="5"/><text x="71.0986%" y="255.50"></text></g><g><title>iroh`ring::aead::quic::chacha20_new_mask (5 samples, 0.04%)</title><rect x="70.8486%" y="229" width="0.0425%" height="15" fill="rgb(208,77,27)" fg:x="8341" fg:w="5"/><text x="71.0986%" y="239.50"></text></g><g><title>iroh`GFp_ChaCha20_ctr32 (5 samples, 0.04%)</title><rect x="70.8486%" y="213" width="0.0425%" height="15" fill="rgb(221,76,26)" fg:x="8341" fg:w="5"/><text x="71.0986%" y="223.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::handle_event (146 samples, 1.24%)</title><rect x="69.6764%" y="341" width="1.2401%" height="15" fill="rgb(225,139,18)" fg:x="8203" fg:w="146"/><text x="69.9264%" y="351.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::handle_decode (142 samples, 1.21%)</title><rect x="69.7104%" y="325" width="1.2061%" height="15" fill="rgb(230,137,11)" fg:x="8207" fg:w="142"/><text x="69.9604%" y="335.50"></text></g><g><title>iroh`quinn_proto::packet::PartialDecode::finish (11 samples, 0.09%)</title><rect x="70.8231%" y="309" width="0.0934%" height="15" fill="rgb(212,28,1)" fg:x="8338" fg:w="11"/><text x="71.0731%" y="319.50"></text></g><g><title>iroh`quinn_proto::packet::PartialDecode::decrypt_header (9 samples, 0.08%)</title><rect x="70.8401%" y="293" width="0.0764%" height="15" fill="rgb(248,164,17)" fg:x="8340" fg:w="9"/><text x="71.0901%" y="303.50"></text></g><g><title>iroh`quinn_proto::crypto::rustls::_&lt;impl quinn_proto::crypto::HeaderKey for rustls::quic::HeaderProtectionKey&gt;::decrypt (9 samples, 0.08%)</title><rect x="70.8401%" y="277" width="0.0764%" height="15" fill="rgb(222,171,42)" fg:x="8340" fg:w="9"/><text x="71.0901%" y="287.50"></text></g><g><title>iroh`rustls::quic::HeaderProtectionKey::xor_in_place (9 samples, 0.08%)</title><rect x="70.8401%" y="261" width="0.0764%" height="15" fill="rgb(243,84,45)" fg:x="8340" fg:w="9"/><text x="71.0901%" y="271.50"></text></g><g><title>iroh`ring::aead::quic::chacha20_new_mask (3 samples, 0.03%)</title><rect x="70.8910%" y="245" width="0.0255%" height="15" fill="rgb(252,49,23)" fg:x="8346" fg:w="3"/><text x="71.1410%" y="255.50"></text></g><g><title>iroh`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="71.1968%" y="325" width="0.0170%" height="15" fill="rgb(215,19,7)" fg:x="8382" fg:w="2"/><text x="71.4468%" y="335.50"></text></g><g><title>iroh`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (2 samples, 0.02%)</title><rect x="71.2138%" y="325" width="0.0170%" height="15" fill="rgb(238,81,41)" fg:x="8384" fg:w="2"/><text x="71.4638%" y="335.50"></text></g><g><title>iroh`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="71.2308%" y="325" width="0.0170%" height="15" fill="rgb(210,199,37)" fg:x="8386" fg:w="2"/><text x="71.4808%" y="335.50"></text></g><g><title>iroh`bytes::bytes_mut::BytesMut::freeze (2 samples, 0.02%)</title><rect x="71.2478%" y="325" width="0.0170%" height="15" fill="rgb(244,192,49)" fg:x="8388" fg:w="2"/><text x="71.4978%" y="335.50"></text></g><g><title>iroh`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (2 samples, 0.02%)</title><rect x="71.2478%" y="309" width="0.0170%" height="15" fill="rgb(226,211,11)" fg:x="8388" fg:w="2"/><text x="71.4978%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.06%)</title><rect x="71.3157%" y="277" width="0.0595%" height="15" fill="rgb(236,162,54)" fg:x="8396" fg:w="7"/><text x="71.5657%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.05%)</title><rect x="71.3242%" y="261" width="0.0510%" height="15" fill="rgb(220,229,9)" fg:x="8397" fg:w="6"/><text x="71.5742%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.05%)</title><rect x="71.3242%" y="245" width="0.0510%" height="15" fill="rgb(250,87,22)" fg:x="8397" fg:w="6"/><text x="71.5742%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.05%)</title><rect x="71.3242%" y="229" width="0.0510%" height="15" fill="rgb(239,43,17)" fg:x="8397" fg:w="6"/><text x="71.5742%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.02%)</title><rect x="71.3582%" y="213" width="0.0170%" height="15" fill="rgb(231,177,25)" fg:x="8401" fg:w="2"/><text x="71.6082%" y="223.50"></text></g><g><title>iroh`bytes::bytes_mut::BytesMut::reserve_inner (14 samples, 0.12%)</title><rect x="71.2648%" y="325" width="0.1189%" height="15" fill="rgb(219,179,1)" fg:x="8390" fg:w="14"/><text x="71.5148%" y="335.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.07%)</title><rect x="71.3157%" y="309" width="0.0680%" height="15" fill="rgb(238,219,53)" fg:x="8396" fg:w="8"/><text x="71.5657%" y="319.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (8 samples, 0.07%)</title><rect x="71.3157%" y="293" width="0.0680%" height="15" fill="rgb(232,167,36)" fg:x="8396" fg:w="8"/><text x="71.5657%" y="303.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::reset_idle_timeout (2 samples, 0.02%)</title><rect x="71.4007%" y="325" width="0.0170%" height="15" fill="rgb(244,19,51)" fg:x="8406" fg:w="2"/><text x="71.6507%" y="335.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::set_loss_detection_timer (2 samples, 0.02%)</title><rect x="71.4177%" y="325" width="0.0170%" height="15" fill="rgb(224,6,22)" fg:x="8408" fg:w="2"/><text x="71.6677%" y="335.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.04%)</title><rect x="71.4516%" y="293" width="0.0425%" height="15" fill="rgb(224,145,5)" fg:x="8412" fg:w="5"/><text x="71.7016%" y="303.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.03%)</title><rect x="71.4601%" y="277" width="0.0340%" height="15" fill="rgb(234,130,49)" fg:x="8413" fg:w="4"/><text x="71.7101%" y="287.50"></text></g><g><title>iroh`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.06%)</title><rect x="71.4516%" y="309" width="0.0595%" height="15" fill="rgb(254,6,2)" fg:x="8412" fg:w="7"/><text x="71.7016%" y="319.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="71.4941%" y="293" width="0.0170%" height="15" fill="rgb(208,96,46)" fg:x="8417" fg:w="2"/><text x="71.7441%" y="303.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="71.5111%" y="309" width="0.0255%" height="15" fill="rgb(239,3,39)" fg:x="8419" fg:w="3"/><text x="71.7611%" y="319.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::loss_time_and_space (3 samples, 0.03%)</title><rect x="71.5451%" y="309" width="0.0255%" height="15" fill="rgb(233,210,1)" fg:x="8423" fg:w="3"/><text x="71.7951%" y="319.50"></text></g><g><title>iroh`&lt;core::time::Duration as core::ops::arith::Mul&lt;u32&gt;&gt;::mul (4 samples, 0.03%)</title><rect x="71.5960%" y="293" width="0.0340%" height="15" fill="rgb(244,137,37)" fg:x="8429" fg:w="4"/><text x="71.8460%" y="303.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::set_loss_detection_timer (10 samples, 0.08%)</title><rect x="71.5790%" y="309" width="0.0849%" height="15" fill="rgb(240,136,2)" fg:x="8427" fg:w="10"/><text x="71.8290%" y="319.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::pto_time_and_space (3 samples, 0.03%)</title><rect x="71.6385%" y="293" width="0.0255%" height="15" fill="rgb(239,18,37)" fg:x="8434" fg:w="3"/><text x="71.8885%" y="303.50"></text></g><g><title>iroh`ring::aead::quic::HeaderProtectionKey::new_mask (2 samples, 0.02%)</title><rect x="71.7064%" y="261" width="0.0170%" height="15" fill="rgb(218,185,22)" fg:x="8442" fg:w="2"/><text x="71.9564%" y="271.50"></text></g><g><title>iroh`quinn_proto::crypto::rustls::_&lt;impl quinn_proto::crypto::HeaderKey for rustls::quic::HeaderProtectionKey&gt;::encrypt (16 samples, 0.14%)</title><rect x="71.6810%" y="293" width="0.1359%" height="15" fill="rgb(225,218,4)" fg:x="8439" fg:w="16"/><text x="71.9310%" y="303.50"></text></g><g><title>iroh`rustls::quic::HeaderProtectionKey::xor_in_place (14 samples, 0.12%)</title><rect x="71.6980%" y="277" width="0.1189%" height="15" fill="rgb(230,182,32)" fg:x="8441" fg:w="14"/><text x="71.9480%" y="287.50"></text></g><g><title>iroh`ring::aead::quic::chacha20_new_mask (11 samples, 0.09%)</title><rect x="71.7234%" y="261" width="0.0934%" height="15" fill="rgb(242,56,43)" fg:x="8444" fg:w="11"/><text x="71.9734%" y="271.50"></text></g><g><title>iroh`ring::aead::chacha20_poly1305::chacha20_poly1305_seal (3 samples, 0.03%)</title><rect x="71.8254%" y="277" width="0.0255%" height="15" fill="rgb(233,99,24)" fg:x="8456" fg:w="3"/><text x="72.0754%" y="287.50"></text></g><g><title>iroh`ChaCha20_neon (4 samples, 0.03%)</title><rect x="71.9103%" y="245" width="0.0340%" height="15" fill="rgb(234,209,42)" fg:x="8466" fg:w="4"/><text x="72.1603%" y="255.50"></text></g><g><title>iroh`GFp_ChaCha20_ctr32 (6 samples, 0.05%)</title><rect x="71.9443%" y="245" width="0.0510%" height="15" fill="rgb(227,7,12)" fg:x="8470" fg:w="6"/><text x="72.1943%" y="255.50"></text></g><g><title>iroh`GFp_poly1305_finish (2 samples, 0.02%)</title><rect x="71.9952%" y="245" width="0.0170%" height="15" fill="rgb(245,203,43)" fg:x="8476" fg:w="2"/><text x="72.2452%" y="255.50"></text></g><g><title>iroh`GFp_poly1305_update (4 samples, 0.03%)</title><rect x="72.0122%" y="245" width="0.0340%" height="15" fill="rgb(238,205,33)" fg:x="8478" fg:w="4"/><text x="72.2622%" y="255.50"></text></g><g><title>iroh`poly1305_update (4 samples, 0.03%)</title><rect x="72.0122%" y="229" width="0.0340%" height="15" fill="rgb(231,56,7)" fg:x="8478" fg:w="4"/><text x="72.2622%" y="239.50"></text></g><g><title>iroh`ring::aead::chacha20_poly1305::chacha20_poly1305_seal (21 samples, 0.18%)</title><rect x="71.8763%" y="261" width="0.1784%" height="15" fill="rgb(244,186,29)" fg:x="8462" fg:w="21"/><text x="72.1263%" y="271.50"></text></g><g><title>iroh`quinn_proto::crypto::rustls::_&lt;impl quinn_proto::crypto::PacketKey for rustls::quic::PacketKey&gt;::encrypt (31 samples, 0.26%)</title><rect x="71.8169%" y="293" width="0.2633%" height="15" fill="rgb(234,111,31)" fg:x="8455" fg:w="31"/><text x="72.0669%" y="303.50"></text></g><g><title>iroh`rustls::quic::PacketKey::encrypt_in_place (26 samples, 0.22%)</title><rect x="71.8593%" y="277" width="0.2208%" height="15" fill="rgb(241,149,10)" fg:x="8460" fg:w="26"/><text x="72.1093%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="72.0547%" y="261" width="0.0255%" height="15" fill="rgb(249,206,44)" fg:x="8483" fg:w="3"/><text x="72.3047%" y="271.50"></text></g><g><title>iroh`quinn_proto::connection::packet_builder::PacketBuilder::finish_and_track (76 samples, 0.65%)</title><rect x="71.4516%" y="325" width="0.6455%" height="15" fill="rgb(251,153,30)" fg:x="8412" fg:w="76"/><text x="71.7016%" y="335.50"></text></g><g><title>iroh`quinn_proto::connection::packet_builder::PacketBuilder::finish (51 samples, 0.43%)</title><rect x="71.6640%" y="309" width="0.4332%" height="15" fill="rgb(239,152,38)" fg:x="8437" fg:w="51"/><text x="71.9140%" y="319.50"></text></g><g><title>iroh`quinn_proto::connection::packet_builder::PacketBuilder::new (7 samples, 0.06%)</title><rect x="72.0972%" y="325" width="0.0595%" height="15" fill="rgb(249,139,47)" fg:x="8488" fg:w="7"/><text x="72.3472%" y="335.50"></text></g><g><title>iroh`quinn_proto::connection::send_buffer::SendBuffer::poll_transmit (2 samples, 0.02%)</title><rect x="72.1566%" y="325" width="0.0170%" height="15" fill="rgb(244,64,35)" fg:x="8495" fg:w="2"/><text x="72.4066%" y="335.50"></text></g><g><title>iroh`quinn_proto::connection::spaces::PacketSpace::maybe_queue_probe (5 samples, 0.04%)</title><rect x="72.1736%" y="325" width="0.0425%" height="15" fill="rgb(216,46,15)" fg:x="8497" fg:w="5"/><text x="72.4236%" y="335.50"></text></g><g><title>iroh`quinn_proto::connection::streams::state::StreamsState::can_send_stream_data (3 samples, 0.03%)</title><rect x="72.2161%" y="325" width="0.0255%" height="15" fill="rgb(250,74,19)" fg:x="8502" fg:w="3"/><text x="72.4661%" y="335.50"></text></g><g><title>iroh`quinn_proto::connection::streams::state::StreamsState::write_control_frames (6 samples, 0.05%)</title><rect x="72.2416%" y="325" width="0.0510%" height="15" fill="rgb(249,42,33)" fg:x="8505" fg:w="6"/><text x="72.4916%" y="335.50"></text></g><g><title>iroh`&lt;quinn_proto::varint::VarInt as quinn_proto::coding::Codec&gt;::encode (2 samples, 0.02%)</title><rect x="72.3775%" y="309" width="0.0170%" height="15" fill="rgb(242,149,17)" fg:x="8521" fg:w="2"/><text x="72.6275%" y="319.50"></text></g><g><title>iroh`quinn_proto::connection::send_buffer::SendBuffer::poll_transmit (2 samples, 0.02%)</title><rect x="72.3945%" y="309" width="0.0170%" height="15" fill="rgb(244,29,21)" fg:x="8523" fg:w="2"/><text x="72.6445%" y="319.50"></text></g><g><title>iroh`quinn_proto::connection::streams::state::StreamsState::write_stream_frames (17 samples, 0.14%)</title><rect x="72.2925%" y="325" width="0.1444%" height="15" fill="rgb(220,130,37)" fg:x="8511" fg:w="17"/><text x="72.5425%" y="335.50"></text></g><g><title>iroh`quinn_proto::frame::StreamMeta::encode (3 samples, 0.03%)</title><rect x="72.4114%" y="309" width="0.0255%" height="15" fill="rgb(211,67,2)" fg:x="8525" fg:w="3"/><text x="72.6614%" y="319.50"></text></g><g><title>iroh`&lt;quinn_proto::varint::VarInt as quinn_proto::coding::Codec&gt;::encode (2 samples, 0.02%)</title><rect x="72.4199%" y="293" width="0.0170%" height="15" fill="rgb(235,68,52)" fg:x="8526" fg:w="2"/><text x="72.6699%" y="303.50"></text></g><g><title>iroh`quinn_proto::crypto::rustls::_&lt;impl quinn_proto::crypto::HeaderKey for rustls::quic::HeaderProtectionKey&gt;::sample_size (4 samples, 0.03%)</title><rect x="72.4369%" y="325" width="0.0340%" height="15" fill="rgb(246,142,3)" fg:x="8528" fg:w="4"/><text x="72.6869%" y="335.50"></text></g><g><title>iroh`quinn_proto::crypto::rustls::_&lt;impl quinn_proto::crypto::PacketKey for rustls::quic::PacketKey&gt;::confidentiality_limit (2 samples, 0.02%)</title><rect x="72.4709%" y="325" width="0.0170%" height="15" fill="rgb(241,25,7)" fg:x="8532" fg:w="2"/><text x="72.7209%" y="335.50"></text></g><g><title>iroh`quinn_proto::frame::StreamMeta::encode (2 samples, 0.02%)</title><rect x="72.4879%" y="325" width="0.0170%" height="15" fill="rgb(242,119,39)" fg:x="8534" fg:w="2"/><text x="72.7379%" y="335.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::poll_transmit (189 samples, 1.61%)</title><rect x="70.9250%" y="341" width="1.6054%" height="15" fill="rgb(241,98,45)" fg:x="8350" fg:w="189"/><text x="71.1750%" y="351.50"></text></g><g><title>iroh`quinn_proto::packet::Header::encode (3 samples, 0.03%)</title><rect x="72.5049%" y="325" width="0.0255%" height="15" fill="rgb(254,28,30)" fg:x="8536" fg:w="3"/><text x="72.7549%" y="335.50"></text></g><g><title>iroh`quinn_proto::connection::packet_builder::PacketBuilder::new (4 samples, 0.03%)</title><rect x="72.5558%" y="341" width="0.0340%" height="15" fill="rgb(241,142,54)" fg:x="8542" fg:w="4"/><text x="72.8058%" y="351.50"></text></g><g><title>iroh`quinn_proto::connection::streams::state::StreamsState::poll (3 samples, 0.03%)</title><rect x="72.6068%" y="341" width="0.0255%" height="15" fill="rgb(222,85,15)" fg:x="8548" fg:w="3"/><text x="72.8568%" y="351.50"></text></g><g><title>iroh`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (6 samples, 0.05%)</title><rect x="72.6408%" y="341" width="0.0510%" height="15" fill="rgb(210,85,47)" fg:x="8552" fg:w="6"/><text x="72.8908%" y="351.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (6 samples, 0.05%)</title><rect x="72.6408%" y="325" width="0.0510%" height="15" fill="rgb(224,206,25)" fg:x="8552" fg:w="6"/><text x="72.8908%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (2 samples, 0.02%)</title><rect x="72.6748%" y="309" width="0.0170%" height="15" fill="rgb(243,201,19)" fg:x="8556" fg:w="2"/><text x="72.9248%" y="319.50"></text></g><g><title>iroh`tokio::runtime::coop::poll_proceed (5 samples, 0.04%)</title><rect x="72.6918%" y="341" width="0.0425%" height="15" fill="rgb(236,59,4)" fg:x="8558" fg:w="5"/><text x="72.9418%" y="351.50"></text></g><g><title>iroh`tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.02%)</title><rect x="72.7342%" y="325" width="0.0170%" height="15" fill="rgb(254,179,45)" fg:x="8563" fg:w="2"/><text x="72.9842%" y="335.50"></text></g><g><title>iroh`tokio::runtime::task::waker::wake_by_val (10 samples, 0.08%)</title><rect x="72.7342%" y="341" width="0.0849%" height="15" fill="rgb(226,14,10)" fg:x="8563" fg:w="10"/><text x="72.9842%" y="351.50"></text></g><g><title>iroh`tokio::task::local::Shared::schedule (8 samples, 0.07%)</title><rect x="72.7512%" y="325" width="0.0680%" height="15" fill="rgb(244,27,41)" fg:x="8565" fg:w="8"/><text x="73.0012%" y="335.50"></text></g><g><title>iroh`tokio::util::wake::wake_arc_raw (7 samples, 0.06%)</title><rect x="72.7597%" y="309" width="0.0595%" height="15" fill="rgb(235,35,32)" fg:x="8566" fg:w="7"/><text x="73.0097%" y="319.50"></text></g><g><title>iroh`tokio::runtime::driver::Handle::unpark (7 samples, 0.06%)</title><rect x="72.7597%" y="293" width="0.0595%" height="15" fill="rgb(218,68,31)" fg:x="8566" fg:w="7"/><text x="73.0097%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`kevent (7 samples, 0.06%)</title><rect x="72.7597%" y="277" width="0.0595%" height="15" fill="rgb(207,120,37)" fg:x="8566" fg:w="7"/><text x="73.0097%" y="287.50"></text></g><g><title>iroh`tokio::runtime::time::wheel::Wheel::insert (2 samples, 0.02%)</title><rect x="72.8277%" y="325" width="0.0170%" height="15" fill="rgb(227,98,0)" fg:x="8574" fg:w="2"/><text x="73.0777%" y="335.50"></text></g><g><title>iroh`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (5 samples, 0.04%)</title><rect x="72.8192%" y="341" width="0.0425%" height="15" fill="rgb(207,7,3)" fg:x="8573" fg:w="5"/><text x="73.0692%" y="351.50"></text></g><g><title>iroh`tokio::runtime::time::wheel::Wheel::remove (2 samples, 0.02%)</title><rect x="72.8446%" y="325" width="0.0170%" height="15" fill="rgb(206,98,19)" fg:x="8576" fg:w="2"/><text x="73.0946%" y="335.50"></text></g><g><title>iroh`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="72.9211%" y="325" width="0.0170%" height="15" fill="rgb(217,5,26)" fg:x="8585" fg:w="2"/><text x="73.1711%" y="335.50"></text></g><g><title>iroh`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (9 samples, 0.08%)</title><rect x="72.8786%" y="341" width="0.0764%" height="15" fill="rgb(235,190,38)" fg:x="8580" fg:w="9"/><text x="73.1286%" y="351.50"></text></g><g><title>iroh`tokio::sync::mpsc::list::Tx&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="72.9890%" y="325" width="0.0170%" height="15" fill="rgb(247,86,24)" fg:x="8593" fg:w="2"/><text x="73.2390%" y="335.50"></text></g><g><title>iroh`tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (6 samples, 0.05%)</title><rect x="72.9636%" y="341" width="0.0510%" height="15" fill="rgb(205,101,16)" fg:x="8590" fg:w="6"/><text x="73.2136%" y="351.50"></text></g><g><title>iroh`&lt;quinn::connection::ConnectionDriver as core::future::future::Future&gt;::poll (424 samples, 3.60%)</title><rect x="69.4216%" y="357" width="3.6015%" height="15" fill="rgb(246,168,33)" fg:x="8173" fg:w="424"/><text x="69.6716%" y="367.50">iroh..</text></g><g><title>iroh`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="73.0230%" y="357" width="0.0340%" height="15" fill="rgb(231,114,1)" fg:x="8597" fg:w="4"/><text x="73.2730%" y="367.50"></text></g><g><title>iroh`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="73.0570%" y="357" width="0.0170%" height="15" fill="rgb(207,184,53)" fg:x="8601" fg:w="2"/><text x="73.3070%" y="367.50"></text></g><g><title>iroh`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="73.0740%" y="341" width="0.0170%" height="15" fill="rgb(224,95,51)" fg:x="8603" fg:w="2"/><text x="73.3240%" y="351.50"></text></g><g><title>SystemConfiguration`SCBridgeInterfaceCopyAll (4 samples, 0.03%)</title><rect x="73.1249%" y="261" width="0.0340%" height="15" fill="rgb(212,188,45)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="271.50"></text></g><g><title>CoreFoundation`-[__NSFrozenDictionaryM __apply:context:] (4 samples, 0.03%)</title><rect x="73.1249%" y="245" width="0.0340%" height="15" fill="rgb(223,154,38)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="255.50"></text></g><g><title>SystemConfiguration`add_configured_interface (4 samples, 0.03%)</title><rect x="73.1249%" y="229" width="0.0340%" height="15" fill="rgb(251,22,52)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="239.50"></text></g><g><title>SystemConfiguration`add_interface (4 samples, 0.03%)</title><rect x="73.1249%" y="213" width="0.0340%" height="15" fill="rgb(229,209,22)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="223.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCreateWithBSDName (4 samples, 0.03%)</title><rect x="73.1249%" y="197" width="0.0340%" height="15" fill="rgb(234,138,34)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="207.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCreateWithEntity (4 samples, 0.03%)</title><rect x="73.1249%" y="181" width="0.0340%" height="15" fill="rgb(212,95,11)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="191.50"></text></g><g><title>SystemConfiguration`findMatchingInterfaces (4 samples, 0.03%)</title><rect x="73.1249%" y="165" width="0.0340%" height="15" fill="rgb(240,179,47)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="175.50"></text></g><g><title>IOKit`IOServiceGetMatchingServices (4 samples, 0.03%)</title><rect x="73.1249%" y="149" width="0.0340%" height="15" fill="rgb(240,163,11)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="159.50"></text></g><g><title>IOKit`io_service_get_matching_services_bin (4 samples, 0.03%)</title><rect x="73.1249%" y="133" width="0.0340%" height="15" fill="rgb(236,37,12)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.03%)</title><rect x="73.1249%" y="117" width="0.0340%" height="15" fill="rgb(232,164,16)" fg:x="8609" fg:w="4"/><text x="73.3749%" y="127.50"></text></g><g><title>SystemConfiguration`__SCNetworkInterfaceCopyAll_IONetworkInterface (3 samples, 0.03%)</title><rect x="73.1674%" y="261" width="0.0255%" height="15" fill="rgb(244,205,15)" fg:x="8614" fg:w="3"/><text x="73.4174%" y="271.50"></text></g><g><title>SystemConfiguration`findMatchingInterfaces (3 samples, 0.03%)</title><rect x="73.1674%" y="245" width="0.0255%" height="15" fill="rgb(223,117,47)" fg:x="8614" fg:w="3"/><text x="73.4174%" y="255.50"></text></g><g><title>SystemConfiguration`createInterface (2 samples, 0.02%)</title><rect x="73.1759%" y="229" width="0.0170%" height="15" fill="rgb(244,107,35)" fg:x="8615" fg:w="2"/><text x="73.4259%" y="239.50"></text></g><g><title>iroh`default_net::interface::macos::get_if_type_map (11 samples, 0.09%)</title><rect x="73.1165%" y="309" width="0.0934%" height="15" fill="rgb(205,140,8)" fg:x="8608" fg:w="11"/><text x="73.3665%" y="319.50"></text></g><g><title>iroh`system_configuration::network_configuration::get_interfaces (11 samples, 0.09%)</title><rect x="73.1165%" y="293" width="0.0934%" height="15" fill="rgb(228,84,46)" fg:x="8608" fg:w="11"/><text x="73.3665%" y="303.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCopyAllWithPreferences (11 samples, 0.09%)</title><rect x="73.1165%" y="277" width="0.0934%" height="15" fill="rgb(254,188,9)" fg:x="8608" fg:w="11"/><text x="73.3665%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (2 samples, 0.02%)</title><rect x="73.1929%" y="261" width="0.0170%" height="15" fill="rgb(206,112,54)" fg:x="8617" fg:w="2"/><text x="73.4429%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (2 samples, 0.02%)</title><rect x="73.1929%" y="245" width="0.0170%" height="15" fill="rgb(216,84,49)" fg:x="8617" fg:w="2"/><text x="73.4429%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (2 samples, 0.02%)</title><rect x="73.1929%" y="229" width="0.0170%" height="15" fill="rgb(214,194,35)" fg:x="8617" fg:w="2"/><text x="73.4429%" y="239.50"></text></g><g><title>iroh`default_net::interface::unix::interfaces (13 samples, 0.11%)</title><rect x="73.1165%" y="325" width="0.1104%" height="15" fill="rgb(249,28,3)" fg:x="8608" fg:w="13"/><text x="73.3665%" y="335.50"></text></g><g><title>libsystem_info.dylib`if_nametoindex (2 samples, 0.02%)</title><rect x="73.2099%" y="309" width="0.0170%" height="15" fill="rgb(222,56,52)" fg:x="8619" fg:w="2"/><text x="73.4599%" y="319.50"></text></g><g><title>libsystem_info.dylib`getifaddrs (2 samples, 0.02%)</title><rect x="73.2099%" y="293" width="0.0170%" height="15" fill="rgb(245,217,50)" fg:x="8619" fg:w="2"/><text x="73.4599%" y="303.50"></text></g><g><title>iroh`default_net::gateway::macos::get_default_gateway (7 samples, 0.06%)</title><rect x="73.2269%" y="261" width="0.0595%" height="15" fill="rgb(213,201,24)" fg:x="8621" fg:w="7"/><text x="73.4769%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (7 samples, 0.06%)</title><rect x="73.2269%" y="245" width="0.0595%" height="15" fill="rgb(248,116,28)" fg:x="8621" fg:w="7"/><text x="73.4769%" y="255.50"></text></g><g><title>IOKit`IOServiceGetMatchingServices (17 samples, 0.14%)</title><rect x="73.3118%" y="101" width="0.1444%" height="15" fill="rgb(219,72,43)" fg:x="8631" fg:w="17"/><text x="73.5618%" y="111.50"></text></g><g><title>IOKit`io_service_get_matching_services_bin (17 samples, 0.14%)</title><rect x="73.3118%" y="85" width="0.1444%" height="15" fill="rgb(209,138,14)" fg:x="8631" fg:w="17"/><text x="73.5618%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (17 samples, 0.14%)</title><rect x="73.3118%" y="69" width="0.1444%" height="15" fill="rgb(222,18,33)" fg:x="8631" fg:w="17"/><text x="73.5618%" y="79.50"></text></g><g><title>IOKit`IORegistryEntryGetParentEntry (2 samples, 0.02%)</title><rect x="73.4562%" y="85" width="0.0170%" height="15" fill="rgb(213,199,7)" fg:x="8648" fg:w="2"/><text x="73.7062%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_deallocate_trap (2 samples, 0.02%)</title><rect x="73.4562%" y="69" width="0.0170%" height="15" fill="rgb(250,110,10)" fg:x="8648" fg:w="2"/><text x="73.7062%" y="79.50"></text></g><g><title>SystemConfiguration`copyIORegistryProperties (2 samples, 0.02%)</title><rect x="73.4732%" y="85" width="0.0170%" height="15" fill="rgb(248,123,6)" fg:x="8650" fg:w="2"/><text x="73.7232%" y="95.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (2 samples, 0.02%)</title><rect x="73.4732%" y="69" width="0.0170%" height="15" fill="rgb(206,91,31)" fg:x="8650" fg:w="2"/><text x="73.7232%" y="79.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (2 samples, 0.02%)</title><rect x="73.4732%" y="53" width="0.0170%" height="15" fill="rgb(211,154,13)" fg:x="8650" fg:w="2"/><text x="73.7232%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.02%)</title><rect x="73.4732%" y="37" width="0.0170%" height="15" fill="rgb(225,148,7)" fg:x="8650" fg:w="2"/><text x="73.7232%" y="47.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCreateWithBSDName (22 samples, 0.19%)</title><rect x="73.3118%" y="149" width="0.1869%" height="15" fill="rgb(220,160,43)" fg:x="8631" fg:w="22"/><text x="73.5618%" y="159.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCreateWithEntity (22 samples, 0.19%)</title><rect x="73.3118%" y="133" width="0.1869%" height="15" fill="rgb(213,52,39)" fg:x="8631" fg:w="22"/><text x="73.5618%" y="143.50"></text></g><g><title>SystemConfiguration`findMatchingInterfaces (22 samples, 0.19%)</title><rect x="73.3118%" y="117" width="0.1869%" height="15" fill="rgb(243,137,7)" fg:x="8631" fg:w="22"/><text x="73.5618%" y="127.50"></text></g><g><title>SystemConfiguration`createInterface (5 samples, 0.04%)</title><rect x="73.4562%" y="101" width="0.0425%" height="15" fill="rgb(230,79,13)" fg:x="8648" fg:w="5"/><text x="73.7062%" y="111.50"></text></g><g><title>SystemConfiguration`SCBridgeInterfaceCopyAll (26 samples, 0.22%)</title><rect x="73.2948%" y="213" width="0.2208%" height="15" fill="rgb(247,105,23)" fg:x="8629" fg:w="26"/><text x="73.5448%" y="223.50"></text></g><g><title>CoreFoundation`-[__NSFrozenDictionaryM __apply:context:] (26 samples, 0.22%)</title><rect x="73.2948%" y="197" width="0.2208%" height="15" fill="rgb(223,179,41)" fg:x="8629" fg:w="26"/><text x="73.5448%" y="207.50"></text></g><g><title>SystemConfiguration`add_configured_interface (26 samples, 0.22%)</title><rect x="73.2948%" y="181" width="0.2208%" height="15" fill="rgb(218,9,34)" fg:x="8629" fg:w="26"/><text x="73.5448%" y="191.50"></text></g><g><title>SystemConfiguration`add_interface (24 samples, 0.20%)</title><rect x="73.3118%" y="165" width="0.2039%" height="15" fill="rgb(222,106,8)" fg:x="8631" fg:w="24"/><text x="73.5618%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`socket (2 samples, 0.02%)</title><rect x="73.4987%" y="149" width="0.0170%" height="15" fill="rgb(211,220,0)" fg:x="8653" fg:w="2"/><text x="73.7487%" y="159.50"></text></g><g><title>SystemConfiguration`SCPreferencesCreate (2 samples, 0.02%)</title><rect x="73.5157%" y="213" width="0.0170%" height="15" fill="rgb(229,52,16)" fg:x="8655" fg:w="2"/><text x="73.7657%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`access (2 samples, 0.02%)</title><rect x="73.5157%" y="197" width="0.0170%" height="15" fill="rgb(212,155,18)" fg:x="8655" fg:w="2"/><text x="73.7657%" y="207.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (5 samples, 0.04%)</title><rect x="73.5581%" y="165" width="0.0425%" height="15" fill="rgb(242,21,14)" fg:x="8660" fg:w="5"/><text x="73.8081%" y="175.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (5 samples, 0.04%)</title><rect x="73.5581%" y="149" width="0.0425%" height="15" fill="rgb(222,19,48)" fg:x="8660" fg:w="5"/><text x="73.8081%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5 samples, 0.04%)</title><rect x="73.5581%" y="133" width="0.0425%" height="15" fill="rgb(232,45,27)" fg:x="8660" fg:w="5"/><text x="73.8081%" y="143.50"></text></g><g><title>SystemConfiguration`copyIORegistryProperties (2 samples, 0.02%)</title><rect x="73.6091%" y="165" width="0.0170%" height="15" fill="rgb(249,103,42)" fg:x="8666" fg:w="2"/><text x="73.8591%" y="175.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (2 samples, 0.02%)</title><rect x="73.6091%" y="149" width="0.0170%" height="15" fill="rgb(246,81,33)" fg:x="8666" fg:w="2"/><text x="73.8591%" y="159.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (2 samples, 0.02%)</title><rect x="73.6091%" y="133" width="0.0170%" height="15" fill="rgb(252,33,42)" fg:x="8666" fg:w="2"/><text x="73.8591%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.02%)</title><rect x="73.6091%" y="117" width="0.0170%" height="15" fill="rgb(209,212,41)" fg:x="8666" fg:w="2"/><text x="73.8591%" y="127.50"></text></g><g><title>SystemConfiguration`__SCNetworkInterfaceCopyAll_IONetworkInterface (11 samples, 0.09%)</title><rect x="73.5496%" y="213" width="0.0934%" height="15" fill="rgb(207,154,6)" fg:x="8659" fg:w="11"/><text x="73.7996%" y="223.50"></text></g><g><title>SystemConfiguration`findMatchingInterfaces (10 samples, 0.08%)</title><rect x="73.5581%" y="197" width="0.0849%" height="15" fill="rgb(223,64,47)" fg:x="8660" fg:w="10"/><text x="73.8081%" y="207.50"></text></g><g><title>SystemConfiguration`createInterface (10 samples, 0.08%)</title><rect x="73.5581%" y="181" width="0.0849%" height="15" fill="rgb(211,161,38)" fg:x="8660" fg:w="10"/><text x="73.8081%" y="191.50"></text></g><g><title>SystemConfiguration`processNetworkInterface (2 samples, 0.02%)</title><rect x="73.6261%" y="165" width="0.0170%" height="15" fill="rgb(219,138,40)" fg:x="8668" fg:w="2"/><text x="73.8761%" y="175.50"></text></g><g><title>IOKit`_IOObjectConformsTo (2 samples, 0.02%)</title><rect x="73.6261%" y="149" width="0.0170%" height="15" fill="rgb(241,228,46)" fg:x="8668" fg:w="2"/><text x="73.8761%" y="159.50"></text></g><g><title>iroh`default_net::interface::macos::get_if_type_map (43 samples, 0.37%)</title><rect x="73.2863%" y="261" width="0.3652%" height="15" fill="rgb(223,209,38)" fg:x="8628" fg:w="43"/><text x="73.5363%" y="271.50"></text></g><g><title>iroh`system_configuration::network_configuration::get_interfaces (43 samples, 0.37%)</title><rect x="73.2863%" y="245" width="0.3652%" height="15" fill="rgb(236,164,45)" fg:x="8628" fg:w="43"/><text x="73.5363%" y="255.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCopyAllWithPreferences (43 samples, 0.37%)</title><rect x="73.2863%" y="229" width="0.3652%" height="15" fill="rgb(231,15,5)" fg:x="8628" fg:w="43"/><text x="73.5363%" y="239.50"></text></g><g><title>iroh`iroh_net::magicsock::Actor::update_endpoints::_{{closure}}::_{{closure}} (53 samples, 0.45%)</title><rect x="73.2269%" y="325" width="0.4502%" height="15" fill="rgb(252,35,15)" fg:x="8621" fg:w="53"/><text x="73.4769%" y="335.50"></text></g><g><title>iroh`iroh_net::magicsock::Actor::determine_endpoints::_{{closure}}::_{{closure}} (53 samples, 0.45%)</title><rect x="73.2269%" y="309" width="0.4502%" height="15" fill="rgb(248,181,18)" fg:x="8621" fg:w="53"/><text x="73.4769%" y="319.50"></text></g><g><title>iroh`iroh_net::net::ip::LocalAddresses::new (53 samples, 0.45%)</title><rect x="73.2269%" y="293" width="0.4502%" height="15" fill="rgb(233,39,42)" fg:x="8621" fg:w="53"/><text x="73.4769%" y="303.50"></text></g><g><title>iroh`default_net::interface::unix::interfaces (53 samples, 0.45%)</title><rect x="73.2269%" y="277" width="0.4502%" height="15" fill="rgb(238,110,33)" fg:x="8621" fg:w="53"/><text x="73.4769%" y="287.50"></text></g><g><title>libsystem_info.dylib`if_nametoindex (3 samples, 0.03%)</title><rect x="73.6516%" y="261" width="0.0255%" height="15" fill="rgb(233,195,10)" fg:x="8671" fg:w="3"/><text x="73.9016%" y="271.50"></text></g><g><title>libsystem_info.dylib`getifaddrs (3 samples, 0.03%)</title><rect x="73.6516%" y="245" width="0.0255%" height="15" fill="rgb(254,105,3)" fg:x="8671" fg:w="3"/><text x="73.9016%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (2 samples, 0.02%)</title><rect x="73.6601%" y="229" width="0.0170%" height="15" fill="rgb(221,225,9)" fg:x="8672" fg:w="2"/><text x="73.9101%" y="239.50"></text></g><g><title>iroh`iroh_net::magicsock::Actor::run::_{{closure}} (68 samples, 0.58%)</title><rect x="73.1080%" y="341" width="0.5776%" height="15" fill="rgb(224,227,45)" fg:x="8607" fg:w="68"/><text x="73.3580%" y="351.50"></text></g><g><title>iroh`iroh_net::magicsock::derp_actor::DerpActor::run::_{{closure}} (5 samples, 0.04%)</title><rect x="73.6856%" y="341" width="0.0425%" height="15" fill="rgb(229,198,43)" fg:x="8675" fg:w="5"/><text x="73.9356%" y="351.50"></text></g><g><title>iroh`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="73.6940%" y="325" width="0.0340%" height="15" fill="rgb(206,209,35)" fg:x="8676" fg:w="4"/><text x="73.9440%" y="335.50"></text></g><g><title>iroh`&lt;futures_util::future::select_all::SelectAll&lt;Fut&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="73.6940%" y="309" width="0.0340%" height="15" fill="rgb(245,195,53)" fg:x="8676" fg:w="4"/><text x="73.9440%" y="319.50"></text></g><g><title>iroh`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="73.6940%" y="293" width="0.0340%" height="15" fill="rgb(240,92,26)" fg:x="8676" fg:w="4"/><text x="73.9440%" y="303.50"></text></g><g><title>iroh`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="73.6940%" y="277" width="0.0340%" height="15" fill="rgb(207,40,23)" fg:x="8676" fg:w="4"/><text x="73.9440%" y="287.50"></text></g><g><title>iroh`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="73.6940%" y="261" width="0.0340%" height="15" fill="rgb(223,111,35)" fg:x="8676" fg:w="4"/><text x="73.9440%" y="271.50"></text></g><g><title>iroh`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="73.7025%" y="245" width="0.0255%" height="15" fill="rgb(229,147,28)" fg:x="8677" fg:w="3"/><text x="73.9525%" y="255.50"></text></g><g><title>iroh`iroh_net::derp::http::client::Client::connect_0::_{{closure}}::_{{closure}} (3 samples, 0.03%)</title><rect x="73.7025%" y="229" width="0.0255%" height="15" fill="rgb(211,29,28)" fg:x="8677" fg:w="3"/><text x="73.9525%" y="239.50"></text></g><g><title>iroh`&lt;tokio_rustls::common::handshake::MidHandshake&lt;IS&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="73.7110%" y="213" width="0.0170%" height="15" fill="rgb(228,72,33)" fg:x="8678" fg:w="2"/><text x="73.9610%" y="223.50"></text></g><g><title>iroh`tokio_rustls::common::Stream&lt;IO,C&gt;::handshake (2 samples, 0.02%)</title><rect x="73.7110%" y="197" width="0.0170%" height="15" fill="rgb(205,214,31)" fg:x="8678" fg:w="2"/><text x="73.9610%" y="207.50"></text></g><g><title>iroh`tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (2 samples, 0.02%)</title><rect x="73.7110%" y="181" width="0.0170%" height="15" fill="rgb(224,111,15)" fg:x="8678" fg:w="2"/><text x="73.9610%" y="191.50"></text></g><g><title>iroh`default_net::gateway::macos::get_default_gateway (3 samples, 0.03%)</title><rect x="73.7450%" y="309" width="0.0255%" height="15" fill="rgb(253,21,26)" fg:x="8682" fg:w="3"/><text x="73.9950%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (3 samples, 0.03%)</title><rect x="73.7450%" y="293" width="0.0255%" height="15" fill="rgb(245,139,43)" fg:x="8682" fg:w="3"/><text x="73.9950%" y="303.50"></text></g><g><title>IOKit`IOServiceGetMatchingServices (12 samples, 0.10%)</title><rect x="73.7875%" y="149" width="0.1019%" height="15" fill="rgb(252,170,7)" fg:x="8687" fg:w="12"/><text x="74.0375%" y="159.50"></text></g><g><title>IOKit`io_service_get_matching_services_bin (11 samples, 0.09%)</title><rect x="73.7960%" y="133" width="0.0934%" height="15" fill="rgb(231,118,14)" fg:x="8688" fg:w="11"/><text x="74.0460%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (11 samples, 0.09%)</title><rect x="73.7960%" y="117" width="0.0934%" height="15" fill="rgb(238,83,0)" fg:x="8688" fg:w="11"/><text x="74.0460%" y="127.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (2 samples, 0.02%)</title><rect x="73.9064%" y="133" width="0.0170%" height="15" fill="rgb(221,39,39)" fg:x="8701" fg:w="2"/><text x="74.1564%" y="143.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (2 samples, 0.02%)</title><rect x="73.9064%" y="117" width="0.0170%" height="15" fill="rgb(222,119,46)" fg:x="8701" fg:w="2"/><text x="74.1564%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.02%)</title><rect x="73.9064%" y="101" width="0.0170%" height="15" fill="rgb(222,165,49)" fg:x="8701" fg:w="2"/><text x="74.1564%" y="111.50"></text></g><g><title>SystemConfiguration`createInterface (7 samples, 0.06%)</title><rect x="73.8894%" y="149" width="0.0595%" height="15" fill="rgb(219,113,52)" fg:x="8699" fg:w="7"/><text x="74.1394%" y="159.50"></text></g><g><title>SystemConfiguration`copyIORegistryProperties (2 samples, 0.02%)</title><rect x="73.9319%" y="133" width="0.0170%" height="15" fill="rgb(214,7,15)" fg:x="8704" fg:w="2"/><text x="74.1819%" y="143.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (2 samples, 0.02%)</title><rect x="73.9319%" y="117" width="0.0170%" height="15" fill="rgb(235,32,4)" fg:x="8704" fg:w="2"/><text x="74.1819%" y="127.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (2 samples, 0.02%)</title><rect x="73.9319%" y="101" width="0.0170%" height="15" fill="rgb(238,90,54)" fg:x="8704" fg:w="2"/><text x="74.1819%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.02%)</title><rect x="73.9319%" y="85" width="0.0170%" height="15" fill="rgb(213,208,19)" fg:x="8704" fg:w="2"/><text x="74.1819%" y="95.50"></text></g><g><title>SystemConfiguration`SCBridgeInterfaceCopyAll (21 samples, 0.18%)</title><rect x="73.7790%" y="261" width="0.1784%" height="15" fill="rgb(233,156,4)" fg:x="8686" fg:w="21"/><text x="74.0290%" y="271.50"></text></g><g><title>CoreFoundation`-[__NSFrozenDictionaryM __apply:context:] (21 samples, 0.18%)</title><rect x="73.7790%" y="245" width="0.1784%" height="15" fill="rgb(207,194,5)" fg:x="8686" fg:w="21"/><text x="74.0290%" y="255.50"></text></g><g><title>SystemConfiguration`add_configured_interface (21 samples, 0.18%)</title><rect x="73.7790%" y="229" width="0.1784%" height="15" fill="rgb(206,111,30)" fg:x="8686" fg:w="21"/><text x="74.0290%" y="239.50"></text></g><g><title>SystemConfiguration`add_interface (20 samples, 0.17%)</title><rect x="73.7875%" y="213" width="0.1699%" height="15" fill="rgb(243,70,54)" fg:x="8687" fg:w="20"/><text x="74.0375%" y="223.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCreateWithBSDName (20 samples, 0.17%)</title><rect x="73.7875%" y="197" width="0.1699%" height="15" fill="rgb(242,28,8)" fg:x="8687" fg:w="20"/><text x="74.0375%" y="207.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCreateWithEntity (20 samples, 0.17%)</title><rect x="73.7875%" y="181" width="0.1699%" height="15" fill="rgb(219,106,18)" fg:x="8687" fg:w="20"/><text x="74.0375%" y="191.50"></text></g><g><title>SystemConfiguration`findMatchingInterfaces (20 samples, 0.17%)</title><rect x="73.7875%" y="165" width="0.1699%" height="15" fill="rgb(244,222,10)" fg:x="8687" fg:w="20"/><text x="74.0375%" y="175.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (3 samples, 0.03%)</title><rect x="73.9743%" y="197" width="0.0255%" height="15" fill="rgb(236,179,52)" fg:x="8709" fg:w="3"/><text x="74.2243%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.03%)</title><rect x="73.9743%" y="181" width="0.0255%" height="15" fill="rgb(213,23,39)" fg:x="8709" fg:w="3"/><text x="74.2243%" y="191.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (4 samples, 0.03%)</title><rect x="73.9743%" y="213" width="0.0340%" height="15" fill="rgb(238,48,10)" fg:x="8709" fg:w="4"/><text x="74.2243%" y="223.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (4 samples, 0.03%)</title><rect x="74.0083%" y="181" width="0.0340%" height="15" fill="rgb(251,196,23)" fg:x="8713" fg:w="4"/><text x="74.2583%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.03%)</title><rect x="74.0083%" y="165" width="0.0340%" height="15" fill="rgb(250,152,24)" fg:x="8713" fg:w="4"/><text x="74.2583%" y="175.50"></text></g><g><title>SystemConfiguration`__SCNetworkInterfaceCopyAll_IONetworkInterface (10 samples, 0.08%)</title><rect x="73.9659%" y="261" width="0.0849%" height="15" fill="rgb(209,150,17)" fg:x="8708" fg:w="10"/><text x="74.2159%" y="271.50"></text></g><g><title>SystemConfiguration`findMatchingInterfaces (10 samples, 0.08%)</title><rect x="73.9659%" y="245" width="0.0849%" height="15" fill="rgb(234,202,34)" fg:x="8708" fg:w="10"/><text x="74.2159%" y="255.50"></text></g><g><title>SystemConfiguration`createInterface (10 samples, 0.08%)</title><rect x="73.9659%" y="229" width="0.0849%" height="15" fill="rgb(253,148,53)" fg:x="8708" fg:w="10"/><text x="74.2159%" y="239.50"></text></g><g><title>SystemConfiguration`copyIORegistryProperties (5 samples, 0.04%)</title><rect x="74.0083%" y="213" width="0.0425%" height="15" fill="rgb(218,129,16)" fg:x="8713" fg:w="5"/><text x="74.2583%" y="223.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (5 samples, 0.04%)</title><rect x="74.0083%" y="197" width="0.0425%" height="15" fill="rgb(216,85,19)" fg:x="8713" fg:w="5"/><text x="74.2583%" y="207.50"></text></g><g><title>iroh`default_net::interface::macos::get_if_type_map (35 samples, 0.30%)</title><rect x="73.7705%" y="309" width="0.2973%" height="15" fill="rgb(235,228,7)" fg:x="8685" fg:w="35"/><text x="74.0205%" y="319.50"></text></g><g><title>iroh`system_configuration::network_configuration::get_interfaces (35 samples, 0.30%)</title><rect x="73.7705%" y="293" width="0.2973%" height="15" fill="rgb(245,175,0)" fg:x="8685" fg:w="35"/><text x="74.0205%" y="303.50"></text></g><g><title>SystemConfiguration`_SCNetworkInterfaceCopyAllWithPreferences (35 samples, 0.30%)</title><rect x="73.7705%" y="277" width="0.2973%" height="15" fill="rgb(208,168,36)" fg:x="8685" fg:w="35"/><text x="74.0205%" y="287.50"></text></g><g><title>SystemConfiguration`findMatchingInterfaces (2 samples, 0.02%)</title><rect x="74.0508%" y="261" width="0.0170%" height="15" fill="rgb(246,171,24)" fg:x="8718" fg:w="2"/><text x="74.3008%" y="271.50"></text></g><g><title>IOKit`IOServiceGetMatchingServices (2 samples, 0.02%)</title><rect x="74.0508%" y="245" width="0.0170%" height="15" fill="rgb(215,142,24)" fg:x="8718" fg:w="2"/><text x="74.3008%" y="255.50"></text></g><g><title>iroh`default_net::interface::unix::interfaces (44 samples, 0.37%)</title><rect x="73.7365%" y="325" width="0.3737%" height="15" fill="rgb(250,187,7)" fg:x="8681" fg:w="44"/><text x="73.9865%" y="335.50"></text></g><g><title>libsystem_info.dylib`if_nametoindex (4 samples, 0.03%)</title><rect x="74.0763%" y="309" width="0.0340%" height="15" fill="rgb(228,66,33)" fg:x="8721" fg:w="4"/><text x="74.3263%" y="319.50"></text></g><g><title>libsystem_info.dylib`getifaddrs (4 samples, 0.03%)</title><rect x="74.0763%" y="293" width="0.0340%" height="15" fill="rgb(234,215,21)" fg:x="8721" fg:w="4"/><text x="74.3263%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (4 samples, 0.03%)</title><rect x="74.0763%" y="277" width="0.0340%" height="15" fill="rgb(222,191,20)" fg:x="8721" fg:w="4"/><text x="74.3263%" y="287.50"></text></g><g><title>iroh`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="74.1103%" y="309" width="0.0170%" height="15" fill="rgb(245,79,54)" fg:x="8725" fg:w="2"/><text x="74.3603%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="74.1103%" y="293" width="0.0170%" height="15" fill="rgb(240,10,37)" fg:x="8725" fg:w="2"/><text x="74.3603%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="74.1103%" y="277" width="0.0170%" height="15" fill="rgb(214,192,32)" fg:x="8725" fg:w="2"/><text x="74.3603%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="74.1103%" y="261" width="0.0170%" height="15" fill="rgb(209,36,54)" fg:x="8725" fg:w="2"/><text x="74.3603%" y="271.50"></text></g><g><title>iroh`iroh_net::netcheck::reportgen::Actor::run_inner::_{{closure}} (48 samples, 0.41%)</title><rect x="73.7280%" y="341" width="0.4077%" height="15" fill="rgb(220,10,11)" fg:x="8680" fg:w="48"/><text x="73.9780%" y="351.50"></text></g><g><title>iroh`iroh_net::net::interfaces::bsd::default_route_interface_index (3 samples, 0.03%)</title><rect x="74.1103%" y="325" width="0.0255%" height="15" fill="rgb(221,106,17)" fg:x="8725" fg:w="3"/><text x="74.3603%" y="335.50"></text></g><g><title>iroh`iroh_net::portmapper::Service::probe_request (2 samples, 0.02%)</title><rect x="74.1357%" y="325" width="0.0170%" height="15" fill="rgb(251,142,44)" fg:x="8728" fg:w="2"/><text x="74.3857%" y="335.50"></text></g><g><title>iroh`iroh_net::portmapper::ip_and_gateway (2 samples, 0.02%)</title><rect x="74.1357%" y="309" width="0.0170%" height="15" fill="rgb(238,13,15)" fg:x="8728" fg:w="2"/><text x="74.3857%" y="319.50"></text></g><g><title>iroh`iroh_net::net::interfaces::bsd::likely_home_router (2 samples, 0.02%)</title><rect x="74.1357%" y="293" width="0.0170%" height="15" fill="rgb(208,107,27)" fg:x="8728" fg:w="2"/><text x="74.3857%" y="303.50"></text></g><g><title>iroh`iroh_net::net::interfaces::bsd::fetch_routing_table (2 samples, 0.02%)</title><rect x="74.1357%" y="277" width="0.0170%" height="15" fill="rgb(205,136,37)" fg:x="8728" fg:w="2"/><text x="74.3857%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (2 samples, 0.02%)</title><rect x="74.1357%" y="261" width="0.0170%" height="15" fill="rgb(250,205,27)" fg:x="8728" fg:w="2"/><text x="74.3857%" y="271.50"></text></g><g><title>iroh`iroh_net::net::interfaces::bsd::fetch_routing_table (4 samples, 0.03%)</title><rect x="74.1527%" y="261" width="0.0340%" height="15" fill="rgb(210,80,43)" fg:x="8730" fg:w="4"/><text x="74.4027%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (4 samples, 0.03%)</title><rect x="74.1527%" y="245" width="0.0340%" height="15" fill="rgb(247,160,36)" fg:x="8730" fg:w="4"/><text x="74.4027%" y="255.50"></text></g><g><title>iroh`iroh_net::net::interfaces::bsd::likely_home_router (5 samples, 0.04%)</title><rect x="74.1527%" y="277" width="0.0425%" height="15" fill="rgb(234,13,49)" fg:x="8730" fg:w="5"/><text x="74.4027%" y="287.50"></text></g><g><title>iroh`iroh_net::portmapper::Client::new::_{{closure}}::_{{closure}} (8 samples, 0.07%)</title><rect x="74.1357%" y="341" width="0.0680%" height="15" fill="rgb(234,122,0)" fg:x="8728" fg:w="8"/><text x="74.3857%" y="351.50"></text></g><g><title>iroh`iroh_net::portmapper::Service::update_local_port::_{{closure}} (6 samples, 0.05%)</title><rect x="74.1527%" y="325" width="0.0510%" height="15" fill="rgb(207,146,38)" fg:x="8730" fg:w="6"/><text x="74.4027%" y="335.50"></text></g><g><title>iroh`iroh_net::portmapper::Service::get_mapping (6 samples, 0.05%)</title><rect x="74.1527%" y="309" width="0.0510%" height="15" fill="rgb(207,177,25)" fg:x="8730" fg:w="6"/><text x="74.4027%" y="319.50"></text></g><g><title>iroh`iroh_net::portmapper::ip_and_gateway (6 samples, 0.05%)</title><rect x="74.1527%" y="293" width="0.0510%" height="15" fill="rgb(211,178,42)" fg:x="8730" fg:w="6"/><text x="74.4027%" y="303.50"></text></g><g><title>iroh`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (135 samples, 1.15%)</title><rect x="73.0740%" y="357" width="1.1467%" height="15" fill="rgb(230,69,54)" fg:x="8603" fg:w="135"/><text x="73.3240%" y="367.50"></text></g><g><title>iroh`&lt;flume::async::RecvStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.03%)</title><rect x="74.3056%" y="341" width="0.0255%" height="15" fill="rgb(214,135,41)" fg:x="8748" fg:w="3"/><text x="74.5556%" y="351.50"></text></g><g><title>iroh`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="74.3311%" y="341" width="0.0170%" height="15" fill="rgb(237,67,25)" fg:x="8751" fg:w="2"/><text x="74.5811%" y="351.50"></text></g><g><title>iroh`&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::as_any (2 samples, 0.02%)</title><rect x="74.5010%" y="309" width="0.0170%" height="15" fill="rgb(222,189,50)" fg:x="8771" fg:w="2"/><text x="74.7510%" y="319.50"></text></g><g><title>iroh`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.06%)</title><rect x="74.5180%" y="309" width="0.0595%" height="15" fill="rgb(245,148,34)" fg:x="8773" fg:w="7"/><text x="74.7680%" y="319.50"></text></g><g><title>iroh`flume::Chan&lt;T&gt;::pull_pending (3 samples, 0.03%)</title><rect x="74.5774%" y="309" width="0.0255%" height="15" fill="rgb(222,29,6)" fg:x="8780" fg:w="3"/><text x="74.8274%" y="319.50"></text></g><g><title>iroh`flume::Shared&lt;T&gt;::recv (8 samples, 0.07%)</title><rect x="74.6029%" y="309" width="0.0680%" height="15" fill="rgb(221,189,43)" fg:x="8783" fg:w="8"/><text x="74.8529%" y="319.50"></text></g><g><title>iroh`flume::Chan&lt;T&gt;::pull_pending (4 samples, 0.03%)</title><rect x="74.6369%" y="293" width="0.0340%" height="15" fill="rgb(207,36,27)" fg:x="8787" fg:w="4"/><text x="74.8869%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="74.7218%" y="293" width="0.0255%" height="15" fill="rgb(217,90,24)" fg:x="8797" fg:w="3"/><text x="74.9718%" y="303.50"></text></g><g><title>iroh`flume::async::RecvFut&lt;T&gt;::reset_hook (10 samples, 0.08%)</title><rect x="74.6709%" y="309" width="0.0849%" height="15" fill="rgb(224,66,35)" fg:x="8791" fg:w="10"/><text x="74.9209%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="74.7558%" y="309" width="0.0255%" height="15" fill="rgb(221,13,50)" fg:x="8801" fg:w="3"/><text x="75.0058%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="74.7643%" y="293" width="0.0170%" height="15" fill="rgb(236,68,49)" fg:x="8802" fg:w="2"/><text x="75.0143%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="74.7643%" y="277" width="0.0170%" height="15" fill="rgb(229,146,28)" fg:x="8802" fg:w="2"/><text x="75.0143%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.02%)</title><rect x="74.7643%" y="261" width="0.0170%" height="15" fill="rgb(225,31,38)" fg:x="8802" fg:w="2"/><text x="75.0143%" y="271.50"></text></g><g><title>iroh`&lt;flume::async::RecvStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (41 samples, 0.35%)</title><rect x="74.4415%" y="325" width="0.3483%" height="15" fill="rgb(250,208,3)" fg:x="8764" fg:w="41"/><text x="74.6915%" y="335.50"></text></g><g><title>iroh`&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="74.7898%" y="325" width="0.0255%" height="15" fill="rgb(246,54,23)" fg:x="8805" fg:w="3"/><text x="75.0398%" y="335.50"></text></g><g><title>iroh`&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="74.8237%" y="309" width="0.0170%" height="15" fill="rgb(243,76,11)" fg:x="8809" fg:w="2"/><text x="75.0737%" y="319.50"></text></g><g><title>iroh`quinn::mutex::non_tracking::Mutex&lt;T&gt;::lock (4 samples, 0.03%)</title><rect x="74.9342%" y="229" width="0.0340%" height="15" fill="rgb(245,21,50)" fg:x="8822" fg:w="4"/><text x="75.1842%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::streams::recv::Chunks::finalize (5 samples, 0.04%)</title><rect x="74.9681%" y="229" width="0.0425%" height="15" fill="rgb(228,9,43)" fg:x="8826" fg:w="5"/><text x="75.2181%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::streams::recv::Chunks::finalize_inner (3 samples, 0.03%)</title><rect x="74.9851%" y="213" width="0.0255%" height="15" fill="rgb(208,100,47)" fg:x="8828" fg:w="3"/><text x="75.2351%" y="223.50"></text></g><g><title>iroh`quinn_proto::connection::streams::recv::Chunks::new (7 samples, 0.06%)</title><rect x="75.0106%" y="229" width="0.0595%" height="15" fill="rgb(232,26,8)" fg:x="8831" fg:w="7"/><text x="75.2606%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::assembler::Assembler::ensure_ordering (2 samples, 0.02%)</title><rect x="75.0531%" y="213" width="0.0170%" height="15" fill="rgb(216,166,38)" fg:x="8836" fg:w="2"/><text x="75.3031%" y="223.50"></text></g><g><title>iroh`quinn::recv_stream::RecvStream::poll_read (24 samples, 0.20%)</title><rect x="74.8917%" y="245" width="0.2039%" height="15" fill="rgb(251,202,51)" fg:x="8817" fg:w="24"/><text x="75.1417%" y="255.50"></text></g><g><title>iroh`quinn_proto::connection::streams::recv::Chunks::next (3 samples, 0.03%)</title><rect x="75.0701%" y="229" width="0.0255%" height="15" fill="rgb(254,216,34)" fg:x="8838" fg:w="3"/><text x="75.3201%" y="239.50"></text></g><g><title>iroh`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (34 samples, 0.29%)</title><rect x="74.8153%" y="325" width="0.2888%" height="15" fill="rgb(251,32,27)" fg:x="8808" fg:w="34"/><text x="75.0653%" y="335.50"></text></g><g><title>iroh`&lt;tokio_serde::Framed&lt;Transport,Item,SinkItem,Codec&gt; as futures_core::stream::Stream&gt;::poll_next (31 samples, 0.26%)</title><rect x="74.8407%" y="309" width="0.2633%" height="15" fill="rgb(208,127,28)" fg:x="8811" fg:w="31"/><text x="75.0907%" y="319.50"></text></g><g><title>iroh`&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 0.25%)</title><rect x="74.8492%" y="293" width="0.2548%" height="15" fill="rgb(224,137,22)" fg:x="8812" fg:w="30"/><text x="75.0992%" y="303.50"></text></g><g><title>iroh`tokio_util::util::poll_buf::poll_read_buf (27 samples, 0.23%)</title><rect x="74.8747%" y="277" width="0.2293%" height="15" fill="rgb(254,70,32)" fg:x="8815" fg:w="27"/><text x="75.1247%" y="287.50"></text></g><g><title>iroh`&lt;quinn::recv_stream::RecvStream as tokio::io::async_read::AsyncRead&gt;::poll_read (27 samples, 0.23%)</title><rect x="74.8747%" y="261" width="0.2293%" height="15" fill="rgb(229,75,37)" fg:x="8815" fg:w="27"/><text x="75.1247%" y="271.50"></text></g><g><title>iroh`&lt;T as core::any::Any&gt;::type_id (4 samples, 0.03%)</title><rect x="75.1465%" y="309" width="0.0340%" height="15" fill="rgb(252,64,23)" fg:x="8847" fg:w="4"/><text x="75.3965%" y="319.50"></text></g><g><title>iroh`&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.09%)</title><rect x="75.1041%" y="325" width="0.0934%" height="15" fill="rgb(232,162,48)" fg:x="8842" fg:w="11"/><text x="75.3541%" y="335.50"></text></g><g><title>iroh`&lt;quinn::send_stream::SendStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (3 samples, 0.03%)</title><rect x="75.2484%" y="309" width="0.0255%" height="15" fill="rgb(246,160,12)" fg:x="8859" fg:w="3"/><text x="75.4984%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (4 samples, 0.03%)</title><rect x="75.2909%" y="261" width="0.0340%" height="15" fill="rgb(247,166,0)" fg:x="8864" fg:w="4"/><text x="75.5409%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (4 samples, 0.03%)</title><rect x="75.2909%" y="245" width="0.0340%" height="15" fill="rgb(249,219,21)" fg:x="8864" fg:w="4"/><text x="75.5409%" y="255.50"></text></g><g><title>iroh`quinn::mutex::non_tracking::Mutex&lt;T&gt;::lock (7 samples, 0.06%)</title><rect x="75.2824%" y="277" width="0.0595%" height="15" fill="rgb(205,209,3)" fg:x="8863" fg:w="7"/><text x="75.5324%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="75.3249%" y="261" width="0.0170%" height="15" fill="rgb(243,44,1)" fg:x="8868" fg:w="2"/><text x="75.5749%" y="271.50"></text></g><g><title>iroh`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (3 samples, 0.03%)</title><rect x="75.4438%" y="261" width="0.0255%" height="15" fill="rgb(206,159,16)" fg:x="8882" fg:w="3"/><text x="75.6938%" y="271.50"></text></g><g><title>iroh`quinn_proto::connection::streams::push_pending (2 samples, 0.02%)</title><rect x="75.4778%" y="261" width="0.0170%" height="15" fill="rgb(244,77,30)" fg:x="8886" fg:w="2"/><text x="75.7278%" y="271.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="75.5372%" y="213" width="0.0255%" height="15" fill="rgb(218,69,12)" fg:x="8893" fg:w="3"/><text x="75.7872%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.03%)</title><rect x="75.5372%" y="197" width="0.0255%" height="15" fill="rgb(212,87,7)" fg:x="8893" fg:w="3"/><text x="75.7872%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.03%)</title><rect x="75.5372%" y="181" width="0.0255%" height="15" fill="rgb(245,114,25)" fg:x="8893" fg:w="3"/><text x="75.7872%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.03%)</title><rect x="75.5372%" y="165" width="0.0255%" height="15" fill="rgb(210,61,42)" fg:x="8893" fg:w="3"/><text x="75.7872%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="75.5457%" y="149" width="0.0170%" height="15" fill="rgb(211,52,33)" fg:x="8894" fg:w="2"/><text x="75.7957%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="75.5457%" y="133" width="0.0170%" height="15" fill="rgb(234,58,33)" fg:x="8894" fg:w="2"/><text x="75.7957%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.02%)</title><rect x="75.5457%" y="117" width="0.0170%" height="15" fill="rgb(220,115,36)" fg:x="8894" fg:w="2"/><text x="75.7957%" y="127.50"></text></g><g><title>iroh`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (4 samples, 0.03%)</title><rect x="75.5372%" y="245" width="0.0340%" height="15" fill="rgb(243,153,54)" fg:x="8893" fg:w="4"/><text x="75.7872%" y="255.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.03%)</title><rect x="75.5372%" y="229" width="0.0340%" height="15" fill="rgb(251,47,18)" fg:x="8893" fg:w="4"/><text x="75.7872%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::streams::SendStream::write (30 samples, 0.25%)</title><rect x="75.3419%" y="277" width="0.2548%" height="15" fill="rgb(242,102,42)" fg:x="8870" fg:w="30"/><text x="75.5919%" y="287.50"></text></g><g><title>iroh`quinn_proto::connection::streams::send::Send::write (12 samples, 0.10%)</title><rect x="75.4948%" y="261" width="0.1019%" height="15" fill="rgb(234,31,38)" fg:x="8888" fg:w="12"/><text x="75.7448%" y="271.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="75.5712%" y="245" width="0.0255%" height="15" fill="rgb(221,117,51)" fg:x="8897" fg:w="3"/><text x="75.8212%" y="255.50"></text></g><g><title>iroh`quinn_proto::connection::streams::push_pending (3 samples, 0.03%)</title><rect x="75.5967%" y="277" width="0.0255%" height="15" fill="rgb(212,20,18)" fg:x="8900" fg:w="3"/><text x="75.8467%" y="287.50"></text></g><g><title>iroh`tokio::runtime::context::with_scheduler (2 samples, 0.02%)</title><rect x="75.6392%" y="245" width="0.0170%" height="15" fill="rgb(245,133,36)" fg:x="8905" fg:w="2"/><text x="75.8892%" y="255.50"></text></g><g><title>iroh`tokio::runtime::task::waker::wake_by_val (4 samples, 0.03%)</title><rect x="75.6307%" y="277" width="0.0340%" height="15" fill="rgb(212,6,19)" fg:x="8904" fg:w="4"/><text x="75.8807%" y="287.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (3 samples, 0.03%)</title><rect x="75.6392%" y="261" width="0.0255%" height="15" fill="rgb(218,1,36)" fg:x="8905" fg:w="3"/><text x="75.8892%" y="271.50"></text></g><g><title>iroh`&lt;quinn::send_stream::SendStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (47 samples, 0.40%)</title><rect x="75.2739%" y="293" width="0.3992%" height="15" fill="rgb(246,84,54)" fg:x="8862" fg:w="47"/><text x="75.5239%" y="303.50"></text></g><g><title>iroh`&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (56 samples, 0.48%)</title><rect x="75.2145%" y="325" width="0.4757%" height="15" fill="rgb(242,110,6)" fg:x="8855" fg:w="56"/><text x="75.4645%" y="335.50"></text></g><g><title>iroh`tokio_util::util::poll_buf::poll_write_buf (49 samples, 0.42%)</title><rect x="75.2739%" y="309" width="0.4162%" height="15" fill="rgb(214,47,5)" fg:x="8862" fg:w="49"/><text x="75.5239%" y="319.50"></text></g><g><title>iroh`quinn_proto::connection::streams::SendStream::write (2 samples, 0.02%)</title><rect x="75.6732%" y="293" width="0.0170%" height="15" fill="rgb(218,159,25)" fg:x="8909" fg:w="2"/><text x="75.9232%" y="303.50"></text></g><g><title>iroh`&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.03%)</title><rect x="75.7071%" y="293" width="0.0340%" height="15" fill="rgb(215,211,28)" fg:x="8913" fg:w="4"/><text x="75.9571%" y="303.50"></text></g><g><title>iroh`&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.02%)</title><rect x="75.7411%" y="293" width="0.0170%" height="15" fill="rgb(238,59,32)" fg:x="8917" fg:w="2"/><text x="75.9911%" y="303.50"></text></g><g><title>iroh`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (2 samples, 0.02%)</title><rect x="75.7581%" y="293" width="0.0170%" height="15" fill="rgb(226,82,3)" fg:x="8919" fg:w="2"/><text x="76.0081%" y="303.50"></text></g><g><title>iroh`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.02%)</title><rect x="75.7751%" y="293" width="0.0170%" height="15" fill="rgb(240,164,32)" fg:x="8921" fg:w="2"/><text x="76.0251%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="75.8430%" y="261" width="0.0170%" height="15" fill="rgb(232,46,7)" fg:x="8929" fg:w="2"/><text x="76.0930%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.02%)</title><rect x="75.8600%" y="261" width="0.0170%" height="15" fill="rgb(229,129,53)" fg:x="8931" fg:w="2"/><text x="76.1100%" y="271.50"></text></g><g><title>iroh`&lt;tokio_util::codec::length_delimited::LengthDelimitedCodec as tokio_util::codec::encoder::Encoder&lt;bytes::bytes::Bytes&gt;&gt;::encode (12 samples, 0.10%)</title><rect x="75.7921%" y="293" width="0.1019%" height="15" fill="rgb(234,188,29)" fg:x="8923" fg:w="12"/><text x="76.0421%" y="303.50"></text></g><g><title>iroh`bytes::bytes::promotable_even_drop (7 samples, 0.06%)</title><rect x="75.8345%" y="277" width="0.0595%" height="15" fill="rgb(246,141,4)" fg:x="8928" fg:w="7"/><text x="76.0845%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.02%)</title><rect x="75.8770%" y="261" width="0.0170%" height="15" fill="rgb(229,23,39)" fg:x="8933" fg:w="2"/><text x="76.1270%" y="271.50"></text></g><g><title>iroh`&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.03%)</title><rect x="75.9280%" y="277" width="0.0255%" height="15" fill="rgb(206,12,3)" fg:x="8939" fg:w="3"/><text x="76.1780%" y="287.50"></text></g><g><title>iroh`iroh::rpc_protocol::_::_&lt;impl serde::ser::Serialize for iroh::rpc_protocol::ProviderResponse&gt;::serialize (4 samples, 0.03%)</title><rect x="75.9535%" y="277" width="0.0340%" height="15" fill="rgb(252,226,20)" fg:x="8942" fg:w="4"/><text x="76.2035%" y="287.50"></text></g><g><title>iroh`iroh_sync::sync::_::_&lt;impl serde::ser::Serialize for iroh_sync::sync::DocSetProgress&gt;::serialize (2 samples, 0.02%)</title><rect x="75.9874%" y="277" width="0.0170%" height="15" fill="rgb(216,123,35)" fg:x="8946" fg:w="2"/><text x="76.2374%" y="287.50"></text></g><g><title>iroh`bincode::internal::serialize (22 samples, 0.19%)</title><rect x="75.8940%" y="293" width="0.1869%" height="15" fill="rgb(212,68,40)" fg:x="8935" fg:w="22"/><text x="76.1440%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.08%)</title><rect x="76.0044%" y="277" width="0.0764%" height="15" fill="rgb(254,125,32)" fg:x="8948" fg:w="9"/><text x="76.2544%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.07%)</title><rect x="76.0129%" y="261" width="0.0680%" height="15" fill="rgb(253,97,22)" fg:x="8949" fg:w="8"/><text x="76.2629%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.07%)</title><rect x="76.0129%" y="245" width="0.0680%" height="15" fill="rgb(241,101,14)" fg:x="8949" fg:w="8"/><text x="76.2629%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.03%)</title><rect x="76.0554%" y="229" width="0.0255%" height="15" fill="rgb(238,103,29)" fg:x="8954" fg:w="3"/><text x="76.3054%" y="239.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;iroh::rpc_protocol::ProviderResponse&gt; (3 samples, 0.03%)</title><rect x="76.0809%" y="293" width="0.0255%" height="15" fill="rgb(233,195,47)" fg:x="8957" fg:w="3"/><text x="76.3309%" y="303.50"></text></g><g><title>iroh`iroh::rpc_protocol::_::_&lt;impl serde::ser::Serialize for iroh::rpc_protocol::ProviderResponse&gt;::serialize (2 samples, 0.02%)</title><rect x="76.1063%" y="293" width="0.0170%" height="15" fill="rgb(246,218,30)" fg:x="8960" fg:w="2"/><text x="76.3563%" y="303.50"></text></g><g><title>iroh`&lt;tokio_serde::Framed&lt;Transport,Item,SinkItem,Codec&gt; as futures_sink::Sink&lt;SinkItem&gt;&gt;::start_send (51 samples, 0.43%)</title><rect x="75.7071%" y="309" width="0.4332%" height="15" fill="rgb(219,145,47)" fg:x="8913" fg:w="51"/><text x="75.9571%" y="319.50"></text></g><g><title>iroh`bincode::internal::serialize (2 samples, 0.02%)</title><rect x="76.1403%" y="309" width="0.0170%" height="15" fill="rgb(243,12,26)" fg:x="8964" fg:w="2"/><text x="76.3903%" y="319.50"></text></g><g><title>iroh`futures_util::sink::SinkExt::start_send_unpin (56 samples, 0.48%)</title><rect x="75.6986%" y="325" width="0.4757%" height="15" fill="rgb(214,87,16)" fg:x="8912" fg:w="56"/><text x="75.9486%" y="335.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;iroh::rpc_protocol::ProviderResponse&gt; (2 samples, 0.02%)</title><rect x="76.1573%" y="309" width="0.0170%" height="15" fill="rgb(208,99,42)" fg:x="8966" fg:w="2"/><text x="76.4073%" y="319.50"></text></g><g><title>iroh`tokio::macros::support::thread_rng_n (2 samples, 0.02%)</title><rect x="76.1743%" y="325" width="0.0170%" height="15" fill="rgb(253,99,2)" fg:x="8968" fg:w="2"/><text x="76.4243%" y="335.50"></text></g><g><title>iroh`tokio_util::util::poll_buf::poll_write_buf (2 samples, 0.02%)</title><rect x="76.1913%" y="325" width="0.0170%" height="15" fill="rgb(220,168,23)" fg:x="8970" fg:w="2"/><text x="76.4413%" y="335.50"></text></g><g><title>iroh`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (221 samples, 1.88%)</title><rect x="74.3481%" y="341" width="1.8772%" height="15" fill="rgb(242,38,24)" fg:x="8753" fg:w="221"/><text x="74.5981%" y="351.50">i..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="76.2083%" y="325" width="0.0170%" height="15" fill="rgb(225,182,9)" fg:x="8972" fg:w="2"/><text x="76.4583%" y="335.50"></text></g><g><title>iroh`futures_util::sink::SinkExt::start_send_unpin (2 samples, 0.02%)</title><rect x="76.2338%" y="341" width="0.0170%" height="15" fill="rgb(243,178,37)" fg:x="8975" fg:w="2"/><text x="76.4838%" y="351.50"></text></g><g><title>iroh`tokio::macros::support::thread_rng_n (3 samples, 0.03%)</title><rect x="76.2507%" y="341" width="0.0255%" height="15" fill="rgb(232,139,19)" fg:x="8977" fg:w="3"/><text x="76.5007%" y="351.50"></text></g><g><title>iroh`iroh::node::handle_rpc_request::_{{closure}} (245 samples, 2.08%)</title><rect x="74.2207%" y="357" width="2.0810%" height="15" fill="rgb(225,201,24)" fg:x="8738" fg:w="245"/><text x="74.4707%" y="367.50">i..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="76.2762%" y="341" width="0.0255%" height="15" fill="rgb(221,47,46)" fg:x="8980" fg:w="3"/><text x="76.5262%" y="351.50"></text></g><g><title>iroh`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="76.3017%" y="341" width="0.0255%" height="15" fill="rgb(249,23,13)" fg:x="8983" fg:w="3"/><text x="76.5517%" y="351.50"></text></g><g><title>iroh`iroh_net::net::netmon::Monitor::new::_{{closure}}::_{{closure}} (5 samples, 0.04%)</title><rect x="76.3017%" y="357" width="0.0425%" height="15" fill="rgb(219,9,5)" fg:x="8983" fg:w="5"/><text x="76.5517%" y="367.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;iroh_net::net::netmon::actor::NetworkMessage&gt;&gt; (2 samples, 0.02%)</title><rect x="76.3272%" y="341" width="0.0170%" height="15" fill="rgb(254,171,16)" fg:x="8986" fg:w="2"/><text x="76.5772%" y="351.50"></text></g><g><title>iroh`&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="76.3272%" y="325" width="0.0170%" height="15" fill="rgb(230,171,20)" fg:x="8986" fg:w="2"/><text x="76.5772%" y="335.50"></text></g><g><title>iroh`&lt;bytes::bytes_mut::BytesMut as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (7 samples, 0.06%)</title><rect x="76.4631%" y="325" width="0.0595%" height="15" fill="rgb(210,71,41)" fg:x="9002" fg:w="7"/><text x="76.7131%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.06%)</title><rect x="76.4631%" y="309" width="0.0595%" height="15" fill="rgb(206,173,20)" fg:x="9002" fg:w="7"/><text x="76.7131%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.06%)</title><rect x="76.4631%" y="293" width="0.0595%" height="15" fill="rgb(233,88,34)" fg:x="9002" fg:w="7"/><text x="76.7131%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.06%)</title><rect x="76.4631%" y="277" width="0.0595%" height="15" fill="rgb(223,209,46)" fg:x="9002" fg:w="7"/><text x="76.7131%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.04%)</title><rect x="76.4801%" y="261" width="0.0425%" height="15" fill="rgb(250,43,18)" fg:x="9004" fg:w="5"/><text x="76.7301%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_size (2 samples, 0.02%)</title><rect x="76.5395%" y="277" width="0.0170%" height="15" fill="rgb(208,13,10)" fg:x="9011" fg:w="2"/><text x="76.7895%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.04%)</title><rect x="76.5310%" y="293" width="0.0425%" height="15" fill="rgb(212,200,36)" fg:x="9010" fg:w="5"/><text x="76.7810%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="76.5565%" y="277" width="0.0170%" height="15" fill="rgb(225,90,30)" fg:x="9013" fg:w="2"/><text x="76.8065%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="76.5565%" y="261" width="0.0170%" height="15" fill="rgb(236,182,39)" fg:x="9013" fg:w="2"/><text x="76.8065%" y="271.50"></text></g><g><title>iroh`bytes::bytes::shared_drop (10 samples, 0.08%)</title><rect x="76.5310%" y="309" width="0.0849%" height="15" fill="rgb(212,144,35)" fg:x="9010" fg:w="10"/><text x="76.7810%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.04%)</title><rect x="76.5735%" y="293" width="0.0425%" height="15" fill="rgb(228,63,44)" fg:x="9015" fg:w="5"/><text x="76.8235%" y="303.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;quinn_udp::Transmit,alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="76.6160%" y="309" width="0.0170%" height="15" fill="rgb(228,109,6)" fg:x="9020" fg:w="2"/><text x="76.8660%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="76.6330%" y="309" width="0.0170%" height="15" fill="rgb(238,117,24)" fg:x="9022" fg:w="2"/><text x="76.8830%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.02%)</title><rect x="76.6330%" y="293" width="0.0170%" height="15" fill="rgb(242,26,26)" fg:x="9022" fg:w="2"/><text x="76.8830%" y="303.50"></text></g><g><title>iroh`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.13%)</title><rect x="76.5310%" y="325" width="0.1274%" height="15" fill="rgb(221,92,48)" fg:x="9010" fg:w="15"/><text x="76.7810%" y="335.50"></text></g><g><title>iroh`tokio::runtime::io::registration::Registration::poll_ready (4 samples, 0.03%)</title><rect x="76.6585%" y="293" width="0.0340%" height="15" fill="rgb(209,209,32)" fg:x="9025" fg:w="4"/><text x="76.9085%" y="303.50"></text></g><g><title>iroh`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.02%)</title><rect x="76.6754%" y="277" width="0.0170%" height="15" fill="rgb(221,70,22)" fg:x="9027" fg:w="2"/><text x="76.9254%" y="287.50"></text></g><g><title>iroh`tokio::net::tcp::stream::TcpStream::poll_read_ready (8 samples, 0.07%)</title><rect x="76.6585%" y="309" width="0.0680%" height="15" fill="rgb(248,145,5)" fg:x="9025" fg:w="8"/><text x="76.9085%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.03%)</title><rect x="76.6924%" y="293" width="0.0340%" height="15" fill="rgb(226,116,26)" fg:x="9029" fg:w="4"/><text x="76.9424%" y="303.50"></text></g><g><title>iroh`quinn_udp::imp::UdpSocketState::recv (6 samples, 0.05%)</title><rect x="76.7519%" y="293" width="0.0510%" height="15" fill="rgb(244,5,17)" fg:x="9036" fg:w="6"/><text x="77.0019%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__recvmsg (4 samples, 0.03%)</title><rect x="76.7689%" y="277" width="0.0340%" height="15" fill="rgb(252,159,33)" fg:x="9038" fg:w="4"/><text x="77.0189%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (3 samples, 0.03%)</title><rect x="76.7774%" y="261" width="0.0255%" height="15" fill="rgb(206,71,0)" fg:x="9039" fg:w="3"/><text x="77.0274%" y="271.50"></text></g><g><title>iroh`tokio::runtime::io::registration::Registration::try_io (113 samples, 0.96%)</title><rect x="76.7349%" y="309" width="0.9598%" height="15" fill="rgb(233,118,54)" fg:x="9034" fg:w="113"/><text x="76.9849%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__recvmsg (105 samples, 0.89%)</title><rect x="76.8029%" y="293" width="0.8919%" height="15" fill="rgb(234,83,48)" fg:x="9042" fg:w="105"/><text x="77.0529%" y="303.50"></text></g><g><title>iroh`&lt;quinn::runtime::tokio::UdpSocket as quinn::runtime::AsyncUdpSocket&gt;::poll_recv (124 samples, 1.05%)</title><rect x="76.6585%" y="325" width="1.0533%" height="15" fill="rgb(228,3,54)" fg:x="9025" fg:w="124"/><text x="76.9085%" y="335.50"></text></g><g><title>iroh`tokio::runtime::io::scheduled_io::ScheduledIo::ready_event (2 samples, 0.02%)</title><rect x="77.6947%" y="309" width="0.0170%" height="15" fill="rgb(226,155,13)" fg:x="9147" fg:w="2"/><text x="77.9447%" y="319.50"></text></g><g><title>iroh`&lt;socket2::sockaddr::SockAddr as core::convert::From&lt;core::net::socket_addr::SocketAddr&gt;&gt;::from (3 samples, 0.03%)</title><rect x="77.7457%" y="293" width="0.0255%" height="15" fill="rgb(241,28,37)" fg:x="9153" fg:w="3"/><text x="77.9957%" y="303.50"></text></g><g><title>iroh`&lt;std::process::ExitStatusError as core::convert::Into&lt;std::process::ExitStatus&gt;&gt;::into (2 samples, 0.02%)</title><rect x="77.7712%" y="293" width="0.0170%" height="15" fill="rgb(233,93,10)" fg:x="9156" fg:w="2"/><text x="78.0212%" y="303.50"></text></g><g><title>iroh`libc::unix::bsd::apple::__DARWIN_ALIGN32 (2 samples, 0.02%)</title><rect x="77.8391%" y="277" width="0.0170%" height="15" fill="rgb(225,113,19)" fg:x="9164" fg:w="2"/><text x="78.0891%" y="287.50"></text></g><g><title>iroh`quinn_udp::imp::UdpSocketState::send (8 samples, 0.07%)</title><rect x="77.7967%" y="293" width="0.0680%" height="15" fill="rgb(241,2,18)" fg:x="9159" fg:w="8"/><text x="78.0467%" y="303.50"></text></g><g><title>iroh`tokio::runtime::io::registration::Registration::try_io (487 samples, 4.14%)</title><rect x="77.7457%" y="309" width="4.1366%" height="15" fill="rgb(228,207,21)" fg:x="9153" fg:w="487"/><text x="77.9957%" y="319.50">iroh`..</text></g><g><title>libsystem_kernel.dylib`__sendmsg (473 samples, 4.02%)</title><rect x="77.8646%" y="293" width="4.0177%" height="15" fill="rgb(213,211,35)" fg:x="9167" fg:w="473"/><text x="78.1146%" y="303.50">libs..</text></g><g><title>iroh`&lt;quinn::runtime::tokio::UdpSocket as quinn::runtime::AsyncUdpSocket&gt;::poll_send (492 samples, 4.18%)</title><rect x="77.7117%" y="325" width="4.1791%" height="15" fill="rgb(209,83,10)" fg:x="9149" fg:w="492"/><text x="77.9617%" y="335.50">iroh`..</text></g><g><title>iroh`&lt;quinn_proto::cid_generator::RandomConnectionIdGenerator as quinn_proto::cid_generator::ConnectionIdGenerator&gt;::cid_len (4 samples, 0.03%)</title><rect x="81.8908%" y="325" width="0.0340%" height="15" fill="rgb(209,164,1)" fg:x="9641" fg:w="4"/><text x="82.1408%" y="335.50"></text></g><g><title>iroh`bytes::bytes_mut::BytesMut::split_to (2 samples, 0.02%)</title><rect x="81.9332%" y="325" width="0.0170%" height="15" fill="rgb(213,184,43)" fg:x="9646" fg:w="2"/><text x="82.1832%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="81.9332%" y="309" width="0.0170%" height="15" fill="rgb(231,61,34)" fg:x="9646" fg:w="2"/><text x="82.1832%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="81.9332%" y="293" width="0.0170%" height="15" fill="rgb(235,75,3)" fg:x="9646" fg:w="2"/><text x="82.1832%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="81.9332%" y="277" width="0.0170%" height="15" fill="rgb(220,106,47)" fg:x="9646" fg:w="2"/><text x="82.1832%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.02%)</title><rect x="81.9332%" y="261" width="0.0170%" height="15" fill="rgb(210,196,33)" fg:x="9646" fg:w="2"/><text x="82.1832%" y="271.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;quinn_udp::Transmit,alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="81.9502%" y="325" width="0.0170%" height="15" fill="rgb(229,154,42)" fg:x="9648" fg:w="2"/><text x="82.2002%" y="335.50"></text></g><g><title>iroh`quinn_proto::endpoint::Endpoint::handle (10 samples, 0.08%)</title><rect x="81.9672%" y="325" width="0.0849%" height="15" fill="rgb(228,114,26)" fg:x="9650" fg:w="10"/><text x="82.2172%" y="335.50"></text></g><g><title>iroh`quinn_proto::packet::PartialDecode::new (3 samples, 0.03%)</title><rect x="82.0267%" y="309" width="0.0255%" height="15" fill="rgb(208,144,1)" fg:x="9657" fg:w="3"/><text x="82.2767%" y="319.50"></text></g><g><title>iroh`quinn_proto::shared::ConnectionId::from_buf (3 samples, 0.03%)</title><rect x="82.0267%" y="293" width="0.0255%" height="15" fill="rgb(239,112,37)" fg:x="9657" fg:w="3"/><text x="82.2767%" y="303.50"></text></g><g><title>iroh`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (4 samples, 0.03%)</title><rect x="82.1116%" y="309" width="0.0340%" height="15" fill="rgb(210,96,50)" fg:x="9667" fg:w="4"/><text x="82.3616%" y="319.50"></text></g><g><title>iroh`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (10 samples, 0.08%)</title><rect x="82.0691%" y="325" width="0.0849%" height="15" fill="rgb(222,178,2)" fg:x="9662" fg:w="10"/><text x="82.3191%" y="335.50"></text></g><g><title>iroh`tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (2 samples, 0.02%)</title><rect x="82.1541%" y="325" width="0.0170%" height="15" fill="rgb(226,74,18)" fg:x="9672" fg:w="2"/><text x="82.4041%" y="335.50"></text></g><g><title>iroh`&lt;quinn::endpoint::EndpointDriver as core::future::future::Future&gt;::poll (685 samples, 5.82%)</title><rect x="76.3697%" y="341" width="5.8184%" height="15" fill="rgb(225,67,54)" fg:x="8991" fg:w="685"/><text x="76.6197%" y="351.50">iroh`&lt;q..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="82.1711%" y="325" width="0.0170%" height="15" fill="rgb(251,92,32)" fg:x="9674" fg:w="2"/><text x="82.4211%" y="335.50"></text></g><g><title>iroh`&lt;quinn::runtime::tokio::UdpSocket as quinn::runtime::AsyncUdpSocket&gt;::poll_recv (3 samples, 0.03%)</title><rect x="82.1881%" y="341" width="0.0255%" height="15" fill="rgb(228,149,22)" fg:x="9676" fg:w="3"/><text x="82.4381%" y="351.50"></text></g><g><title>iroh`&lt;quinn::runtime::tokio::UdpSocket as quinn::runtime::AsyncUdpSocket&gt;::poll_send (4 samples, 0.03%)</title><rect x="82.2135%" y="341" width="0.0340%" height="15" fill="rgb(243,54,13)" fg:x="9679" fg:w="4"/><text x="82.4635%" y="351.50"></text></g><g><title>iroh`quinn_proto::endpoint::Endpoint::set_socket_buffer_fill (2 samples, 0.02%)</title><rect x="82.2560%" y="341" width="0.0170%" height="15" fill="rgb(243,180,28)" fg:x="9684" fg:w="2"/><text x="82.5060%" y="351.50"></text></g><g><title>iroh`quinn::endpoint::Endpoint::new_with_runtime::_{{closure}} (700 samples, 5.95%)</title><rect x="76.3442%" y="357" width="5.9458%" height="15" fill="rgb(208,167,24)" fg:x="8988" fg:w="700"/><text x="76.5942%" y="367.50">iroh`qui..</text></g><g><title>iroh`quinn::runtime::tokio::_&lt;impl quinn::runtime::AsyncTimer for tokio::time::sleep::Sleep&gt;::reset (2 samples, 0.02%)</title><rect x="82.2900%" y="357" width="0.0170%" height="15" fill="rgb(245,73,45)" fg:x="9688" fg:w="2"/><text x="82.5400%" y="367.50"></text></g><g><title>iroh`quinn_proto::connection::Connection::poll_timeout (8 samples, 0.07%)</title><rect x="82.3155%" y="357" width="0.0680%" height="15" fill="rgb(237,203,48)" fg:x="9691" fg:w="8"/><text x="82.5655%" y="367.50"></text></g><g><title>iroh`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,536 samples, 13.05%)</title><rect x="69.3876%" y="373" width="13.0468%" height="15" fill="rgb(211,197,16)" fg:x="8169" fg:w="1536"/><text x="69.6376%" y="383.50">iroh`tokio::runtime:..</text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,574 samples, 13.37%)</title><rect x="69.0818%" y="389" width="13.3696%" height="15" fill="rgb(243,99,51)" fg:x="8133" fg:w="1574"/><text x="69.3318%" y="399.50">iroh`tokio::runtime:..</text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1,651 samples, 14.02%)</title><rect x="68.4447%" y="405" width="14.0236%" height="15" fill="rgb(215,123,29)" fg:x="8058" fg:w="1651"/><text x="68.6947%" y="415.50">iroh`tokio::runtime::..</text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.03%)</title><rect x="82.4684%" y="405" width="0.0255%" height="15" fill="rgb(239,186,37)" fg:x="9709" fg:w="3"/><text x="82.7184%" y="415.50"></text></g><g><title>iroh`tokio::runtime::task::raw::poll (6 samples, 0.05%)</title><rect x="82.4938%" y="405" width="0.0510%" height="15" fill="rgb(252,136,39)" fg:x="9712" fg:w="6"/><text x="82.7438%" y="415.50"></text></g><g><title>iroh`tokio::runtime::context::set_scheduler (2,012 samples, 17.09%)</title><rect x="65.4973%" y="421" width="17.0900%" height="15" fill="rgb(223,213,32)" fg:x="7711" fg:w="2012"/><text x="65.7473%" y="431.50">iroh`tokio::runtime::conte..</text></g><g><title>libsystem_m.dylib`pow (4 samples, 0.03%)</title><rect x="82.5533%" y="405" width="0.0340%" height="15" fill="rgb(233,115,5)" fg:x="9719" fg:w="4"/><text x="82.8033%" y="415.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (2 samples, 0.02%)</title><rect x="82.5873%" y="421" width="0.0170%" height="15" fill="rgb(207,226,44)" fg:x="9723" fg:w="2"/><text x="82.8373%" y="431.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (3 samples, 0.03%)</title><rect x="82.6043%" y="421" width="0.0255%" height="15" fill="rgb(208,126,0)" fg:x="9725" fg:w="3"/><text x="82.8543%" y="431.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::run (2,023 samples, 17.18%)</title><rect x="65.4803%" y="453" width="17.1834%" height="15" fill="rgb(244,66,21)" fg:x="7709" fg:w="2023"/><text x="65.7303%" y="463.50">iroh`tokio::runtime::schedu..</text></g><g><title>iroh`tokio::runtime::context::runtime::enter_runtime (2,023 samples, 17.18%)</title><rect x="65.4803%" y="437" width="17.1834%" height="15" fill="rgb(222,97,12)" fg:x="7709" fg:w="2023"/><text x="65.7303%" y="447.50">iroh`tokio::runtime::contex..</text></g><g><title>libsystem_m.dylib`pow (4 samples, 0.03%)</title><rect x="82.6297%" y="421" width="0.0340%" height="15" fill="rgb(219,213,19)" fg:x="9728" fg:w="4"/><text x="82.8797%" y="431.50"></text></g><g><title>iroh`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (2 samples, 0.02%)</title><rect x="82.6637%" y="453" width="0.0170%" height="15" fill="rgb(252,169,30)" fg:x="9732" fg:w="2"/><text x="82.9137%" y="463.50"></text></g><g><title>iroh`tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.02%)</title><rect x="82.6807%" y="453" width="0.0170%" height="15" fill="rgb(206,32,51)" fg:x="9734" fg:w="2"/><text x="82.9307%" y="463.50"></text></g><g><title>iroh`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (9,615 samples, 81.67%)</title><rect x="1.0618%" y="469" width="81.6699%" height="15" fill="rgb(250,172,42)" fg:x="125" fg:w="9615"/><text x="1.3118%" y="479.50">iroh`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.03%)</title><rect x="82.6977%" y="453" width="0.0340%" height="15" fill="rgb(209,34,43)" fg:x="9736" fg:w="4"/><text x="82.9477%" y="463.50"></text></g><g><title>iroh`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (2 samples, 0.02%)</title><rect x="82.7487%" y="453" width="0.0170%" height="15" fill="rgb(223,11,35)" fg:x="9742" fg:w="2"/><text x="82.9987%" y="463.50"></text></g><g><title>iroh`tokio::task::local::Shared::schedule (52 samples, 0.44%)</title><rect x="82.8166%" y="405" width="0.4417%" height="15" fill="rgb(251,219,26)" fg:x="9750" fg:w="52"/><text x="83.0666%" y="415.50"></text></g><g><title>iroh`tokio::util::wake::wake_arc_raw (48 samples, 0.41%)</title><rect x="82.8506%" y="389" width="0.4077%" height="15" fill="rgb(231,119,3)" fg:x="9754" fg:w="48"/><text x="83.1006%" y="399.50"></text></g><g><title>iroh`tokio::runtime::driver::Handle::unpark (47 samples, 0.40%)</title><rect x="82.8591%" y="373" width="0.3992%" height="15" fill="rgb(216,97,11)" fg:x="9755" fg:w="47"/><text x="83.1091%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`kevent (45 samples, 0.38%)</title><rect x="82.8761%" y="357" width="0.3822%" height="15" fill="rgb(223,59,9)" fg:x="9757" fg:w="45"/><text x="83.1261%" y="367.50"></text></g><g><title>iroh`tokio::runtime::task::waker::wake_by_val (54 samples, 0.46%)</title><rect x="82.8166%" y="421" width="0.4587%" height="15" fill="rgb(233,93,31)" fg:x="9750" fg:w="54"/><text x="83.0666%" y="431.50"></text></g><g><title>iroh`tokio::util::wake::wake_arc_raw (2 samples, 0.02%)</title><rect x="83.2583%" y="405" width="0.0170%" height="15" fill="rgb(239,81,33)" fg:x="9802" fg:w="2"/><text x="83.5083%" y="415.50"></text></g><g><title>iroh`tokio::task::local::Shared::schedule (4 samples, 0.03%)</title><rect x="83.2753%" y="421" width="0.0340%" height="15" fill="rgb(213,120,34)" fg:x="9804" fg:w="4"/><text x="83.5253%" y="431.50"></text></g><g><title>iroh`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (65 samples, 0.55%)</title><rect x="82.7657%" y="437" width="0.5521%" height="15" fill="rgb(243,49,53)" fg:x="9744" fg:w="65"/><text x="83.0157%" y="447.50"></text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (68 samples, 0.58%)</title><rect x="82.7487%" y="469" width="0.5776%" height="15" fill="rgb(247,216,33)" fg:x="9742" fg:w="68"/><text x="82.9987%" y="479.50"></text></g><g><title>iroh`futures_task::waker::wake_by_ref_arc_raw (66 samples, 0.56%)</title><rect x="82.7657%" y="453" width="0.5606%" height="15" fill="rgb(226,26,14)" fg:x="9744" fg:w="66"/><text x="83.0157%" y="463.50"></text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9,701 samples, 82.40%)</title><rect x="0.9428%" y="485" width="82.4004%" height="15" fill="rgb(215,49,53)" fg:x="111" fg:w="9701"/><text x="1.1928%" y="495.50">iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>libsystem_info.dylib`si_addrinfo (2 samples, 0.02%)</title><rect x="83.3432%" y="405" width="0.0170%" height="15" fill="rgb(245,162,40)" fg:x="9812" fg:w="2"/><text x="83.5932%" y="415.50"></text></g><g><title>libsystem_info.dylib`search_addrinfo (2 samples, 0.02%)</title><rect x="83.3432%" y="389" width="0.0170%" height="15" fill="rgb(229,68,17)" fg:x="9812" fg:w="2"/><text x="83.5932%" y="399.50"></text></g><g><title>libsystem_info.dylib`mdns_addrinfo (2 samples, 0.02%)</title><rect x="83.3432%" y="373" width="0.0170%" height="15" fill="rgb(213,182,10)" fg:x="9812" fg:w="2"/><text x="83.5932%" y="383.50"></text></g><g><title>libsystem_info.dylib`_mdns_search_ex (2 samples, 0.02%)</title><rect x="83.3432%" y="357" width="0.0170%" height="15" fill="rgb(245,125,30)" fg:x="9812" fg:w="2"/><text x="83.5932%" y="367.50"></text></g><g><title>iroh`tokio::runtime::task::raw::poll (3 samples, 0.03%)</title><rect x="83.3432%" y="485" width="0.0255%" height="15" fill="rgb(232,202,2)" fg:x="9812" fg:w="3"/><text x="83.5932%" y="495.50"></text></g><g><title>iroh`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.03%)</title><rect x="83.3432%" y="469" width="0.0255%" height="15" fill="rgb(237,140,51)" fg:x="9812" fg:w="3"/><text x="83.5932%" y="479.50"></text></g><g><title>iroh`&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (3 samples, 0.03%)</title><rect x="83.3432%" y="453" width="0.0255%" height="15" fill="rgb(236,157,25)" fg:x="9812" fg:w="3"/><text x="83.5932%" y="463.50"></text></g><g><title>iroh`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (3 samples, 0.03%)</title><rect x="83.3432%" y="437" width="0.0255%" height="15" fill="rgb(219,209,0)" fg:x="9812" fg:w="3"/><text x="83.5932%" y="447.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (3 samples, 0.03%)</title><rect x="83.3432%" y="421" width="0.0255%" height="15" fill="rgb(240,116,54)" fg:x="9812" fg:w="3"/><text x="83.5932%" y="431.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (3 samples, 0.03%)</title><rect x="83.3687%" y="485" width="0.0255%" height="15" fill="rgb(216,10,36)" fg:x="9815" fg:w="3"/><text x="83.6187%" y="495.50"></text></g><g><title>iroh`tokio::runtime::blocking::pool::Inner::run (9,810 samples, 83.33%)</title><rect x="0.0764%" y="501" width="83.3263%" height="15" fill="rgb(222,72,44)" fg:x="9" fg:w="9810"/><text x="0.3264%" y="511.50">iroh`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>iroh`tokio::runtime::driver::Driver::park (3 samples, 0.03%)</title><rect x="83.4367%" y="421" width="0.0255%" height="15" fill="rgb(232,159,9)" fg:x="9823" fg:w="3"/><text x="83.6867%" y="431.50"></text></g><g><title>iroh`&lt;tokio::runtime::context::blocking::DisallowBlockInPlaceGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="83.5811%" y="389" width="0.0170%" height="15" fill="rgb(210,39,32)" fg:x="9840" fg:w="2"/><text x="83.8311%" y="399.50"></text></g><g><title>iroh`tokio::runtime::task::raw::poll (3 samples, 0.03%)</title><rect x="83.6066%" y="389" width="0.0255%" height="15" fill="rgb(216,194,45)" fg:x="9843" fg:w="3"/><text x="83.8566%" y="399.50"></text></g><g><title>iroh`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (7 samples, 0.06%)</title><rect x="83.6320%" y="389" width="0.0595%" height="15" fill="rgb(218,18,35)" fg:x="9846" fg:w="7"/><text x="83.8820%" y="399.50"></text></g><g><title>iroh`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (5 samples, 0.04%)</title><rect x="83.6490%" y="373" width="0.0425%" height="15" fill="rgb(207,83,51)" fg:x="9848" fg:w="5"/><text x="83.8990%" y="383.50"></text></g><g><title>iroh`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.03%)</title><rect x="83.7255%" y="373" width="0.0255%" height="15" fill="rgb(225,63,43)" fg:x="9857" fg:w="3"/><text x="83.9755%" y="383.50"></text></g><g><title>iroh`&lt;futures_util::abortable::Abortable&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="83.7934%" y="357" width="0.0255%" height="15" fill="rgb(207,57,36)" fg:x="9865" fg:w="3"/><text x="84.0434%" y="367.50"></text></g><g><title>iroh`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="83.8189%" y="357" width="0.0255%" height="15" fill="rgb(216,99,33)" fg:x="9868" fg:w="3"/><text x="84.0689%" y="367.50"></text></g><g><title>iroh`&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (2 samples, 0.02%)</title><rect x="84.1077%" y="261" width="0.0170%" height="15" fill="rgb(225,42,16)" fg:x="9902" fg:w="2"/><text x="84.3577%" y="271.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3 samples, 0.03%)</title><rect x="84.1502%" y="245" width="0.0255%" height="15" fill="rgb(220,201,45)" fg:x="9907" fg:w="3"/><text x="84.4002%" y="255.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::notify_one_slow (17 samples, 0.14%)</title><rect x="84.1247%" y="261" width="0.1444%" height="15" fill="rgb(225,33,4)" fg:x="9904" fg:w="17"/><text x="84.3747%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (11 samples, 0.09%)</title><rect x="84.1757%" y="245" width="0.0934%" height="15" fill="rgb(224,33,50)" fg:x="9910" fg:w="11"/><text x="84.4257%" y="255.50"></text></g><g><title>iroh`tokio::runtime::driver::Handle::unpark (12 samples, 0.10%)</title><rect x="84.2776%" y="261" width="0.1019%" height="15" fill="rgb(246,198,51)" fg:x="9922" fg:w="12"/><text x="84.5276%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (12 samples, 0.10%)</title><rect x="84.2776%" y="245" width="0.1019%" height="15" fill="rgb(205,22,4)" fg:x="9922" fg:w="12"/><text x="84.5276%" y="255.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (4 samples, 0.03%)</title><rect x="84.3795%" y="261" width="0.0340%" height="15" fill="rgb(206,3,8)" fg:x="9934" fg:w="4"/><text x="84.6295%" y="271.50"></text></g><g><title>iroh`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (37 samples, 0.31%)</title><rect x="84.1077%" y="277" width="0.3143%" height="15" fill="rgb(251,23,15)" fg:x="9902" fg:w="37"/><text x="84.3577%" y="287.50"></text></g><g><title>iroh`&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (40 samples, 0.34%)</title><rect x="84.0907%" y="293" width="0.3398%" height="15" fill="rgb(252,88,28)" fg:x="9900" fg:w="40"/><text x="84.3407%" y="303.50"></text></g><g><title>iroh`&lt;flume::async::SendFut&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.41%)</title><rect x="84.0482%" y="309" width="0.4077%" height="15" fill="rgb(212,127,14)" fg:x="9895" fg:w="48"/><text x="84.2982%" y="319.50"></text></g><g><title>iroh`tokio::runtime::task::raw::schedule (3 samples, 0.03%)</title><rect x="84.4305%" y="293" width="0.0255%" height="15" fill="rgb(247,145,37)" fg:x="9940" fg:w="3"/><text x="84.6805%" y="303.50"></text></g><g><title>iroh`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (51 samples, 0.43%)</title><rect x="84.0398%" y="325" width="0.4332%" height="15" fill="rgb(209,117,53)" fg:x="9894" fg:w="51"/><text x="84.2898%" y="335.50"></text></g><g><title>iroh`&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="84.4560%" y="309" width="0.0170%" height="15" fill="rgb(212,90,42)" fg:x="9943" fg:w="2"/><text x="84.7060%" y="319.50"></text></g><g><title>iroh`flume::async::_::_&lt;impl core::ops::drop::Drop for flume::async::SendFut&lt;T&gt;&gt;::drop (2 samples, 0.02%)</title><rect x="84.4560%" y="293" width="0.0170%" height="15" fill="rgb(218,164,37)" fg:x="9943" fg:w="2"/><text x="84.7060%" y="303.50"></text></g><g><title>iroh`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="84.6089%" y="261" width="0.0170%" height="15" fill="rgb(246,65,34)" fg:x="9961" fg:w="2"/><text x="84.8589%" y="271.50"></text></g><g><title>iroh`futures_task::waker::clone_arc_raw (2 samples, 0.02%)</title><rect x="84.6513%" y="197" width="0.0170%" height="15" fill="rgb(231,100,33)" fg:x="9966" fg:w="2"/><text x="84.9013%" y="207.50"></text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (3 samples, 0.03%)</title><rect x="84.6513%" y="213" width="0.0255%" height="15" fill="rgb(228,126,14)" fg:x="9966" fg:w="3"/><text x="84.9013%" y="223.50"></text></g><g><title>iroh`&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="84.6513%" y="229" width="0.0340%" height="15" fill="rgb(215,173,21)" fg:x="9966" fg:w="4"/><text x="84.9013%" y="239.50"></text></g><g><title>iroh`futures_task::waker::drop_arc_raw (2 samples, 0.02%)</title><rect x="84.6853%" y="229" width="0.0170%" height="15" fill="rgb(210,6,40)" fg:x="9970" fg:w="2"/><text x="84.9353%" y="239.50"></text></g><g><title>iroh`tokio::runtime::coop::poll_proceed (2 samples, 0.02%)</title><rect x="84.7023%" y="229" width="0.0170%" height="15" fill="rgb(212,48,18)" fg:x="9972" fg:w="2"/><text x="84.9523%" y="239.50"></text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2 samples, 0.02%)</title><rect x="84.7193%" y="229" width="0.0170%" height="15" fill="rgb(230,214,11)" fg:x="9974" fg:w="2"/><text x="84.9693%" y="239.50"></text></g><g><title>iroh`tokio::runtime::task::raw::try_read_output (2 samples, 0.02%)</title><rect x="84.7532%" y="229" width="0.0170%" height="15" fill="rgb(254,105,39)" fg:x="9978" fg:w="2"/><text x="85.0032%" y="239.50"></text></g><g><title>iroh`tokio::runtime::task::state::State::ref_dec (2 samples, 0.02%)</title><rect x="84.7702%" y="229" width="0.0170%" height="15" fill="rgb(245,158,5)" fg:x="9980" fg:w="2"/><text x="85.0202%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="84.8297%" y="197" width="0.0255%" height="15" fill="rgb(249,208,11)" fg:x="9987" fg:w="3"/><text x="85.0797%" y="207.50"></text></g><g><title>iroh`&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.22%)</title><rect x="84.6513%" y="245" width="0.2208%" height="15" fill="rgb(210,39,28)" fg:x="9966" fg:w="26"/><text x="84.9013%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.08%)</title><rect x="84.7957%" y="229" width="0.0764%" height="15" fill="rgb(211,56,53)" fg:x="9983" fg:w="9"/><text x="85.0457%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.07%)</title><rect x="84.8042%" y="213" width="0.0680%" height="15" fill="rgb(226,201,30)" fg:x="9984" fg:w="8"/><text x="85.0542%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="84.8552%" y="197" width="0.0170%" height="15" fill="rgb(239,101,34)" fg:x="9990" fg:w="2"/><text x="85.1052%" y="207.50"></text></g><g><title>iroh`parking_lot::condvar::Condvar::notify_one_slow (8 samples, 0.07%)</title><rect x="84.9061%" y="197" width="0.0680%" height="15" fill="rgb(226,209,5)" fg:x="9996" fg:w="8"/><text x="85.1561%" y="207.50"></text></g><g><title>iroh`parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.03%)</title><rect x="84.9486%" y="181" width="0.0255%" height="15" fill="rgb(250,105,47)" fg:x="10001" fg:w="3"/><text x="85.1986%" y="191.50"></text></g><g><title>iroh`parking_lot::raw_mutex::RawMutex::lock_slow (25 samples, 0.21%)</title><rect x="84.9741%" y="197" width="0.2124%" height="15" fill="rgb(230,72,3)" fg:x="10004" fg:w="25"/><text x="85.2241%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (24 samples, 0.20%)</title><rect x="84.9826%" y="181" width="0.2039%" height="15" fill="rgb(232,218,39)" fg:x="10005" fg:w="24"/><text x="85.2326%" y="191.50"></text></g><g><title>iroh`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.02%)</title><rect x="85.1949%" y="181" width="0.0170%" height="15" fill="rgb(248,166,6)" fg:x="10030" fg:w="2"/><text x="85.4449%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.02%)</title><rect x="85.1949%" y="165" width="0.0170%" height="15" fill="rgb(247,89,20)" fg:x="10030" fg:w="2"/><text x="85.4449%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (36 samples, 0.31%)</title><rect x="85.2119%" y="181" width="0.3058%" height="15" fill="rgb(248,130,54)" fg:x="10032" fg:w="36"/><text x="85.4619%" y="191.50"></text></g><g><title>iroh`parking_lot::raw_mutex::RawMutex::unlock_slow (40 samples, 0.34%)</title><rect x="85.1864%" y="197" width="0.3398%" height="15" fill="rgb(234,196,4)" fg:x="10029" fg:w="40"/><text x="85.4364%" y="207.50"></text></g><g><title>iroh`tokio::runtime::blocking::pool::Spawner::spawn_task (78 samples, 0.66%)</title><rect x="84.8807%" y="213" width="0.6625%" height="15" fill="rgb(250,143,31)" fg:x="9993" fg:w="78"/><text x="85.1307%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="85.5942%" y="133" width="0.0255%" height="15" fill="rgb(211,110,34)" fg:x="10077" fg:w="3"/><text x="85.8442%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.03%)</title><rect x="85.5942%" y="117" width="0.0255%" height="15" fill="rgb(215,124,48)" fg:x="10077" fg:w="3"/><text x="85.8442%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (12 samples, 0.10%)</title><rect x="85.5602%" y="165" width="0.1019%" height="15" fill="rgb(216,46,13)" fg:x="10073" fg:w="12"/><text x="85.8102%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (11 samples, 0.09%)</title><rect x="85.5687%" y="149" width="0.0934%" height="15" fill="rgb(205,184,25)" fg:x="10074" fg:w="11"/><text x="85.8187%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.04%)</title><rect x="85.6196%" y="133" width="0.0425%" height="15" fill="rgb(228,1,10)" fg:x="10080" fg:w="5"/><text x="85.8696%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="85.6366%" y="117" width="0.0255%" height="15" fill="rgb(213,116,27)" fg:x="10082" fg:w="3"/><text x="85.8866%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="85.6451%" y="101" width="0.0170%" height="15" fill="rgb(241,95,50)" fg:x="10083" fg:w="2"/><text x="85.8951%" y="111.50"></text></g><g><title>iroh`tokio::runtime::blocking::pool::Spawner::spawn_blocking (93 samples, 0.79%)</title><rect x="84.8807%" y="229" width="0.7899%" height="15" fill="rgb(238,48,32)" fg:x="9993" fg:w="93"/><text x="85.1307%" y="239.50"></text></g><g><title>iroh`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (15 samples, 0.13%)</title><rect x="85.5432%" y="213" width="0.1274%" height="15" fill="rgb(235,113,49)" fg:x="10071" fg:w="15"/><text x="85.7932%" y="223.50"></text></g><g><title>iroh`__rdl_alloc (14 samples, 0.12%)</title><rect x="85.5517%" y="197" width="0.1189%" height="15" fill="rgb(205,127,43)" fg:x="10072" fg:w="14"/><text x="85.8017%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (13 samples, 0.11%)</title><rect x="85.5602%" y="181" width="0.1104%" height="15" fill="rgb(250,162,2)" fg:x="10073" fg:w="13"/><text x="85.8102%" y="191.50"></text></g><g><title>iroh`tokio::runtime::blocking::pool::Spawner::spawn_task (2 samples, 0.02%)</title><rect x="85.6706%" y="229" width="0.0170%" height="15" fill="rgb(220,13,41)" fg:x="10086" fg:w="2"/><text x="85.9206%" y="239.50"></text></g><g><title>iroh`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (4 samples, 0.03%)</title><rect x="85.6876%" y="229" width="0.0340%" height="15" fill="rgb(249,221,25)" fg:x="10088" fg:w="4"/><text x="85.9376%" y="239.50"></text></g><g><title>iroh`&lt;iroh::baomap::flat::Store as iroh_bytes::baomap::Store&gt;::import_file (103 samples, 0.87%)</title><rect x="84.8722%" y="245" width="0.8749%" height="15" fill="rgb(215,208,19)" fg:x="9992" fg:w="103"/><text x="85.1222%" y="255.50"></text></g><g><title>iroh`&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="85.7470%" y="245" width="0.0170%" height="15" fill="rgb(236,175,2)" fg:x="10095" fg:w="2"/><text x="85.9970%" y="255.50"></text></g><g><title>iroh`std::path::Path::to_path_buf (2 samples, 0.02%)</title><rect x="85.7640%" y="245" width="0.0170%" height="15" fill="rgb(241,52,2)" fg:x="10097" fg:w="2"/><text x="86.0140%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="85.7640%" y="229" width="0.0170%" height="15" fill="rgb(248,140,14)" fg:x="10097" fg:w="2"/><text x="86.0140%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="85.7640%" y="213" width="0.0170%" height="15" fill="rgb(253,22,42)" fg:x="10097" fg:w="2"/><text x="86.0140%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="85.7640%" y="197" width="0.0170%" height="15" fill="rgb(234,61,47)" fg:x="10097" fg:w="2"/><text x="86.0140%" y="207.50"></text></g><g><title>iroh`tokio::runtime::scheduler::Handle::blocking_spawner (3 samples, 0.03%)</title><rect x="85.7810%" y="245" width="0.0255%" height="15" fill="rgb(208,226,15)" fg:x="10099" fg:w="3"/><text x="86.0310%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.03%)</title><rect x="85.8150%" y="245" width="0.0340%" height="15" fill="rgb(217,221,4)" fg:x="10103" fg:w="4"/><text x="86.0650%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.02%)</title><rect x="85.8320%" y="229" width="0.0170%" height="15" fill="rgb(212,174,34)" fg:x="10105" fg:w="2"/><text x="86.0820%" y="239.50"></text></g><g><title>iroh`&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;T&gt; as core::future::future::Future&gt;::poll (146 samples, 1.24%)</title><rect x="84.6258%" y="261" width="1.2401%" height="15" fill="rgb(253,83,4)" fg:x="9963" fg:w="146"/><text x="84.8758%" y="271.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;iroh::node::RpcHandler&lt;iroh::baomap::flat::Store,iroh_sync::store::fs::Store&gt;::blob_add_from_path0::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="85.8660%" y="261" width="0.0170%" height="15" fill="rgb(250,195,49)" fg:x="10109" fg:w="2"/><text x="86.1160%" y="271.50"></text></g><g><title>iroh`futures_core::task::__internal::atomic_waker::AtomicWaker::register (4 samples, 0.03%)</title><rect x="85.8914%" y="261" width="0.0340%" height="15" fill="rgb(241,192,25)" fg:x="10112" fg:w="4"/><text x="86.1414%" y="271.50"></text></g><g><title>iroh`iroh::util::fs::DataSource::name (2 samples, 0.02%)</title><rect x="85.9254%" y="261" width="0.0170%" height="15" fill="rgb(208,124,10)" fg:x="10116" fg:w="2"/><text x="86.1754%" y="271.50"></text></g><g><title>iroh`std::path::Path::to_path_buf (2 samples, 0.02%)</title><rect x="85.9509%" y="261" width="0.0170%" height="15" fill="rgb(222,33,0)" fg:x="10119" fg:w="2"/><text x="86.2009%" y="271.50"></text></g><g><title>iroh`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (165 samples, 1.40%)</title><rect x="84.5834%" y="277" width="1.4015%" height="15" fill="rgb(234,209,28)" fg:x="9958" fg:w="165"/><text x="84.8334%" y="287.50"></text></g><g><title>iroh`tokio::runtime::task::waker::clone_waker (2 samples, 0.02%)</title><rect x="85.9679%" y="261" width="0.0170%" height="15" fill="rgb(224,11,23)" fg:x="10121" fg:w="2"/><text x="86.2179%" y="271.50"></text></g><g><title>iroh`&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (171 samples, 1.45%)</title><rect x="84.5409%" y="293" width="1.4525%" height="15" fill="rgb(232,99,1)" fg:x="9953" fg:w="171"/><text x="84.7909%" y="303.50"></text></g><g><title>iroh`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.02%)</title><rect x="85.9934%" y="293" width="0.0170%" height="15" fill="rgb(237,95,45)" fg:x="10124" fg:w="2"/><text x="86.2434%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.03%)</title><rect x="86.0274%" y="277" width="0.0340%" height="15" fill="rgb(208,109,11)" fg:x="10128" fg:w="4"/><text x="86.2774%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.03%)</title><rect x="86.0274%" y="261" width="0.0340%" height="15" fill="rgb(216,190,48)" fg:x="10128" fg:w="4"/><text x="86.2774%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.03%)</title><rect x="86.0274%" y="245" width="0.0340%" height="15" fill="rgb(251,171,36)" fg:x="10128" fg:w="4"/><text x="86.2774%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.03%)</title><rect x="86.0274%" y="229" width="0.0340%" height="15" fill="rgb(230,62,22)" fg:x="10128" fg:w="4"/><text x="86.2774%" y="239.50"></text></g><g><title>iroh`&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (186 samples, 1.58%)</title><rect x="84.4899%" y="309" width="1.5799%" height="15" fill="rgb(225,114,35)" fg:x="9947" fg:w="186"/><text x="84.7399%" y="319.50"></text></g><g><title>iroh`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (7 samples, 0.06%)</title><rect x="86.0104%" y="293" width="0.0595%" height="15" fill="rgb(215,118,42)" fg:x="10126" fg:w="7"/><text x="86.2604%" y="303.50"></text></g><g><title>iroh`&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.06%)</title><rect x="86.0698%" y="309" width="0.0595%" height="15" fill="rgb(243,119,21)" fg:x="10133" fg:w="7"/><text x="86.3198%" y="319.50"></text></g><g><title>iroh`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (198 samples, 1.68%)</title><rect x="84.4729%" y="325" width="1.6818%" height="15" fill="rgb(252,177,53)" fg:x="9945" fg:w="198"/><text x="84.7229%" y="335.50"></text></g><g><title>iroh`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (2 samples, 0.02%)</title><rect x="86.1378%" y="309" width="0.0170%" height="15" fill="rgb(237,209,29)" fg:x="10141" fg:w="2"/><text x="86.3878%" y="319.50"></text></g><g><title>iroh`&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="86.1548%" y="325" width="0.0255%" height="15" fill="rgb(212,65,23)" fg:x="10143" fg:w="3"/><text x="86.4048%" y="335.50"></text></g><g><title>iroh`&lt;iroh::rpc_protocol::_::&lt;impl serde::de::Deserialize for iroh::rpc_protocol::ProviderRequest&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (3 samples, 0.03%)</title><rect x="86.1887%" y="293" width="0.0255%" height="15" fill="rgb(230,222,46)" fg:x="10147" fg:w="3"/><text x="86.4387%" y="303.50"></text></g><g><title>iroh`&lt;tokio_util::codec::length_delimited::LengthDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (3 samples, 0.03%)</title><rect x="86.2312%" y="277" width="0.0255%" height="15" fill="rgb(215,135,32)" fg:x="10152" fg:w="3"/><text x="86.4812%" y="287.50"></text></g><g><title>iroh`tokio::io::read_buf::slice_assume_init (2 samples, 0.02%)</title><rect x="86.2567%" y="277" width="0.0170%" height="15" fill="rgb(246,101,22)" fg:x="10155" fg:w="2"/><text x="86.5067%" y="287.50"></text></g><g><title>iroh`quinn::mutex::non_tracking::Mutex&lt;T&gt;::lock (4 samples, 0.03%)</title><rect x="86.2822%" y="245" width="0.0340%" height="15" fill="rgb(206,107,13)" fg:x="10158" fg:w="4"/><text x="86.5322%" y="255.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;quinn_proto::connection::streams::recv::ChunksState&gt; (2 samples, 0.02%)</title><rect x="86.3331%" y="229" width="0.0170%" height="15" fill="rgb(250,100,44)" fg:x="10164" fg:w="2"/><text x="86.5831%" y="239.50"></text></g><g><title>iroh`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="86.3501%" y="229" width="0.0170%" height="15" fill="rgb(231,147,38)" fg:x="10166" fg:w="2"/><text x="86.6001%" y="239.50"></text></g><g><title>iroh`quinn::mutex::non_tracking::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="86.3671%" y="229" width="0.0170%" height="15" fill="rgb(229,8,40)" fg:x="10168" fg:w="2"/><text x="86.6171%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="86.3671%" y="213" width="0.0170%" height="15" fill="rgb(221,135,30)" fg:x="10168" fg:w="2"/><text x="86.6171%" y="223.50"></text></g><g><title>iroh`quinn_proto::connection::streams::recv::Chunks::finalize_inner (2 samples, 0.02%)</title><rect x="86.4011%" y="229" width="0.0170%" height="15" fill="rgb(249,193,18)" fg:x="10172" fg:w="2"/><text x="86.6511%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::streams::recv::Chunks::new (6 samples, 0.05%)</title><rect x="86.4181%" y="229" width="0.0510%" height="15" fill="rgb(209,133,39)" fg:x="10174" fg:w="6"/><text x="86.6681%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::assembler::Assembler::ensure_ordering (2 samples, 0.02%)</title><rect x="86.4521%" y="213" width="0.0170%" height="15" fill="rgb(232,100,14)" fg:x="10178" fg:w="2"/><text x="86.7021%" y="223.50"></text></g><g><title>iroh`quinn::recv_stream::RecvStream::poll_read (23 samples, 0.20%)</title><rect x="86.3161%" y="245" width="0.1954%" height="15" fill="rgb(224,185,1)" fg:x="10162" fg:w="23"/><text x="86.5661%" y="255.50"></text></g><g><title>iroh`quinn_proto::connection::streams::recv::Chunks::next (5 samples, 0.04%)</title><rect x="86.4690%" y="229" width="0.0425%" height="15" fill="rgb(223,139,8)" fg:x="10180" fg:w="5"/><text x="86.7190%" y="239.50"></text></g><g><title>iroh`quinn_proto::connection::streams::RecvStream::read (2 samples, 0.02%)</title><rect x="86.5200%" y="245" width="0.0170%" height="15" fill="rgb(232,213,38)" fg:x="10186" fg:w="2"/><text x="86.7700%" y="255.50"></text></g><g><title>iroh`&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (40 samples, 0.34%)</title><rect x="86.2142%" y="293" width="0.3398%" height="15" fill="rgb(207,94,22)" fg:x="10150" fg:w="40"/><text x="86.4642%" y="303.50"></text></g><g><title>iroh`tokio_util::util::poll_buf::poll_read_buf (33 samples, 0.28%)</title><rect x="86.2737%" y="277" width="0.2803%" height="15" fill="rgb(219,183,54)" fg:x="10157" fg:w="33"/><text x="86.5237%" y="287.50"></text></g><g><title>iroh`&lt;quinn::recv_stream::RecvStream as tokio::io::async_read::AsyncRead&gt;::poll_read (32 samples, 0.27%)</title><rect x="86.2822%" y="261" width="0.2718%" height="15" fill="rgb(216,185,54)" fg:x="10158" fg:w="32"/><text x="86.5322%" y="271.50"></text></g><g><title>iroh`bincode::de::read::SliceReader::new (2 samples, 0.02%)</title><rect x="86.5625%" y="293" width="0.0170%" height="15" fill="rgb(254,217,39)" fg:x="10191" fg:w="2"/><text x="86.8125%" y="303.50"></text></g><g><title>iroh`bincode::internal::deserialize_seed (4 samples, 0.03%)</title><rect x="86.5795%" y="293" width="0.0340%" height="15" fill="rgb(240,178,23)" fg:x="10193" fg:w="4"/><text x="86.8295%" y="303.50"></text></g><g><title>iroh`&lt;iroh::rpc_protocol::_::&lt;impl serde::de::Deserialize for iroh::rpc_protocol::ProviderRequest&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (4 samples, 0.03%)</title><rect x="86.5795%" y="277" width="0.0340%" height="15" fill="rgb(218,11,47)" fg:x="10193" fg:w="4"/><text x="86.8295%" y="287.50"></text></g><g><title>iroh`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::struct_variant (3 samples, 0.03%)</title><rect x="86.5880%" y="261" width="0.0255%" height="15" fill="rgb(218,51,51)" fg:x="10194" fg:w="3"/><text x="86.8380%" y="271.50"></text></g><g><title>iroh`&lt;quic_rpc::server::UpdateStream&lt;S,C,T&gt; as futures_core::stream::Stream&gt;::poll_next (53 samples, 0.45%)</title><rect x="86.1802%" y="325" width="0.4502%" height="15" fill="rgb(238,126,27)" fg:x="10146" fg:w="53"/><text x="86.4302%" y="335.50"></text></g><g><title>iroh`&lt;tokio_serde::Framed&lt;Transport,Item,SinkItem,Codec&gt; as futures_core::stream::Stream&gt;::poll_next (53 samples, 0.45%)</title><rect x="86.1802%" y="309" width="0.4502%" height="15" fill="rgb(249,202,22)" fg:x="10146" fg:w="53"/><text x="86.4302%" y="319.50"></text></g><g><title>iroh`tokio_util::util::poll_buf::poll_read_buf (2 samples, 0.02%)</title><rect x="86.6134%" y="293" width="0.0170%" height="15" fill="rgb(254,195,49)" fg:x="10197" fg:w="2"/><text x="86.8634%" y="303.50"></text></g><g><title>iroh`futures_core::task::__internal::atomic_waker::AtomicWaker::register (5 samples, 0.04%)</title><rect x="86.6389%" y="325" width="0.0425%" height="15" fill="rgb(208,123,14)" fg:x="10200" fg:w="5"/><text x="86.8889%" y="335.50"></text></g><g><title>iroh`&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.37%)</title><rect x="86.6814%" y="229" width="0.3737%" height="15" fill="rgb(224,200,8)" fg:x="10205" fg:w="44"/><text x="86.9314%" y="239.50"></text></g><g><title>libsystem_c.dylib`readdir_r (44 samples, 0.37%)</title><rect x="86.6814%" y="213" width="0.3737%" height="15" fill="rgb(217,61,36)" fg:x="10205" fg:w="44"/><text x="86.9314%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (43 samples, 0.37%)</title><rect x="86.6899%" y="197" width="0.3652%" height="15" fill="rgb(206,35,45)" fg:x="10206" fg:w="43"/><text x="86.9399%" y="207.50"></text></g><g><title>iroh`&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.39%)</title><rect x="86.6814%" y="245" width="0.3907%" height="15" fill="rgb(217,65,33)" fg:x="10205" fg:w="46"/><text x="86.9314%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (36 samples, 0.31%)</title><rect x="87.0721%" y="181" width="0.3058%" height="15" fill="rgb(222,158,48)" fg:x="10251" fg:w="36"/><text x="87.3221%" y="191.50"></text></g><g><title>iroh`walkdir::IntoIter::handle_entry (37 samples, 0.31%)</title><rect x="87.0721%" y="245" width="0.3143%" height="15" fill="rgb(254,2,54)" fg:x="10251" fg:w="37"/><text x="87.3221%" y="255.50"></text></g><g><title>iroh`walkdir::IntoIter::push (37 samples, 0.31%)</title><rect x="87.0721%" y="229" width="0.3143%" height="15" fill="rgb(250,143,38)" fg:x="10251" fg:w="37"/><text x="87.3221%" y="239.50"></text></g><g><title>iroh`std::sys::unix::fs::readdir (37 samples, 0.31%)</title><rect x="87.0721%" y="213" width="0.3143%" height="15" fill="rgb(248,25,0)" fg:x="10251" fg:w="37"/><text x="87.3221%" y="223.50"></text></g><g><title>libsystem_c.dylib`__opendir2 (37 samples, 0.31%)</title><rect x="87.0721%" y="197" width="0.3143%" height="15" fill="rgb(206,152,27)" fg:x="10251" fg:w="37"/><text x="87.3221%" y="207.50"></text></g><g><title>iroh`walkdir::IntoIter::pop (4 samples, 0.03%)</title><rect x="87.3864%" y="245" width="0.0340%" height="15" fill="rgb(240,77,30)" fg:x="10288" fg:w="4"/><text x="87.6364%" y="255.50"></text></g><g><title>iroh`alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.03%)</title><rect x="87.3864%" y="229" width="0.0340%" height="15" fill="rgb(231,5,3)" fg:x="10288" fg:w="4"/><text x="87.6364%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (3 samples, 0.03%)</title><rect x="87.3949%" y="213" width="0.0255%" height="15" fill="rgb(207,226,32)" fg:x="10289" fg:w="3"/><text x="87.6449%" y="223.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="87.4204%" y="213" width="0.0170%" height="15" fill="rgb(222,207,47)" fg:x="10292" fg:w="2"/><text x="87.6704%" y="223.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="87.4204%" y="197" width="0.0170%" height="15" fill="rgb(229,115,45)" fg:x="10292" fg:w="2"/><text x="87.6704%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="87.4204%" y="181" width="0.0170%" height="15" fill="rgb(224,191,6)" fg:x="10292" fg:w="2"/><text x="87.6704%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="87.4204%" y="165" width="0.0170%" height="15" fill="rgb(230,227,24)" fg:x="10292" fg:w="2"/><text x="87.6704%" y="175.50"></text></g><g><title>iroh`&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.77%)</title><rect x="86.6814%" y="261" width="0.7730%" height="15" fill="rgb(228,80,19)" fg:x="10205" fg:w="91"/><text x="86.9314%" y="271.50"></text></g><g><title>iroh`walkdir::dent::DirEntry::from_entry (4 samples, 0.03%)</title><rect x="87.4204%" y="245" width="0.0340%" height="15" fill="rgb(247,229,0)" fg:x="10292" fg:w="4"/><text x="87.6704%" y="255.50"></text></g><g><title>iroh`std::path::Path::_join (4 samples, 0.03%)</title><rect x="87.4204%" y="229" width="0.0340%" height="15" fill="rgb(237,194,15)" fg:x="10292" fg:w="4"/><text x="87.6704%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="87.4374%" y="213" width="0.0170%" height="15" fill="rgb(219,203,20)" fg:x="10294" fg:w="2"/><text x="87.6874%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="87.4374%" y="197" width="0.0170%" height="15" fill="rgb(234,128,8)" fg:x="10294" fg:w="2"/><text x="87.6874%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="87.4374%" y="181" width="0.0170%" height="15" fill="rgb(248,202,8)" fg:x="10294" fg:w="2"/><text x="87.6874%" y="191.50"></text></g><g><title>iroh`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="87.4628%" y="229" width="0.0170%" height="15" fill="rgb(206,104,37)" fg:x="10297" fg:w="2"/><text x="87.7128%" y="239.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="87.4798%" y="229" width="0.0170%" height="15" fill="rgb(223,8,27)" fg:x="10299" fg:w="2"/><text x="87.7298%" y="239.50"></text></g><g><title>iroh`core::str::converts::from_utf8 (2 samples, 0.02%)</title><rect x="87.4968%" y="229" width="0.0170%" height="15" fill="rgb(216,217,28)" fg:x="10301" fg:w="2"/><text x="87.7468%" y="239.50"></text></g><g><title>iroh`core::iter::adapters::try_process (8 samples, 0.07%)</title><rect x="87.4543%" y="245" width="0.0680%" height="15" fill="rgb(249,199,1)" fg:x="10296" fg:w="8"/><text x="87.7043%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.02%)</title><rect x="87.5308%" y="245" width="0.0170%" height="15" fill="rgb(240,85,17)" fg:x="10305" fg:w="2"/><text x="87.7808%" y="255.50"></text></g><g><title>iroh`iroh::util::fs::canonicalize_path (12 samples, 0.10%)</title><rect x="87.4543%" y="261" width="0.1019%" height="15" fill="rgb(206,108,45)" fg:x="10296" fg:w="12"/><text x="87.7043%" y="271.50"></text></g><g><title>iroh`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.04%)</title><rect x="87.5563%" y="245" width="0.0425%" height="15" fill="rgb(245,210,41)" fg:x="10308" fg:w="5"/><text x="87.8063%" y="255.50"></text></g><g><title>iroh`std::path::Path::_strip_prefix (6 samples, 0.05%)</title><rect x="87.5563%" y="261" width="0.0510%" height="15" fill="rgb(206,13,37)" fg:x="10308" fg:w="6"/><text x="87.8063%" y="271.50"></text></g><g><title>iroh`iroh::util::fs::scan_path (110 samples, 0.93%)</title><rect x="86.6814%" y="325" width="0.9343%" height="15" fill="rgb(250,61,18)" fg:x="10205" fg:w="110"/><text x="86.9314%" y="335.50"></text></g><g><title>iroh`iroh::util::fs::scan_dir (110 samples, 0.93%)</title><rect x="86.6814%" y="309" width="0.9343%" height="15" fill="rgb(235,172,48)" fg:x="10205" fg:w="110"/><text x="86.9314%" y="319.50"></text></g><g><title>iroh`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (110 samples, 0.93%)</title><rect x="86.6814%" y="293" width="0.9343%" height="15" fill="rgb(249,201,17)" fg:x="10205" fg:w="110"/><text x="86.9314%" y="303.50"></text></g><g><title>iroh`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (110 samples, 0.93%)</title><rect x="86.6814%" y="277" width="0.9343%" height="15" fill="rgb(219,208,6)" fg:x="10205" fg:w="110"/><text x="86.9314%" y="287.50"></text></g><g><title>iroh`iroh_sync::sync::Entry::new (4 samples, 0.03%)</title><rect x="87.6242%" y="325" width="0.0340%" height="15" fill="rgb(248,31,23)" fg:x="10316" fg:w="4"/><text x="87.8742%" y="335.50"></text></g><g><title>iroh`ed25519_dalek::signing::SigningKey::verifying_key (3 samples, 0.03%)</title><rect x="87.6837%" y="309" width="0.0255%" height="15" fill="rgb(245,15,42)" fg:x="10323" fg:w="3"/><text x="87.9337%" y="319.50"></text></g><g><title>iroh`iroh_metrics::core::Core::get (3 samples, 0.03%)</title><rect x="87.7092%" y="309" width="0.0255%" height="15" fill="rgb(222,217,39)" fg:x="10326" fg:w="3"/><text x="87.9592%" y="319.50"></text></g><g><title>iroh`&lt;curve25519_dalek::scalar::Scalar as zeroize::Zeroize&gt;::zeroize (2 samples, 0.02%)</title><rect x="87.7516%" y="277" width="0.0170%" height="15" fill="rgb(210,219,27)" fg:x="10331" fg:w="2"/><text x="88.0016%" y="287.50"></text></g><g><title>iroh`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (28 samples, 0.24%)</title><rect x="87.8026%" y="261" width="0.2378%" height="15" fill="rgb(252,166,36)" fg:x="10337" fg:w="28"/><text x="88.0526%" y="271.50"></text></g><g><title>iroh`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (28 samples, 0.24%)</title><rect x="88.1169%" y="245" width="0.2378%" height="15" fill="rgb(245,132,34)" fg:x="10374" fg:w="28"/><text x="88.3669%" y="255.50"></text></g><g><title>iroh`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (5 samples, 0.04%)</title><rect x="88.3632%" y="245" width="0.0425%" height="15" fill="rgb(236,54,3)" fg:x="10403" fg:w="5"/><text x="88.6132%" y="255.50"></text></g><g><title>iroh`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (4 samples, 0.03%)</title><rect x="88.4057%" y="245" width="0.0340%" height="15" fill="rgb(241,173,43)" fg:x="10408" fg:w="4"/><text x="88.6557%" y="255.50"></text></g><g><title>iroh`curve25519_dalek::window::LookupTable&lt;T&gt;::select (29 samples, 0.25%)</title><rect x="88.4397%" y="245" width="0.2463%" height="15" fill="rgb(215,190,9)" fg:x="10412" fg:w="29"/><text x="88.6897%" y="255.50"></text></g><g><title>iroh`&lt;curve25519_dalek::edwards::EdwardsBasepointTable as curve25519_dalek::traits::BasepointTable&gt;::mul_base (77 samples, 0.65%)</title><rect x="88.0404%" y="261" width="0.6540%" height="15" fill="rgb(242,101,16)" fg:x="10365" fg:w="77"/><text x="88.2904%" y="271.50"></text></g><g><title>iroh`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (2 samples, 0.02%)</title><rect x="88.7115%" y="261" width="0.0170%" height="15" fill="rgb(223,190,21)" fg:x="10444" fg:w="2"/><text x="88.9615%" y="271.50"></text></g><g><title>iroh`curve25519_dalek::backend::serial::u64::scalar::Scalar52::mul (8 samples, 0.07%)</title><rect x="88.7284%" y="261" width="0.0680%" height="15" fill="rgb(215,228,25)" fg:x="10446" fg:w="8"/><text x="88.9784%" y="271.50"></text></g><g><title>iroh`curve25519_dalek::edwards::EdwardsPoint::compress (36 samples, 0.31%)</title><rect x="88.7964%" y="261" width="0.3058%" height="15" fill="rgb(225,36,22)" fg:x="10454" fg:w="36"/><text x="89.0464%" y="271.50"></text></g><g><title>iroh`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (35 samples, 0.30%)</title><rect x="88.8049%" y="245" width="0.2973%" height="15" fill="rgb(251,106,46)" fg:x="10455" fg:w="35"/><text x="89.0549%" y="255.50"></text></g><g><title>iroh`curve25519_dalek::scalar::Scalar::as_radix_16 (8 samples, 0.07%)</title><rect x="89.1022%" y="261" width="0.0680%" height="15" fill="rgb(208,90,1)" fg:x="10490" fg:w="8"/><text x="89.3522%" y="271.50"></text></g><g><title>iroh`curve25519_dalek::scalar::Scalar::as_radix_2w (3 samples, 0.03%)</title><rect x="89.1701%" y="261" width="0.0255%" height="15" fill="rgb(243,10,4)" fg:x="10498" fg:w="3"/><text x="89.4201%" y="271.50"></text></g><g><title>iroh`curve25519_dalek::scalar::Scalar::reduce (2 samples, 0.02%)</title><rect x="89.2041%" y="245" width="0.0170%" height="15" fill="rgb(212,137,27)" fg:x="10502" fg:w="2"/><text x="89.4541%" y="255.50"></text></g><g><title>iroh`curve25519_dalek::scalar::Scalar::from_bytes_mod_order (4 samples, 0.03%)</title><rect x="89.1956%" y="261" width="0.0340%" height="15" fill="rgb(231,220,49)" fg:x="10501" fg:w="4"/><text x="89.4456%" y="271.50"></text></g><g><title>iroh`curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (3 samples, 0.03%)</title><rect x="89.2296%" y="245" width="0.0255%" height="15" fill="rgb(237,96,20)" fg:x="10505" fg:w="3"/><text x="89.4796%" y="255.50"></text></g><g><title>iroh`curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (9 samples, 0.08%)</title><rect x="89.2296%" y="261" width="0.0764%" height="15" fill="rgb(239,229,30)" fg:x="10505" fg:w="9"/><text x="89.4796%" y="271.50"></text></g><g><title>iroh`curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (6 samples, 0.05%)</title><rect x="89.2551%" y="245" width="0.0510%" height="15" fill="rgb(219,65,33)" fg:x="10508" fg:w="6"/><text x="89.5051%" y="255.50"></text></g><g><title>iroh`sha2::sha512::soft::compress (31 samples, 0.26%)</title><rect x="89.3145%" y="261" width="0.2633%" height="15" fill="rgb(243,134,7)" fg:x="10515" fg:w="31"/><text x="89.5645%" y="271.50"></text></g><g><title>iroh`&lt;ed25519_dalek::signing::SigningKey as signature::signer::Signer&lt;ed25519::Signature&gt;&gt;::try_sign (214 samples, 1.82%)</title><rect x="87.7686%" y="277" width="1.8177%" height="15" fill="rgb(216,177,54)" fg:x="10333" fg:w="214"/><text x="88.0186%" y="287.50">i..</text></g><g><title>iroh`curve25519_dalek::edwards::EdwardsPoint::compress (2 samples, 0.02%)</title><rect x="89.5948%" y="277" width="0.0170%" height="15" fill="rgb(211,160,20)" fg:x="10548" fg:w="2"/><text x="89.8448%" y="287.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="89.6458%" y="245" width="0.0255%" height="15" fill="rgb(239,85,39)" fg:x="10554" fg:w="3"/><text x="89.8958%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="89.6543%" y="229" width="0.0170%" height="15" fill="rgb(232,125,22)" fg:x="10555" fg:w="2"/><text x="89.9043%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="89.6543%" y="213" width="0.0170%" height="15" fill="rgb(244,57,34)" fg:x="10555" fg:w="2"/><text x="89.9043%" y="223.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="89.6458%" y="261" width="0.0340%" height="15" fill="rgb(214,203,32)" fg:x="10554" fg:w="4"/><text x="89.8958%" y="271.50"></text></g><g><title>iroh`iroh_sync::sync::Entry::to_vec (6 samples, 0.05%)</title><rect x="89.6373%" y="277" width="0.0510%" height="15" fill="rgb(207,58,43)" fg:x="10553" fg:w="6"/><text x="89.8873%" y="287.50"></text></g><g><title>iroh`iroh_sync::sync::EntrySignature::from_entry (234 samples, 1.99%)</title><rect x="87.7431%" y="293" width="1.9876%" height="15" fill="rgb(215,193,15)" fg:x="10330" fg:w="234"/><text x="87.9931%" y="303.50">i..</text></g><g><title>iroh`sha2::sha512::soft::compress (5 samples, 0.04%)</title><rect x="89.6883%" y="277" width="0.0425%" height="15" fill="rgb(232,15,44)" fg:x="10559" fg:w="5"/><text x="89.9383%" y="287.50"></text></g><g><title>iroh`iroh_sync::sync::Entry::sign (236 samples, 2.00%)</title><rect x="87.7346%" y="309" width="2.0046%" height="15" fill="rgb(212,3,48)" fg:x="10329" fg:w="236"/><text x="87.9846%" y="319.50">i..</text></g><g><title>iroh`iroh_sync::sync::EntrySignature::from_entry (2 samples, 0.02%)</title><rect x="89.7392%" y="309" width="0.0170%" height="15" fill="rgb(218,128,7)" fg:x="10565" fg:w="2"/><text x="89.9892%" y="319.50"></text></g><g><title>iroh`iroh_sync::sync::RecordIdentifier::new (2 samples, 0.02%)</title><rect x="89.7562%" y="309" width="0.0170%" height="15" fill="rgb(226,216,39)" fg:x="10567" fg:w="2"/><text x="90.0062%" y="319.50"></text></g><g><title>iroh`&lt;iroh_sync::store::fs::StoreInstance as iroh_sync::ranger::Store&lt;iroh_sync::sync::SignedEntry&gt;&gt;::get (4 samples, 0.03%)</title><rect x="89.8412%" y="293" width="0.0340%" height="15" fill="rgb(243,47,51)" fg:x="10577" fg:w="4"/><text x="90.0912%" y="303.50"></text></g><g><title>iroh`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="89.9346%" y="149" width="0.0255%" height="15" fill="rgb(241,183,40)" fg:x="10588" fg:w="3"/><text x="90.1846%" y="159.50"></text></g><g><title>iroh`redb::transactions::WriteTransaction::close_table (6 samples, 0.05%)</title><rect x="89.9176%" y="181" width="0.0510%" height="15" fill="rgb(231,217,32)" fg:x="10586" fg:w="6"/><text x="90.1676%" y="191.50"></text></g><g><title>iroh`redb::tree_store::table_tree::TableTree::stage_update_table_root (5 samples, 0.04%)</title><rect x="89.9261%" y="165" width="0.0425%" height="15" fill="rgb(229,61,38)" fg:x="10587" fg:w="5"/><text x="90.1761%" y="175.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;redb::table::Table&lt;(&amp;[u8 (7 samples, 0.06%)</title><rect x="89.9176%" y="277" width="0.0595%" height="15" fill="rgb(225,210,5)" fg:x="10586" fg:w="7"/><text x="90.1676%" y="287.50"></text></g><g><title> 32],&amp;[u8 (7 samples, 0.06%)</title><rect x="89.9176%" y="261" width="0.0595%" height="15" fill="rgb(231,79,45)" fg:x="10586" fg:w="7"/><text x="90.1676%" y="271.50"></text></g><g><title> 32],&amp;[u8]),(u64,&amp;[u8 (7 samples, 0.06%)</title><rect x="89.9176%" y="245" width="0.0595%" height="15" fill="rgb(224,100,7)" fg:x="10586" fg:w="7"/><text x="90.1676%" y="255.50"></text></g><g><title> 64],&amp;[u8 (7 samples, 0.06%)</title><rect x="89.9176%" y="229" width="0.0595%" height="15" fill="rgb(241,198,18)" fg:x="10586" fg:w="7"/><text x="90.1676%" y="239.50"></text></g><g><title> 64],u64,&amp;[u8 (7 samples, 0.06%)</title><rect x="89.9176%" y="213" width="0.0595%" height="15" fill="rgb(252,97,53)" fg:x="10586" fg:w="7"/><text x="90.1676%" y="223.50"></text></g><g><title> 32])&gt;&gt; (7 samples, 0.06%)</title><rect x="89.9176%" y="197" width="0.0595%" height="15" fill="rgb(220,88,7)" fg:x="10586" fg:w="7"/><text x="90.1676%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="90.0025%" y="245" width="0.0255%" height="15" fill="rgb(213,176,14)" fg:x="10596" fg:w="3"/><text x="90.2525%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.03%)</title><rect x="90.0025%" y="229" width="0.0255%" height="15" fill="rgb(246,73,7)" fg:x="10596" fg:w="3"/><text x="90.2525%" y="239.50"></text></g><g><title>iroh`alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.03%)</title><rect x="90.0025%" y="261" width="0.0340%" height="15" fill="rgb(245,64,36)" fg:x="10596" fg:w="4"/><text x="90.2525%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="90.0535%" y="245" width="0.0170%" height="15" fill="rgb(245,80,10)" fg:x="10602" fg:w="2"/><text x="90.3035%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="90.0535%" y="229" width="0.0170%" height="15" fill="rgb(232,107,50)" fg:x="10602" fg:w="2"/><text x="90.3035%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="90.0535%" y="213" width="0.0170%" height="15" fill="rgb(253,3,0)" fg:x="10602" fg:w="2"/><text x="90.3035%" y="223.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;redb::tree_store::table_tree::TableTree&gt; (8 samples, 0.07%)</title><rect x="90.0365%" y="261" width="0.0680%" height="15" fill="rgb(212,99,53)" fg:x="10600" fg:w="8"/><text x="90.2865%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="90.0705%" y="245" width="0.0340%" height="15" fill="rgb(249,111,54)" fg:x="10604" fg:w="4"/><text x="90.3205%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.03%)</title><rect x="90.0705%" y="229" width="0.0340%" height="15" fill="rgb(249,55,30)" fg:x="10604" fg:w="4"/><text x="90.3205%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="90.0790%" y="213" width="0.0255%" height="15" fill="rgb(237,47,42)" fg:x="10605" fg:w="3"/><text x="90.3290%" y="223.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;redb::tree_store::btree::BtreeMut&lt;redb::tree_store::table_tree::FreedTableKey,redb::tree_store::table_tree::FreedPageList&gt;&gt;&gt; (4 samples, 0.03%)</title><rect x="90.1045%" y="261" width="0.0340%" height="15" fill="rgb(211,20,18)" fg:x="10608" fg:w="4"/><text x="90.3545%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (2 samples, 0.02%)</title><rect x="90.1554%" y="261" width="0.0170%" height="15" fill="rgb(231,203,46)" fg:x="10614" fg:w="2"/><text x="90.4054%" y="271.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;redb::transactions::WriteTransaction&gt; (27 samples, 0.23%)</title><rect x="89.9771%" y="277" width="0.2293%" height="15" fill="rgb(237,142,3)" fg:x="10593" fg:w="27"/><text x="90.2271%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_trylock (4 samples, 0.03%)</title><rect x="90.1724%" y="261" width="0.0340%" height="15" fill="rgb(241,107,1)" fg:x="10616" fg:w="4"/><text x="90.4224%" y="271.50"></text></g><g><title>iroh`redb::db::Database::begin_write (5 samples, 0.04%)</title><rect x="90.2149%" y="277" width="0.0425%" height="15" fill="rgb(229,83,13)" fg:x="10621" fg:w="5"/><text x="90.4649%" y="287.50"></text></g><g><title>iroh`redb::transactions::WriteTransaction::new (5 samples, 0.04%)</title><rect x="90.2149%" y="261" width="0.0425%" height="15" fill="rgb(241,91,40)" fg:x="10621" fg:w="5"/><text x="90.4649%" y="271.50"></text></g><g><title>iroh`redb::table::Table&lt;K,V&gt;::insert (3 samples, 0.03%)</title><rect x="90.2574%" y="277" width="0.0255%" height="15" fill="rgb(225,3,45)" fg:x="10626" fg:w="3"/><text x="90.5074%" y="287.50"></text></g><g><title>iroh`redb::tuple_types::_&lt;impl redb::types::RedbValue for (T0,T1,T2)&gt;::as_bytes (2 samples, 0.02%)</title><rect x="90.2659%" y="261" width="0.0170%" height="15" fill="rgb(244,223,14)" fg:x="10627" fg:w="2"/><text x="90.5159%" y="271.50"></text></g><g><title>iroh`redb::tuple_types::serialize_tuple_elements_variable (2 samples, 0.02%)</title><rect x="90.2659%" y="245" width="0.0170%" height="15" fill="rgb(224,124,37)" fg:x="10627" fg:w="2"/><text x="90.5159%" y="255.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;redb::transaction_tracker::TransactionTracker&gt;&gt; (2 samples, 0.02%)</title><rect x="90.3763%" y="261" width="0.0170%" height="15" fill="rgb(251,171,30)" fg:x="10640" fg:w="2"/><text x="90.6263%" y="271.50"></text></g><g><title>iroh`DYLD-STUB$$pthread_mutex_lock (2 samples, 0.02%)</title><rect x="90.4612%" y="245" width="0.0170%" height="15" fill="rgb(236,46,54)" fg:x="10650" fg:w="2"/><text x="90.7112%" y="255.50"></text></g><g><title>iroh`redb::transaction_tracker::TransactionTracker::clear_pending_non_durable_commits (2 samples, 0.02%)</title><rect x="90.4867%" y="245" width="0.0170%" height="15" fill="rgb(245,213,5)" fg:x="10653" fg:w="2"/><text x="90.7367%" y="255.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert (4 samples, 0.03%)</title><rect x="90.5292%" y="213" width="0.0340%" height="15" fill="rgb(230,144,27)" fg:x="10658" fg:w="4"/><text x="90.7792%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree_base::LeafBuilder::build (3 samples, 0.03%)</title><rect x="90.5377%" y="197" width="0.0255%" height="15" fill="rgb(220,86,6)" fg:x="10659" fg:w="3"/><text x="90.7877%" y="207.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (3 samples, 0.03%)</title><rect x="90.5377%" y="181" width="0.0255%" height="15" fill="rgb(240,20,13)" fg:x="10659" fg:w="3"/><text x="90.7877%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (2 samples, 0.02%)</title><rect x="90.5462%" y="165" width="0.0170%" height="15" fill="rgb(217,89,34)" fg:x="10660" fg:w="2"/><text x="90.7962%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="90.5632%" y="181" width="0.0170%" height="15" fill="rgb(229,13,5)" fg:x="10662" fg:w="2"/><text x="90.8132%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="90.5632%" y="165" width="0.0170%" height="15" fill="rgb(244,67,35)" fg:x="10662" fg:w="2"/><text x="90.8132%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (3 samples, 0.03%)</title><rect x="90.5632%" y="213" width="0.0255%" height="15" fill="rgb(221,40,2)" fg:x="10662" fg:w="3"/><text x="90.8132%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="90.5632%" y="197" width="0.0255%" height="15" fill="rgb(237,157,21)" fg:x="10662" fg:w="3"/><text x="90.8132%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::insert_reserve (8 samples, 0.07%)</title><rect x="90.5292%" y="229" width="0.0680%" height="15" fill="rgb(222,94,11)" fg:x="10658" fg:w="8"/><text x="90.7792%" y="239.50"></text></g><g><title>iroh`redb::transactions::WriteTransaction::store_freed_pages (12 samples, 0.10%)</title><rect x="90.5037%" y="245" width="0.1019%" height="15" fill="rgb(249,113,6)" fg:x="10655" fg:w="12"/><text x="90.7537%" y="255.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::finalize_dirty_checksums (2 samples, 0.02%)</title><rect x="90.6056%" y="245" width="0.0170%" height="15" fill="rgb(238,137,36)" fg:x="10667" fg:w="2"/><text x="90.8556%" y="255.50"></text></g><g><title>iroh`&lt;redb::tree_store::table_tree::FreedTableKey as redb::types::RedbKey&gt;::compare (3 samples, 0.03%)</title><rect x="90.6821%" y="213" width="0.0255%" height="15" fill="rgb(210,102,26)" fg:x="10676" fg:w="3"/><text x="90.9321%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree_iters::find_iter_right (4 samples, 0.03%)</title><rect x="90.7076%" y="213" width="0.0340%" height="15" fill="rgb(218,30,30)" fg:x="10679" fg:w="4"/><text x="90.9576%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree_iters::BtreeRangeIter&lt;K,V&gt;::new (14 samples, 0.12%)</title><rect x="90.6396%" y="229" width="0.1189%" height="15" fill="rgb(214,67,26)" fg:x="10671" fg:w="14"/><text x="90.8896%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree_iters::find_iter_unbounded (2 samples, 0.02%)</title><rect x="90.7415%" y="213" width="0.0170%" height="15" fill="rgb(251,9,53)" fg:x="10683" fg:w="2"/><text x="90.9915%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree_iters::find_iter_right (2 samples, 0.02%)</title><rect x="90.7585%" y="229" width="0.0170%" height="15" fill="rgb(228,204,25)" fg:x="10685" fg:w="2"/><text x="91.0085%" y="239.50"></text></g><g><title>iroh`std::os::unix::fs::FileExt::read_exact_at (9 samples, 0.08%)</title><rect x="90.7840%" y="197" width="0.0764%" height="15" fill="rgb(207,153,8)" fg:x="10688" fg:w="9"/><text x="91.0340%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`pread (9 samples, 0.08%)</title><rect x="90.7840%" y="181" width="0.0764%" height="15" fill="rgb(242,9,16)" fg:x="10688" fg:w="9"/><text x="91.0340%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::read (14 samples, 0.12%)</title><rect x="90.7755%" y="229" width="0.1189%" height="15" fill="rgb(217,211,10)" fg:x="10687" fg:w="14"/><text x="91.0255%" y="239.50"></text></g><g><title>iroh`redb::tree_store::page_store::file_lock::unix::LockedFile::read (13 samples, 0.11%)</title><rect x="90.7840%" y="213" width="0.1104%" height="15" fill="rgb(219,228,52)" fg:x="10688" fg:w="13"/><text x="91.0340%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (4 samples, 0.03%)</title><rect x="90.8604%" y="197" width="0.0340%" height="15" fill="rgb(231,92,29)" fg:x="10697" fg:w="4"/><text x="91.1104%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="90.8604%" y="181" width="0.0340%" height="15" fill="rgb(232,8,23)" fg:x="10697" fg:w="4"/><text x="91.1104%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.03%)</title><rect x="90.8604%" y="165" width="0.0340%" height="15" fill="rgb(216,211,34)" fg:x="10697" fg:w="4"/><text x="91.1104%" y="175.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::range (32 samples, 0.27%)</title><rect x="90.6311%" y="245" width="0.2718%" height="15" fill="rgb(236,151,0)" fg:x="10670" fg:w="32"/><text x="90.8811%" y="255.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::delete (6 samples, 0.05%)</title><rect x="90.9114%" y="229" width="0.0510%" height="15" fill="rgb(209,168,3)" fg:x="10703" fg:w="6"/><text x="91.1614%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::delete_helper (5 samples, 0.04%)</title><rect x="90.9199%" y="213" width="0.0425%" height="15" fill="rgb(208,129,28)" fg:x="10704" fg:w="5"/><text x="91.1699%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::remove (9 samples, 0.08%)</title><rect x="90.9029%" y="245" width="0.0764%" height="15" fill="rgb(229,78,22)" fg:x="10702" fg:w="9"/><text x="91.1529%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="90.9624%" y="229" width="0.0170%" height="15" fill="rgb(228,187,13)" fg:x="10709" fg:w="2"/><text x="91.2124%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::delete (2 samples, 0.02%)</title><rect x="90.9794%" y="245" width="0.0170%" height="15" fill="rgb(240,119,24)" fg:x="10711" fg:w="2"/><text x="91.2294%" y="255.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::flush_write_buffer (2 samples, 0.02%)</title><rect x="91.0048%" y="245" width="0.0170%" height="15" fill="rgb(209,194,42)" fg:x="10714" fg:w="2"/><text x="91.2548%" y="255.50"></text></g><g><title>iroh`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="91.1238%" y="213" width="0.0170%" height="15" fill="rgb(247,200,46)" fg:x="10728" fg:w="2"/><text x="91.3738%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::flush_write_buffer (132 samples, 1.12%)</title><rect x="91.1153%" y="229" width="1.1212%" height="15" fill="rgb(218,76,16)" fg:x="10727" fg:w="132"/><text x="91.3653%" y="239.50"></text></g><g><title>iroh`std::os::unix::fs::FileExt::write_all_at (128 samples, 1.09%)</title><rect x="91.1492%" y="213" width="1.0872%" height="15" fill="rgb(225,21,48)" fg:x="10731" fg:w="128"/><text x="91.3992%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`pwrite (127 samples, 1.08%)</title><rect x="91.1577%" y="197" width="1.0787%" height="15" fill="rgb(239,223,50)" fg:x="10732" fg:w="127"/><text x="91.4077%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="92.2789%" y="165" width="0.0255%" height="15" fill="rgb(244,45,21)" fg:x="10864" fg:w="3"/><text x="92.5289%" y="175.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.03%)</title><rect x="92.2789%" y="197" width="0.0340%" height="15" fill="rgb(232,33,43)" fg:x="10864" fg:w="4"/><text x="92.5289%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (4 samples, 0.03%)</title><rect x="92.2789%" y="181" width="0.0340%" height="15" fill="rgb(209,8,3)" fg:x="10864" fg:w="4"/><text x="92.5289%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::write_header (9 samples, 0.08%)</title><rect x="92.2450%" y="229" width="0.0764%" height="15" fill="rgb(214,25,53)" fg:x="10860" fg:w="9"/><text x="92.4950%" y="239.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::write (8 samples, 0.07%)</title><rect x="92.2535%" y="213" width="0.0680%" height="15" fill="rgb(254,186,54)" fg:x="10861" fg:w="8"/><text x="92.5035%" y="223.50"></text></g><g><title>iroh`std::fs::File::sync_all (385 samples, 3.27%)</title><rect x="92.3214%" y="229" width="3.2702%" height="15" fill="rgb(208,174,49)" fg:x="10869" fg:w="385"/><text x="92.5714%" y="239.50">iro..</text></g><g><title>libsystem_kernel.dylib`__fcntl (380 samples, 3.23%)</title><rect x="92.3639%" y="213" width="3.2277%" height="15" fill="rgb(233,191,51)" fg:x="10874" fg:w="380"/><text x="92.6139%" y="223.50">lib..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="95.6001%" y="229" width="0.0170%" height="15" fill="rgb(222,134,10)" fg:x="11255" fg:w="2"/><text x="95.8501%" y="239.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::commit (542 samples, 4.60%)</title><rect x="91.0218%" y="245" width="4.6038%" height="15" fill="rgb(230,226,20)" fg:x="10716" fg:w="542"/><text x="91.2718%" y="255.50">iroh`..</text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::free (3 samples, 0.03%)</title><rect x="95.6256%" y="245" width="0.0255%" height="15" fill="rgb(251,111,25)" fg:x="11258" fg:w="3"/><text x="95.8756%" y="255.50"></text></g><g><title>iroh`redb::tree_store::page_store::bitmap::BtreeBitmap::update_to_root (3 samples, 0.03%)</title><rect x="95.6681%" y="229" width="0.0255%" height="15" fill="rgb(224,40,46)" fg:x="11263" fg:w="3"/><text x="95.9181%" y="239.50"></text></g><g><title>iroh`redb::tree_store::page_store::buddy_allocator::BuddyAllocator::free_inner (2 samples, 0.02%)</title><rect x="95.7020%" y="229" width="0.0170%" height="15" fill="rgb(236,108,47)" fg:x="11267" fg:w="2"/><text x="95.9520%" y="239.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (4 samples, 0.03%)</title><rect x="95.8040%" y="213" width="0.0340%" height="15" fill="rgb(234,93,0)" fg:x="11279" fg:w="4"/><text x="96.0540%" y="223.50"></text></g><g><title>iroh`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (3 samples, 0.03%)</title><rect x="95.8125%" y="197" width="0.0255%" height="15" fill="rgb(224,213,32)" fg:x="11280" fg:w="3"/><text x="96.0625%" y="207.50"></text></g><g><title>iroh`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (3 samples, 0.03%)</title><rect x="95.8125%" y="181" width="0.0255%" height="15" fill="rgb(251,11,48)" fg:x="11280" fg:w="3"/><text x="96.0625%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="95.8379%" y="197" width="0.0170%" height="15" fill="rgb(236,173,5)" fg:x="11283" fg:w="2"/><text x="96.0879%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_size (2 samples, 0.02%)</title><rect x="95.8379%" y="181" width="0.0170%" height="15" fill="rgb(230,95,12)" fg:x="11283" fg:w="2"/><text x="96.0879%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="95.8549%" y="197" width="0.0170%" height="15" fill="rgb(232,209,1)" fg:x="11285" fg:w="2"/><text x="96.1049%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.02%)</title><rect x="95.8549%" y="181" width="0.0170%" height="15" fill="rgb(232,6,1)" fg:x="11285" fg:w="2"/><text x="96.1049%" y="191.50"></text></g><g><title>iroh`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.04%)</title><rect x="95.8379%" y="213" width="0.0425%" height="15" fill="rgb(210,224,50)" fg:x="11283" fg:w="5"/><text x="96.0879%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::invalidate_cache (21 samples, 0.18%)</title><rect x="95.7275%" y="229" width="0.1784%" height="15" fill="rgb(228,127,35)" fg:x="11270" fg:w="21"/><text x="95.9775%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="95.8804%" y="213" width="0.0255%" height="15" fill="rgb(245,102,45)" fg:x="11288" fg:w="3"/><text x="96.1304%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.03%)</title><rect x="95.8804%" y="197" width="0.0255%" height="15" fill="rgb(214,1,49)" fg:x="11288" fg:w="3"/><text x="96.1304%" y="207.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::free_helper (34 samples, 0.29%)</title><rect x="95.6511%" y="245" width="0.2888%" height="15" fill="rgb(226,163,40)" fg:x="11261" fg:w="34"/><text x="95.9011%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (4 samples, 0.03%)</title><rect x="95.9059%" y="229" width="0.0340%" height="15" fill="rgb(239,212,28)" fg:x="11291" fg:w="4"/><text x="96.1559%" y="239.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::write_header (2 samples, 0.02%)</title><rect x="95.9399%" y="245" width="0.0170%" height="15" fill="rgb(220,20,13)" fg:x="11295" fg:w="2"/><text x="96.1899%" y="255.50"></text></g><g><title>iroh`redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (2 samples, 0.02%)</title><rect x="96.0078%" y="213" width="0.0170%" height="15" fill="rgb(210,164,35)" fg:x="11303" fg:w="2"/><text x="96.2578%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::finalize_dirty_checksums (3 samples, 0.03%)</title><rect x="96.0078%" y="229" width="0.0255%" height="15" fill="rgb(248,109,41)" fg:x="11303" fg:w="3"/><text x="96.2578%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get (2 samples, 0.02%)</title><rect x="96.0333%" y="229" width="0.0170%" height="15" fill="rgb(238,23,50)" fg:x="11306" fg:w="2"/><text x="96.2833%" y="239.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="96.1182%" y="181" width="0.0170%" height="15" fill="rgb(211,48,49)" fg:x="11316" fg:w="2"/><text x="96.3682%" y="191.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="96.1182%" y="165" width="0.0170%" height="15" fill="rgb(223,36,21)" fg:x="11316" fg:w="2"/><text x="96.3682%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="96.1182%" y="149" width="0.0170%" height="15" fill="rgb(207,123,46)" fg:x="11316" fg:w="2"/><text x="96.3682%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="96.1182%" y="133" width="0.0170%" height="15" fill="rgb(240,218,32)" fg:x="11316" fg:w="2"/><text x="96.3682%" y="143.50"></text></g><g><title>iroh`&lt;redb::tree_store::table_tree::InternalTableDefinition as redb::types::RedbValue&gt;::as_bytes (7 samples, 0.06%)</title><rect x="96.0843%" y="197" width="0.0595%" height="15" fill="rgb(252,5,43)" fg:x="11312" fg:w="7"/><text x="96.3343%" y="207.50"></text></g><g><title>iroh`redb::tree_store::page_store::bitmap::BtreeBitmap::to_vec (3 samples, 0.03%)</title><rect x="96.2202%" y="101" width="0.0255%" height="15" fill="rgb(252,84,19)" fg:x="11328" fg:w="3"/><text x="96.4702%" y="111.50"></text></g><g><title>iroh`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="96.2202%" y="85" width="0.0255%" height="15" fill="rgb(243,152,39)" fg:x="11328" fg:w="3"/><text x="96.4702%" y="95.50"></text></g><g><title>iroh`redb::tree_store::page_store::bitmap::U64GroupedBitmap::to_vec (3 samples, 0.03%)</title><rect x="96.2202%" y="69" width="0.0255%" height="15" fill="rgb(234,160,15)" fg:x="11328" fg:w="3"/><text x="96.4702%" y="79.50"></text></g><g><title>iroh`redb::tree_store::page_store::layout::DatabaseLayout::calculate (10 samples, 0.08%)</title><rect x="96.2117%" y="149" width="0.0849%" height="15" fill="rgb(237,34,20)" fg:x="11327" fg:w="10"/><text x="96.4617%" y="159.50"></text></g><g><title>iroh`redb::tree_store::page_store::region::RegionHeader::header_pages_expensive (10 samples, 0.08%)</title><rect x="96.2117%" y="133" width="0.0849%" height="15" fill="rgb(229,97,13)" fg:x="11327" fg:w="10"/><text x="96.4617%" y="143.50"></text></g><g><title>iroh`redb::tree_store::page_store::buddy_allocator::BuddyAllocator::to_vec (9 samples, 0.08%)</title><rect x="96.2202%" y="117" width="0.0764%" height="15" fill="rgb(234,71,50)" fg:x="11328" fg:w="9"/><text x="96.4702%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.03%)</title><rect x="96.2626%" y="101" width="0.0340%" height="15" fill="rgb(253,155,4)" fg:x="11333" fg:w="4"/><text x="96.5126%" y="111.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (2 samples, 0.02%)</title><rect x="96.2966%" y="149" width="0.0170%" height="15" fill="rgb(222,185,37)" fg:x="11337" fg:w="2"/><text x="96.5466%" y="159.50"></text></g><g><title>iroh`redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (2 samples, 0.02%)</title><rect x="96.2966%" y="133" width="0.0170%" height="15" fill="rgb(251,177,13)" fg:x="11337" fg:w="2"/><text x="96.5466%" y="143.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (15 samples, 0.13%)</title><rect x="96.1947%" y="165" width="0.1274%" height="15" fill="rgb(250,179,40)" fg:x="11325" fg:w="15"/><text x="96.4447%" y="175.50"></text></g><g><title>iroh`redb::tree_store::btree_base::LeafBuilder::build (16 samples, 0.14%)</title><rect x="96.1947%" y="181" width="0.1359%" height="15" fill="rgb(242,44,2)" fg:x="11325" fg:w="16"/><text x="96.4447%" y="191.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert (32 samples, 0.27%)</title><rect x="96.0673%" y="213" width="0.2718%" height="15" fill="rgb(216,177,13)" fg:x="11310" fg:w="32"/><text x="96.3173%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (21 samples, 0.18%)</title><rect x="96.1607%" y="197" width="0.1784%" height="15" fill="rgb(216,106,43)" fg:x="11321" fg:w="21"/><text x="96.4107%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::insert (36 samples, 0.31%)</title><rect x="96.0503%" y="229" width="0.3058%" height="15" fill="rgb(216,183,2)" fg:x="11308" fg:w="36"/><text x="96.3003%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2 samples, 0.02%)</title><rect x="96.3391%" y="213" width="0.0170%" height="15" fill="rgb(249,75,3)" fg:x="11342" fg:w="2"/><text x="96.5891%" y="223.50"></text></g><g><title>iroh`&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="96.3646%" y="213" width="0.0170%" height="15" fill="rgb(219,67,39)" fg:x="11345" fg:w="2"/><text x="96.6146%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="96.3646%" y="197" width="0.0170%" height="15" fill="rgb(253,228,2)" fg:x="11345" fg:w="2"/><text x="96.6146%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="96.3646%" y="181" width="0.0170%" height="15" fill="rgb(235,138,27)" fg:x="11345" fg:w="2"/><text x="96.6146%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="96.3646%" y="165" width="0.0170%" height="15" fill="rgb(236,97,51)" fg:x="11345" fg:w="2"/><text x="96.6146%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.03%)</title><rect x="96.4240%" y="133" width="0.0255%" height="15" fill="rgb(240,80,30)" fg:x="11352" fg:w="3"/><text x="96.6740%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.02%)</title><rect x="96.4325%" y="117" width="0.0170%" height="15" fill="rgb(230,178,19)" fg:x="11353" fg:w="2"/><text x="96.6825%" y="127.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.07%)</title><rect x="96.3900%" y="197" width="0.0680%" height="15" fill="rgb(210,190,27)" fg:x="11348" fg:w="8"/><text x="96.6400%" y="207.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (8 samples, 0.07%)</title><rect x="96.3900%" y="181" width="0.0680%" height="15" fill="rgb(222,107,31)" fg:x="11348" fg:w="8"/><text x="96.6400%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.05%)</title><rect x="96.4070%" y="165" width="0.0510%" height="15" fill="rgb(216,127,34)" fg:x="11350" fg:w="6"/><text x="96.6570%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.05%)</title><rect x="96.4070%" y="149" width="0.0510%" height="15" fill="rgb(234,116,52)" fg:x="11350" fg:w="6"/><text x="96.6570%" y="159.50"></text></g><g><title>iroh`redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (6 samples, 0.05%)</title><rect x="96.4580%" y="197" width="0.0510%" height="15" fill="rgb(222,124,15)" fg:x="11356" fg:w="6"/><text x="96.7080%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree_base::leaf_checksum (6 samples, 0.05%)</title><rect x="96.4580%" y="181" width="0.0510%" height="15" fill="rgb(231,179,28)" fg:x="11356" fg:w="6"/><text x="96.7080%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::xxh3::hash128_with_seed (5 samples, 0.04%)</title><rect x="96.4665%" y="165" width="0.0425%" height="15" fill="rgb(226,93,45)" fg:x="11357" fg:w="5"/><text x="96.7165%" y="175.50"></text></g><g><title>iroh`redb::tree_store::btree_base::leaf_checksum (2 samples, 0.02%)</title><rect x="96.5090%" y="197" width="0.0170%" height="15" fill="rgb(215,8,51)" fg:x="11362" fg:w="2"/><text x="96.7590%" y="207.50"></text></g><g><title>iroh`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="96.5429%" y="181" width="0.0170%" height="15" fill="rgb(223,106,5)" fg:x="11366" fg:w="2"/><text x="96.7929%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (6 samples, 0.05%)</title><rect x="96.5259%" y="197" width="0.0510%" height="15" fill="rgb(250,191,5)" fg:x="11364" fg:w="6"/><text x="96.7759%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (23 samples, 0.20%)</title><rect x="96.3900%" y="213" width="0.1954%" height="15" fill="rgb(242,132,44)" fg:x="11348" fg:w="23"/><text x="96.6400%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::write (4 samples, 0.03%)</title><rect x="96.6024%" y="213" width="0.0340%" height="15" fill="rgb(251,152,29)" fg:x="11373" fg:w="4"/><text x="96.8524%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (2 samples, 0.02%)</title><rect x="96.6364%" y="213" width="0.0170%" height="15" fill="rgb(218,179,5)" fg:x="11377" fg:w="2"/><text x="96.8864%" y="223.50"></text></g><g><title>iroh`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="96.6364%" y="197" width="0.0170%" height="15" fill="rgb(227,67,19)" fg:x="11377" fg:w="2"/><text x="96.8864%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (36 samples, 0.31%)</title><rect x="96.3561%" y="229" width="0.3058%" height="15" fill="rgb(233,119,31)" fg:x="11344" fg:w="36"/><text x="96.6061%" y="239.50"></text></g><g><title>iroh`redb::tree_store::table_tree::TableTree::flush_table_root_updates (85 samples, 0.72%)</title><rect x="95.9569%" y="245" width="0.7220%" height="15" fill="rgb(241,120,22)" fg:x="11297" fg:w="85"/><text x="96.2069%" y="255.50"></text></g><g><title>iroh`std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.04%)</title><rect x="96.6788%" y="245" width="0.0425%" height="15" fill="rgb(224,102,30)" fg:x="11382" fg:w="5"/><text x="96.9288%" y="255.50"></text></g><g><title>iroh`redb::transactions::WriteTransaction::durable_commit (747 samples, 6.35%)</title><rect x="90.3933%" y="261" width="6.3450%" height="15" fill="rgb(210,164,37)" fg:x="10642" fg:w="747"/><text x="90.6433%" y="271.50">iroh`red..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="96.7213%" y="245" width="0.0170%" height="15" fill="rgb(226,191,16)" fg:x="11387" fg:w="2"/><text x="96.9713%" y="255.50"></text></g><g><title>iroh`redb::transactions::WriteTransaction::commit (766 samples, 6.51%)</title><rect x="90.2913%" y="277" width="6.5064%" height="15" fill="rgb(214,40,45)" fg:x="10630" fg:w="766"/><text x="90.5413%" y="287.50">iroh`redb..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (6 samples, 0.05%)</title><rect x="96.7468%" y="261" width="0.0510%" height="15" fill="rgb(244,29,26)" fg:x="11390" fg:w="6"/><text x="96.9968%" y="271.50"></text></g><g><title>iroh`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="96.8147%" y="261" width="0.0170%" height="15" fill="rgb(216,16,5)" fg:x="11398" fg:w="2"/><text x="97.0647%" y="271.50"></text></g><g><title>iroh`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="96.8402%" y="245" width="0.0170%" height="15" fill="rgb(249,76,35)" fg:x="11401" fg:w="2"/><text x="97.0902%" y="255.50"></text></g><g><title>iroh`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.04%)</title><rect x="96.8317%" y="261" width="0.0425%" height="15" fill="rgb(207,11,44)" fg:x="11400" fg:w="5"/><text x="97.0817%" y="271.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="96.8997%" y="213" width="0.0255%" height="15" fill="rgb(228,190,49)" fg:x="11408" fg:w="3"/><text x="97.1497%" y="223.50"></text></g><g><title>iroh`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="96.8997%" y="197" width="0.0255%" height="15" fill="rgb(214,173,12)" fg:x="11408" fg:w="3"/><text x="97.1497%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="96.9082%" y="181" width="0.0170%" height="15" fill="rgb(218,26,35)" fg:x="11409" fg:w="2"/><text x="97.1582%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="96.9082%" y="165" width="0.0170%" height="15" fill="rgb(220,200,19)" fg:x="11409" fg:w="2"/><text x="97.1582%" y="175.50"></text></g><g><title>iroh`redb::tuple_types::_&lt;impl redb::types::RedbValue for (T0,T1,T2,T3,T4)&gt;::type_name (4 samples, 0.03%)</title><rect x="96.8997%" y="229" width="0.0340%" height="15" fill="rgb(239,95,49)" fg:x="11408" fg:w="4"/><text x="97.1497%" y="239.50"></text></g><g><title>iroh`redb::transactions::WriteTransaction::open_table (16 samples, 0.14%)</title><rect x="96.8063%" y="277" width="0.1359%" height="15" fill="rgb(235,85,53)" fg:x="11397" fg:w="16"/><text x="97.0563%" y="287.50"></text></g><g><title>iroh`redb::tree_store::table_tree::TableTree::get_or_create_table (7 samples, 0.06%)</title><rect x="96.8827%" y="261" width="0.0595%" height="15" fill="rgb(233,133,31)" fg:x="11406" fg:w="7"/><text x="97.1327%" y="271.50"></text></g><g><title>iroh`redb::tree_store::table_tree::TableTree::get_table (7 samples, 0.06%)</title><rect x="96.8827%" y="245" width="0.0595%" height="15" fill="rgb(218,25,20)" fg:x="11406" fg:w="7"/><text x="97.1327%" y="255.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (2 samples, 0.02%)</title><rect x="97.0016%" y="181" width="0.0170%" height="15" fill="rgb(252,210,38)" fg:x="11420" fg:w="2"/><text x="97.2516%" y="191.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="97.0016%" y="165" width="0.0170%" height="15" fill="rgb(242,134,21)" fg:x="11420" fg:w="2"/><text x="97.2516%" y="175.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="97.0016%" y="149" width="0.0170%" height="15" fill="rgb(213,28,48)" fg:x="11420" fg:w="2"/><text x="97.2516%" y="159.50"></text></g><g><title>iroh`redb::tree_store::btree_base::BranchBuilder::build (4 samples, 0.03%)</title><rect x="96.9931%" y="229" width="0.0340%" height="15" fill="rgb(250,196,2)" fg:x="11419" fg:w="4"/><text x="97.2431%" y="239.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (4 samples, 0.03%)</title><rect x="96.9931%" y="213" width="0.0340%" height="15" fill="rgb(227,5,17)" fg:x="11419" fg:w="4"/><text x="97.2431%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::write (4 samples, 0.03%)</title><rect x="96.9931%" y="197" width="0.0340%" height="15" fill="rgb(221,226,24)" fg:x="11419" fg:w="4"/><text x="97.2431%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree_base::BranchBuilder::new (4 samples, 0.03%)</title><rect x="97.0271%" y="229" width="0.0340%" height="15" fill="rgb(211,5,48)" fg:x="11423" fg:w="4"/><text x="97.2771%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="97.0356%" y="213" width="0.0255%" height="15" fill="rgb(219,150,6)" fg:x="11424" fg:w="3"/><text x="97.2856%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="97.0441%" y="197" width="0.0170%" height="15" fill="rgb(251,46,16)" fg:x="11425" fg:w="2"/><text x="97.2941%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="97.0441%" y="181" width="0.0170%" height="15" fill="rgb(220,204,40)" fg:x="11425" fg:w="2"/><text x="97.2941%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="97.0441%" y="165" width="0.0170%" height="15" fill="rgb(211,85,2)" fg:x="11425" fg:w="2"/><text x="97.2941%" y="175.50"></text></g><g><title>iroh`redb::tree_store::btree_base::BranchBuilder::push_child (2 samples, 0.02%)</title><rect x="97.0611%" y="229" width="0.0170%" height="15" fill="rgb(229,17,7)" fg:x="11427" fg:w="2"/><text x="97.3111%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (4 samples, 0.03%)</title><rect x="97.1630%" y="213" width="0.0340%" height="15" fill="rgb(239,72,28)" fg:x="11439" fg:w="4"/><text x="97.4130%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="97.1800%" y="197" width="0.0170%" height="15" fill="rgb(230,47,54)" fg:x="11441" fg:w="2"/><text x="97.4300%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree_base::RawBranchBuilder::write_nth_key (2 samples, 0.02%)</title><rect x="97.2140%" y="197" width="0.0170%" height="15" fill="rgb(214,50,8)" fg:x="11445" fg:w="2"/><text x="97.4640%" y="207.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::write (4 samples, 0.03%)</title><rect x="97.2310%" y="181" width="0.0340%" height="15" fill="rgb(216,198,43)" fg:x="11447" fg:w="4"/><text x="97.4810%" y="191.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="97.2479%" y="165" width="0.0170%" height="15" fill="rgb(234,20,35)" fg:x="11449" fg:w="2"/><text x="97.4979%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.02%)</title><rect x="97.2479%" y="149" width="0.0170%" height="15" fill="rgb(254,45,19)" fg:x="11449" fg:w="2"/><text x="97.4979%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="97.2479%" y="133" width="0.0170%" height="15" fill="rgb(219,14,44)" fg:x="11449" fg:w="2"/><text x="97.4979%" y="143.50"></text></g><g><title>iroh`redb::tree_store::btree_base::BranchBuilder::build (9 samples, 0.08%)</title><rect x="97.2055%" y="213" width="0.0764%" height="15" fill="rgb(217,220,26)" fg:x="11444" fg:w="9"/><text x="97.4555%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (6 samples, 0.05%)</title><rect x="97.2310%" y="197" width="0.0510%" height="15" fill="rgb(213,158,28)" fg:x="11447" fg:w="6"/><text x="97.4810%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (2 samples, 0.02%)</title><rect x="97.2649%" y="181" width="0.0170%" height="15" fill="rgb(252,51,52)" fg:x="11451" fg:w="2"/><text x="97.5149%" y="191.50"></text></g><g><title>iroh`redb::tree_store::btree_base::BranchBuilder::new (3 samples, 0.03%)</title><rect x="97.2819%" y="213" width="0.0255%" height="15" fill="rgb(246,89,16)" fg:x="11453" fg:w="3"/><text x="97.5319%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="97.2819%" y="197" width="0.0255%" height="15" fill="rgb(216,158,49)" fg:x="11453" fg:w="3"/><text x="97.5319%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="97.2904%" y="181" width="0.0170%" height="15" fill="rgb(236,107,19)" fg:x="11454" fg:w="2"/><text x="97.5404%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="97.2904%" y="165" width="0.0170%" height="15" fill="rgb(228,185,30)" fg:x="11454" fg:w="2"/><text x="97.5404%" y="175.50"></text></g><g><title>iroh`redb::tree_store::btree_base::LeafBuilder::build_split (2 samples, 0.02%)</title><rect x="97.3244%" y="213" width="0.0170%" height="15" fill="rgb(246,134,8)" fg:x="11458" fg:w="2"/><text x="97.5744%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (2 samples, 0.02%)</title><rect x="97.3244%" y="197" width="0.0170%" height="15" fill="rgb(214,143,50)" fg:x="11458" fg:w="2"/><text x="97.5744%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree_base::LeafBuilder::new (3 samples, 0.03%)</title><rect x="97.3414%" y="213" width="0.0255%" height="15" fill="rgb(228,75,8)" fg:x="11460" fg:w="3"/><text x="97.5914%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree_base::LeafAccessor::entry (2 samples, 0.02%)</title><rect x="97.4518%" y="197" width="0.0170%" height="15" fill="rgb(207,175,4)" fg:x="11473" fg:w="2"/><text x="97.7018%" y="207.50"></text></g><g><title>iroh`&lt;redb::tree_store::btree_base::RawLeafBuilder as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="97.4688%" y="181" width="0.0170%" height="15" fill="rgb(205,108,24)" fg:x="11475" fg:w="2"/><text x="97.7188%" y="191.50"></text></g><g><title>iroh`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="97.4858%" y="165" width="0.0255%" height="15" fill="rgb(244,120,49)" fg:x="11477" fg:w="3"/><text x="97.7358%" y="175.50"></text></g><g><title>iroh`redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (2 samples, 0.02%)</title><rect x="97.5113%" y="165" width="0.0170%" height="15" fill="rgb(223,47,38)" fg:x="11480" fg:w="2"/><text x="97.7613%" y="175.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::write (4 samples, 0.03%)</title><rect x="97.5282%" y="165" width="0.0340%" height="15" fill="rgb(229,179,11)" fg:x="11482" fg:w="4"/><text x="97.7782%" y="175.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (14 samples, 0.12%)</title><rect x="97.4858%" y="181" width="0.1189%" height="15" fill="rgb(231,122,1)" fg:x="11477" fg:w="14"/><text x="97.7358%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (5 samples, 0.04%)</title><rect x="97.5622%" y="165" width="0.0425%" height="15" fill="rgb(245,119,9)" fg:x="11486" fg:w="5"/><text x="97.8122%" y="175.50"></text></g><g><title>iroh`redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (2 samples, 0.02%)</title><rect x="97.5877%" y="149" width="0.0170%" height="15" fill="rgb(241,163,25)" fg:x="11489" fg:w="2"/><text x="97.8377%" y="159.50"></text></g><g><title>iroh`redb::tree_store::page_store::bitmap::BtreeBitmap::find_first_unset (2 samples, 0.02%)</title><rect x="97.5877%" y="133" width="0.0170%" height="15" fill="rgb(217,214,3)" fg:x="11489" fg:w="2"/><text x="97.8377%" y="143.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (2 samples, 0.02%)</title><rect x="97.6047%" y="181" width="0.0170%" height="15" fill="rgb(240,86,28)" fg:x="11491" fg:w="2"/><text x="97.8547%" y="191.50"></text></g><g><title>iroh`redb::tree_store::btree_base::LeafBuilder::build (20 samples, 0.17%)</title><rect x="97.4688%" y="197" width="0.1699%" height="15" fill="rgb(215,47,9)" fg:x="11475" fg:w="20"/><text x="97.7188%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree_base::LeafBuilder::build_split (3 samples, 0.03%)</title><rect x="97.6387%" y="197" width="0.0255%" height="15" fill="rgb(252,25,45)" fg:x="11495" fg:w="3"/><text x="97.8887%" y="207.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (3 samples, 0.03%)</title><rect x="97.6387%" y="181" width="0.0255%" height="15" fill="rgb(251,164,9)" fg:x="11495" fg:w="3"/><text x="97.8887%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::write (2 samples, 0.02%)</title><rect x="97.6472%" y="165" width="0.0170%" height="15" fill="rgb(233,194,0)" fg:x="11496" fg:w="2"/><text x="97.8972%" y="175.50"></text></g><g><title>iroh`redb::tree_store::btree_base::LeafBuilder::new (2 samples, 0.02%)</title><rect x="97.6641%" y="197" width="0.0170%" height="15" fill="rgb(249,111,24)" fg:x="11498" fg:w="2"/><text x="97.9141%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (39 samples, 0.33%)</title><rect x="97.3838%" y="213" width="0.3313%" height="15" fill="rgb(250,223,3)" fg:x="11465" fg:w="39"/><text x="97.6338%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="97.6981%" y="197" width="0.0170%" height="15" fill="rgb(236,178,37)" fg:x="11502" fg:w="2"/><text x="97.9481%" y="207.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (76 samples, 0.65%)</title><rect x="97.0866%" y="229" width="0.6455%" height="15" fill="rgb(241,158,50)" fg:x="11430" fg:w="76"/><text x="97.3366%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::insert (94 samples, 0.80%)</title><rect x="96.9422%" y="277" width="0.7984%" height="15" fill="rgb(213,121,41)" fg:x="11413" fg:w="94"/><text x="97.1922%" y="287.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert (92 samples, 0.78%)</title><rect x="96.9591%" y="261" width="0.7814%" height="15" fill="rgb(240,92,3)" fg:x="11415" fg:w="92"/><text x="97.2091%" y="271.50"></text></g><g><title>iroh`redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (89 samples, 0.76%)</title><rect x="96.9846%" y="245" width="0.7560%" height="15" fill="rgb(205,123,3)" fg:x="11418" fg:w="89"/><text x="97.2346%" y="255.50"></text></g><g><title>iroh`&lt;iroh_sync::store::fs::StoreInstance as iroh_sync::ranger::Store&lt;iroh_sync::sync::SignedEntry&gt;&gt;::put (927 samples, 7.87%)</title><rect x="89.8751%" y="293" width="7.8739%" height="15" fill="rgb(205,97,47)" fg:x="10581" fg:w="927"/><text x="90.1251%" y="303.50">iroh`&lt;iroh_..</text></g><g><title>iroh`core::ptr::drop_in_place&lt;redb::table::Table&lt;(&amp;[u8 (3 samples, 0.03%)</title><rect x="97.7661%" y="293" width="0.0255%" height="15" fill="rgb(247,152,14)" fg:x="11510" fg:w="3"/><text x="98.0161%" y="303.50"></text></g><g><title> 32],&amp;[u8 (3 samples, 0.03%)</title><rect x="97.7661%" y="277" width="0.0255%" height="15" fill="rgb(248,195,53)" fg:x="11510" fg:w="3"/><text x="98.0161%" y="287.50"></text></g><g><title> 32],&amp;[u8]),(u64,&amp;[u8 (3 samples, 0.03%)</title><rect x="97.7661%" y="261" width="0.0255%" height="15" fill="rgb(226,201,16)" fg:x="11510" fg:w="3"/><text x="98.0161%" y="271.50"></text></g><g><title> 64],&amp;[u8 (3 samples, 0.03%)</title><rect x="97.7661%" y="245" width="0.0255%" height="15" fill="rgb(205,98,0)" fg:x="11510" fg:w="3"/><text x="98.0161%" y="255.50"></text></g><g><title> 64],u64,&amp;[u8 (3 samples, 0.03%)</title><rect x="97.7661%" y="229" width="0.0255%" height="15" fill="rgb(214,191,48)" fg:x="11510" fg:w="3"/><text x="98.0161%" y="239.50"></text></g><g><title> 32])&gt;&gt; (3 samples, 0.03%)</title><rect x="97.7661%" y="213" width="0.0255%" height="15" fill="rgb(237,112,39)" fg:x="11510" fg:w="3"/><text x="98.0161%" y="223.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.03%)</title><rect x="97.8595%" y="229" width="0.0255%" height="15" fill="rgb(247,203,27)" fg:x="11521" fg:w="3"/><text x="98.1095%" y="239.50"></text></g><g><title>iroh`redb::transaction_tracker::TransactionTracker::register_read_transaction (7 samples, 0.06%)</title><rect x="97.8850%" y="229" width="0.0595%" height="15" fill="rgb(235,124,28)" fg:x="11524" fg:w="7"/><text x="98.1350%" y="239.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.03%)</title><rect x="97.9190%" y="213" width="0.0255%" height="15" fill="rgb(208,207,46)" fg:x="11528" fg:w="3"/><text x="98.1690%" y="223.50"></text></g><g><title>iroh`redb::db::Database::allocate_read_transaction (12 samples, 0.10%)</title><rect x="97.8595%" y="245" width="0.1019%" height="15" fill="rgb(234,176,4)" fg:x="11521" fg:w="12"/><text x="98.1095%" y="255.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::get_last_committed_transaction_id (2 samples, 0.02%)</title><rect x="97.9444%" y="229" width="0.0170%" height="15" fill="rgb(230,133,28)" fg:x="11531" fg:w="2"/><text x="98.1944%" y="239.50"></text></g><g><title>iroh`redb::db::Database::begin_read (15 samples, 0.13%)</title><rect x="97.8510%" y="261" width="0.1274%" height="15" fill="rgb(211,137,40)" fg:x="11520" fg:w="15"/><text x="98.1010%" y="271.50"></text></g><g><title>iroh`&lt;redb::tree_store::page_store::savepoint::SerializedSavepoint as redb::types::RedbValue&gt;::fixed_width (2 samples, 0.02%)</title><rect x="98.0124%" y="245" width="0.0170%" height="15" fill="rgb(254,35,13)" fg:x="11539" fg:w="2"/><text x="98.2624%" y="255.50"></text></g><g><title>iroh`std::os::unix::fs::FileExt::read_exact_at (9 samples, 0.08%)</title><rect x="98.0379%" y="197" width="0.0764%" height="15" fill="rgb(225,49,51)" fg:x="11542" fg:w="9"/><text x="98.2879%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`pread (9 samples, 0.08%)</title><rect x="98.0379%" y="181" width="0.0764%" height="15" fill="rgb(251,10,15)" fg:x="11542" fg:w="9"/><text x="98.2879%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::read (11 samples, 0.09%)</title><rect x="98.0294%" y="229" width="0.0934%" height="15" fill="rgb(228,207,15)" fg:x="11541" fg:w="11"/><text x="98.2794%" y="239.50"></text></g><g><title>iroh`redb::tree_store::page_store::file_lock::unix::LockedFile::read (10 samples, 0.08%)</title><rect x="98.0379%" y="213" width="0.0849%" height="15" fill="rgb(241,99,19)" fg:x="11542" fg:w="10"/><text x="98.2879%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (14 samples, 0.12%)</title><rect x="98.0294%" y="245" width="0.1189%" height="15" fill="rgb(207,104,49)" fg:x="11541" fg:w="14"/><text x="98.2794%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (3 samples, 0.03%)</title><rect x="98.1228%" y="229" width="0.0255%" height="15" fill="rgb(234,99,18)" fg:x="11552" fg:w="3"/><text x="98.3728%" y="239.50"></text></g><g><title>iroh`&lt;&amp;[u8 (3 samples, 0.03%)</title><rect x="98.1738%" y="229" width="0.0255%" height="15" fill="rgb(213,191,49)" fg:x="11558" fg:w="3"/><text x="98.4238%" y="239.50"></text></g><g><title> N] as redb::types::RedbValue&gt;::type_name (3 samples, 0.03%)</title><rect x="98.1738%" y="213" width="0.0255%" height="15" fill="rgb(210,226,19)" fg:x="11558" fg:w="3"/><text x="98.4238%" y="223.50"></text></g><g><title>iroh`&lt;redb::tree_store::btree_base::AccessGuard&lt;V&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="98.1993%" y="229" width="0.0255%" height="15" fill="rgb(229,97,18)" fg:x="11561" fg:w="3"/><text x="98.4493%" y="239.50"></text></g><g><title>iroh`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="98.2248%" y="229" width="0.0170%" height="15" fill="rgb(211,167,15)" fg:x="11564" fg:w="2"/><text x="98.4748%" y="239.50"></text></g><g><title>iroh`&lt;redb::tree_store::table_tree::InternalTableDefinition as redb::types::RedbValue&gt;::from_bytes (2 samples, 0.02%)</title><rect x="98.2502%" y="213" width="0.0170%" height="15" fill="rgb(210,169,34)" fg:x="11567" fg:w="2"/><text x="98.5002%" y="223.50"></text></g><g><title>iroh`redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (2 samples, 0.02%)</title><rect x="98.2927%" y="197" width="0.0170%" height="15" fill="rgb(241,121,31)" fg:x="11572" fg:w="2"/><text x="98.5427%" y="207.50"></text></g><g><title>iroh`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="98.3691%" y="181" width="0.0170%" height="15" fill="rgb(232,40,11)" fg:x="11581" fg:w="2"/><text x="98.6191%" y="191.50"></text></g><g><title>iroh`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="98.3691%" y="165" width="0.0170%" height="15" fill="rgb(205,86,26)" fg:x="11581" fg:w="2"/><text x="98.6191%" y="175.50"></text></g><g><title>iroh`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="98.3691%" y="149" width="0.0170%" height="15" fill="rgb(231,126,28)" fg:x="11581" fg:w="2"/><text x="98.6191%" y="159.50"></text></g><g><title>iroh`std::os::unix::fs::FileExt::read_exact_at (27 samples, 0.23%)</title><rect x="98.4031%" y="165" width="0.2293%" height="15" fill="rgb(219,221,18)" fg:x="11585" fg:w="27"/><text x="98.6531%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`pread (26 samples, 0.22%)</title><rect x="98.4116%" y="149" width="0.2208%" height="15" fill="rgb(211,40,0)" fg:x="11586" fg:w="26"/><text x="98.6616%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.03%)</title><rect x="98.6325%" y="133" width="0.0255%" height="15" fill="rgb(239,85,43)" fg:x="11612" fg:w="3"/><text x="98.8825%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.03%)</title><rect x="98.6325%" y="117" width="0.0255%" height="15" fill="rgb(231,55,21)" fg:x="11612" fg:w="3"/><text x="98.8825%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (5 samples, 0.04%)</title><rect x="98.6325%" y="165" width="0.0425%" height="15" fill="rgb(225,184,43)" fg:x="11612" fg:w="5"/><text x="98.8825%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.04%)</title><rect x="98.6325%" y="149" width="0.0425%" height="15" fill="rgb(251,158,41)" fg:x="11612" fg:w="5"/><text x="98.8825%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="98.6579%" y="133" width="0.0170%" height="15" fill="rgb(234,159,37)" fg:x="11615" fg:w="2"/><text x="98.9079%" y="143.50"></text></g><g><title>iroh`redb::tree_store::page_store::file_lock::unix::LockedFile::read (34 samples, 0.29%)</title><rect x="98.3946%" y="181" width="0.2888%" height="15" fill="rgb(216,204,22)" fg:x="11584" fg:w="34"/><text x="98.6446%" y="191.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::read (46 samples, 0.39%)</title><rect x="98.3182%" y="197" width="0.3907%" height="15" fill="rgb(214,17,3)" fg:x="11575" fg:w="46"/><text x="98.5682%" y="207.50"></text></g><g><title>iroh`std::os::unix::fs::FileExt::read_exact_at (3 samples, 0.03%)</title><rect x="98.6834%" y="181" width="0.0255%" height="15" fill="rgb(212,111,17)" fg:x="11618" fg:w="3"/><text x="98.9334%" y="191.50"></text></g><g><title>iroh`redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get (53 samples, 0.45%)</title><rect x="98.2672%" y="213" width="0.4502%" height="15" fill="rgb(221,157,24)" fg:x="11569" fg:w="53"/><text x="98.5172%" y="223.50"></text></g><g><title>iroh`redb::tree_store::table_tree::TableTree::get_table_untyped (59 samples, 0.50%)</title><rect x="98.2417%" y="229" width="0.5011%" height="15" fill="rgb(252,16,13)" fg:x="11566" fg:w="59"/><text x="98.4917%" y="239.50"></text></g><g><title>iroh`redb::types::TypeName::from_bytes (2 samples, 0.02%)</title><rect x="98.7259%" y="213" width="0.0170%" height="15" fill="rgb(221,62,2)" fg:x="11623" fg:w="2"/><text x="98.9759%" y="223.50"></text></g><g><title>iroh`&lt;&amp;[u8 (2 samples, 0.02%)</title><rect x="98.7514%" y="213" width="0.0170%" height="15" fill="rgb(247,87,22)" fg:x="11626" fg:w="2"/><text x="99.0014%" y="223.50"></text></g><g><title> N] as redb::types::RedbValue&gt;::type_name (2 samples, 0.02%)</title><rect x="98.7514%" y="197" width="0.0170%" height="15" fill="rgb(215,73,9)" fg:x="11626" fg:w="2"/><text x="99.0014%" y="207.50"></text></g><g><title>iroh`redb::types::TypeName::internal (3 samples, 0.03%)</title><rect x="98.7769%" y="213" width="0.0255%" height="15" fill="rgb(207,175,33)" fg:x="11629" fg:w="3"/><text x="99.0269%" y="223.50"></text></g><g><title>iroh`redb::tuple_types::_&lt;impl redb::types::RedbValue for (T0,T1,T2)&gt;::type_name (8 samples, 0.07%)</title><rect x="98.7429%" y="229" width="0.0680%" height="15" fill="rgb(243,129,54)" fg:x="11625" fg:w="8"/><text x="98.9929%" y="239.50"></text></g><g><title>iroh`alloc::fmt::format::format_inner (3 samples, 0.03%)</title><rect x="98.8363%" y="181" width="0.0255%" height="15" fill="rgb(227,119,45)" fg:x="11636" fg:w="3"/><text x="99.0863%" y="191.50"></text></g><g><title>iroh`core::fmt::write (2 samples, 0.02%)</title><rect x="98.8448%" y="165" width="0.0170%" height="15" fill="rgb(205,109,36)" fg:x="11637" fg:w="2"/><text x="99.0948%" y="175.50"></text></g><g><title>iroh`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.02%)</title><rect x="98.8448%" y="149" width="0.0170%" height="15" fill="rgb(205,6,39)" fg:x="11637" fg:w="2"/><text x="99.0948%" y="159.50"></text></g><g><title>iroh`core::fmt::Formatter::pad_integral (2 samples, 0.02%)</title><rect x="98.8448%" y="133" width="0.0170%" height="15" fill="rgb(221,32,16)" fg:x="11637" fg:w="2"/><text x="99.0948%" y="143.50"></text></g><g><title>iroh`&lt;&amp;[u8 (4 samples, 0.03%)</title><rect x="98.8363%" y="213" width="0.0340%" height="15" fill="rgb(228,144,50)" fg:x="11636" fg:w="4"/><text x="99.0863%" y="223.50"></text></g><g><title> N] as redb::types::RedbValue&gt;::type_name (4 samples, 0.03%)</title><rect x="98.8363%" y="197" width="0.0340%" height="15" fill="rgb(229,201,53)" fg:x="11636" fg:w="4"/><text x="99.0863%" y="207.50"></text></g><g><title>iroh`redb::tuple_types::_&lt;impl redb::types::RedbValue for (T0,T1,T2,T3,T4)&gt;::type_name (9 samples, 0.08%)</title><rect x="98.8108%" y="229" width="0.0764%" height="15" fill="rgb(249,153,27)" fg:x="11633" fg:w="9"/><text x="99.0608%" y="239.50"></text></g><g><title>iroh`redb::tree_store::table_tree::TableTree::get_table (88 samples, 0.75%)</title><rect x="98.1483%" y="245" width="0.7475%" height="15" fill="rgb(227,106,25)" fg:x="11555" fg:w="88"/><text x="98.3983%" y="255.50"></text></g><g><title>iroh`redb::transactions::ReadTransaction::open_table (110 samples, 0.93%)</title><rect x="97.9869%" y="261" width="0.9343%" height="15" fill="rgb(230,65,29)" fg:x="11536" fg:w="110"/><text x="98.2369%" y="271.50"></text></g><g><title>iroh`std::os::unix::fs::FileExt::read_exact_at (5 samples, 0.04%)</title><rect x="98.9467%" y="165" width="0.0425%" height="15" fill="rgb(221,57,46)" fg:x="11649" fg:w="5"/><text x="99.1967%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`pread (5 samples, 0.04%)</title><rect x="98.9467%" y="149" width="0.0425%" height="15" fill="rgb(229,161,17)" fg:x="11649" fg:w="5"/><text x="99.1967%" y="159.50"></text></g><g><title>iroh`redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (9 samples, 0.08%)</title><rect x="98.9213%" y="229" width="0.0764%" height="15" fill="rgb(222,213,11)" fg:x="11646" fg:w="9"/><text x="99.1713%" y="239.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (7 samples, 0.06%)</title><rect x="98.9382%" y="213" width="0.0595%" height="15" fill="rgb(235,35,13)" fg:x="11648" fg:w="7"/><text x="99.1882%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::read (6 samples, 0.05%)</title><rect x="98.9467%" y="197" width="0.0510%" height="15" fill="rgb(233,158,34)" fg:x="11649" fg:w="6"/><text x="99.1967%" y="207.50"></text></g><g><title>iroh`redb::tree_store::page_store::file_lock::unix::LockedFile::read (6 samples, 0.05%)</title><rect x="98.9467%" y="181" width="0.0510%" height="15" fill="rgb(215,151,48)" fg:x="11649" fg:w="6"/><text x="99.1967%" y="191.50"></text></g><g><title>iroh`redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (2 samples, 0.02%)</title><rect x="98.9977%" y="229" width="0.0170%" height="15" fill="rgb(229,84,14)" fg:x="11655" fg:w="2"/><text x="99.2477%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (2 samples, 0.02%)</title><rect x="98.9977%" y="213" width="0.0170%" height="15" fill="rgb(229,68,14)" fg:x="11655" fg:w="2"/><text x="99.2477%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::cached_file::PagedCachedFile::read (7 samples, 0.06%)</title><rect x="99.0147%" y="213" width="0.0595%" height="15" fill="rgb(243,106,26)" fg:x="11657" fg:w="7"/><text x="99.2647%" y="223.50"></text></g><g><title>iroh`redb::tree_store::page_store::file_lock::unix::LockedFile::read (6 samples, 0.05%)</title><rect x="99.0232%" y="197" width="0.0510%" height="15" fill="rgb(206,45,38)" fg:x="11658" fg:w="6"/><text x="99.2732%" y="207.50"></text></g><g><title>iroh`std::os::unix::fs::FileExt::read_exact_at (6 samples, 0.05%)</title><rect x="99.0232%" y="181" width="0.0510%" height="15" fill="rgb(226,6,15)" fg:x="11658" fg:w="6"/><text x="99.2732%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`pread (6 samples, 0.05%)</title><rect x="99.0232%" y="165" width="0.0510%" height="15" fill="rgb(232,22,54)" fg:x="11658" fg:w="6"/><text x="99.2732%" y="175.50"></text></g><g><title>iroh`redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (8 samples, 0.07%)</title><rect x="99.0147%" y="229" width="0.0680%" height="15" fill="rgb(229,222,32)" fg:x="11657" fg:w="8"/><text x="99.2647%" y="239.50"></text></g><g><title>iroh`redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (20 samples, 0.17%)</title><rect x="98.9213%" y="245" width="0.1699%" height="15" fill="rgb(228,62,29)" fg:x="11646" fg:w="20"/><text x="99.1713%" y="255.50"></text></g><g><title>iroh`&lt;iroh_sync::store::fs::StoreInstance as iroh_sync::ranger::Store&lt;iroh_sync::sync::SignedEntry&gt;&gt;::get (153 samples, 1.30%)</title><rect x="97.8085%" y="277" width="1.2996%" height="15" fill="rgb(251,103,34)" fg:x="11515" fg:w="153"/><text x="98.0585%" y="287.50"></text></g><g><title>iroh`redb::tree_store::btree::Btree&lt;K,V&gt;::get (22 samples, 0.19%)</title><rect x="98.9213%" y="261" width="0.1869%" height="15" fill="rgb(233,12,30)" fg:x="11646" fg:w="22"/><text x="99.1713%" y="271.50"></text></g><g><title>iroh`redb::tuple_types::_&lt;impl redb::types::RedbValue for (T0,T1,T2)&gt;::as_bytes (2 samples, 0.02%)</title><rect x="99.0911%" y="245" width="0.0170%" height="15" fill="rgb(238,52,0)" fg:x="11666" fg:w="2"/><text x="99.3411%" y="255.50"></text></g><g><title>iroh`redb::tuple_types::serialize_tuple_elements_variable (2 samples, 0.02%)</title><rect x="99.0911%" y="229" width="0.0170%" height="15" fill="rgb(223,98,5)" fg:x="11666" fg:w="2"/><text x="99.3411%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="99.0911%" y="213" width="0.0170%" height="15" fill="rgb(228,75,37)" fg:x="11666" fg:w="2"/><text x="99.3411%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="99.0911%" y="197" width="0.0170%" height="15" fill="rgb(205,115,49)" fg:x="11666" fg:w="2"/><text x="99.3411%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="99.0911%" y="181" width="0.0170%" height="15" fill="rgb(250,154,43)" fg:x="11666" fg:w="2"/><text x="99.3411%" y="191.50"></text></g><g><title>iroh`iroh_sync::sync::validate_entry (155 samples, 1.32%)</title><rect x="97.8085%" y="293" width="1.3166%" height="15" fill="rgb(226,43,29)" fg:x="11515" fg:w="155"/><text x="98.0585%" y="303.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;redb::tree_store::table_tree::TableTree&gt; (2 samples, 0.02%)</title><rect x="99.1081%" y="277" width="0.0170%" height="15" fill="rgb(249,228,39)" fg:x="11668" fg:w="2"/><text x="99.3581%" y="287.50"></text></g><g><title>iroh`iroh_sync::sync::Replica&lt;S&gt;::insert_entry (1,103 samples, 9.37%)</title><rect x="89.7732%" y="309" width="9.3689%" height="15" fill="rgb(216,79,43)" fg:x="10569" fg:w="1103"/><text x="90.0232%" y="319.50">iroh`iroh_syn..</text></g><g><title>iroh`redb::transactions::WriteTransaction::commit (2 samples, 0.02%)</title><rect x="99.1251%" y="293" width="0.0170%" height="15" fill="rgb(228,95,12)" fg:x="11670" fg:w="2"/><text x="99.3751%" y="303.50"></text></g><g><title>iroh`iroh_sync::sync::Replica&lt;S&gt;::insert (1,355 samples, 11.51%)</title><rect x="87.6582%" y="325" width="11.5094%" height="15" fill="rgb(249,221,15)" fg:x="10320" fg:w="1355"/><text x="87.9082%" y="335.50">iroh`iroh_sync::s..</text></g><g><title>iroh`&lt;futures_util::abortable::Abortable&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,800 samples, 15.29%)</title><rect x="83.8869%" y="341" width="15.2892%" height="15" fill="rgb(233,34,13)" fg:x="9876" fg:w="1800"/><text x="84.1369%" y="351.50">iroh`&lt;futures_util::abo..</text></g><g><title>iroh`&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="99.1846%" y="341" width="0.0340%" height="15" fill="rgb(214,103,39)" fg:x="11677" fg:w="4"/><text x="99.4346%" y="351.50"></text></g><g><title>iroh`core::ptr::drop_in_place&lt;futures_util::future::try_future::MapErr&lt;flume::async::SendFut&lt;iroh_sync::sync::DocSetProgress&gt;,&lt;iroh_bytes::util::progress::FlumeProgressSender&lt;iroh_sync::sync::DocSetProgress&gt; as iroh_bytes::util::progress::ProgressSender&gt;::send::{{closure}}&gt;&gt; (3 samples, 0.03%)</title><rect x="99.2186%" y="341" width="0.0255%" height="15" fill="rgb(251,126,39)" fg:x="11681" fg:w="3"/><text x="99.4686%" y="351.50"></text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,827 samples, 15.52%)</title><rect x="83.7510%" y="373" width="15.5186%" height="15" fill="rgb(214,216,36)" fg:x="9860" fg:w="1827"/><text x="84.0010%" y="383.50">iroh`tokio::runtime::tas..</text></g><g><title>iroh`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,816 samples, 15.43%)</title><rect x="83.8444%" y="357" width="15.4251%" height="15" fill="rgb(220,221,8)" fg:x="9871" fg:w="1816"/><text x="84.0944%" y="367.50">iroh`tokio::runtime::tas..</text></g><g><title>iroh`tokio::task::local::LocalSet::tick (1,836 samples, 15.60%)</title><rect x="83.6915%" y="389" width="15.5950%" height="15" fill="rgb(240,216,3)" fg:x="9853" fg:w="1836"/><text x="83.9415%" y="399.50">iroh`tokio::task::local:..</text></g><g><title>iroh`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner::transition_result_to_poll_future (2 samples, 0.02%)</title><rect x="99.2695%" y="373" width="0.0170%" height="15" fill="rgb(232,218,17)" fg:x="11687" fg:w="2"/><text x="99.5195%" y="383.50"></text></g><g><title>iroh`&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (1,857 samples, 15.77%)</title><rect x="83.5301%" y="405" width="15.7734%" height="15" fill="rgb(229,163,45)" fg:x="9834" fg:w="1857"/><text x="83.7801%" y="415.50">iroh`&lt;tokio::task::local..</text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="99.2865%" y="389" width="0.0170%" height="15" fill="rgb(231,110,42)" fg:x="11689" fg:w="2"/><text x="99.5365%" y="399.50"></text></g><g><title>iroh`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (3 samples, 0.03%)</title><rect x="99.3035%" y="405" width="0.0255%" height="15" fill="rgb(208,170,48)" fg:x="11691" fg:w="3"/><text x="99.5535%" y="415.50"></text></g><g><title>iroh`tokio::runtime::scheduler::current_thread::Context::enter (1,869 samples, 15.88%)</title><rect x="83.4622%" y="421" width="15.8753%" height="15" fill="rgb(239,116,25)" fg:x="9826" fg:w="1869"/><text x="83.7122%" y="431.50">iroh`tokio::runtime::sch..</text></g><g><title>iroh`mio::event::event::Event::token (3 samples, 0.03%)</title><rect x="99.3629%" y="389" width="0.0255%" height="15" fill="rgb(219,200,50)" fg:x="11698" fg:w="3"/><text x="99.6129%" y="399.50"></text></g><g><title>iroh`mio::poll::Poll::poll (4 samples, 0.03%)</title><rect x="99.4054%" y="373" width="0.0340%" height="15" fill="rgb(245,200,0)" fg:x="11703" fg:w="4"/><text x="99.6554%" y="383.50"></text></g><g><title>iroh`tokio::runtime::io::driver::Driver::turn (51 samples, 0.43%)</title><rect x="99.4054%" y="389" width="0.4332%" height="15" fill="rgb(245,119,33)" fg:x="11703" fg:w="51"/><text x="99.6554%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`kevent (47 samples, 0.40%)</title><rect x="99.4394%" y="373" width="0.3992%" height="15" fill="rgb(231,125,12)" fg:x="11707" fg:w="47"/><text x="99.6894%" y="383.50"></text></g><g><title>iroh`tokio::runtime::signal::Driver::process (2 samples, 0.02%)</title><rect x="99.8386%" y="389" width="0.0170%" height="15" fill="rgb(216,96,41)" fg:x="11754" fg:w="2"/><text x="100.0886%" y="399.50"></text></g><g><title>iroh`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (4 samples, 0.03%)</title><rect x="99.8556%" y="389" width="0.0340%" height="15" fill="rgb(248,43,45)" fg:x="11756" fg:w="4"/><text x="100.1056%" y="399.50"></text></g><g><title>iroh`tokio::runtime::time::wheel::Wheel::poll (3 samples, 0.03%)</title><rect x="99.8641%" y="373" width="0.0255%" height="15" fill="rgb(217,222,7)" fg:x="11757" fg:w="3"/><text x="100.1141%" y="383.50"></text></g><g><title>iroh`tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.02%)</title><rect x="99.8726%" y="357" width="0.0170%" height="15" fill="rgb(233,28,6)" fg:x="11758" fg:w="2"/><text x="100.1226%" y="367.50"></text></g><g><title>iroh`tokio::runtime::time::wheel::level::Level::next_expiration (4 samples, 0.03%)</title><rect x="99.8896%" y="389" width="0.0340%" height="15" fill="rgb(231,218,15)" fg:x="11760" fg:w="4"/><text x="100.1396%" y="399.50"></text></g><g><title>iroh`tokio::runtime::time::Driver::park_internal (67 samples, 0.57%)</title><rect x="99.3629%" y="405" width="0.5691%" height="15" fill="rgb(226,171,48)" fg:x="11698" fg:w="67"/><text x="99.6129%" y="415.50"></text></g><g><title>iroh`tokio::runtime::scheduler::current_thread::Context::park (71 samples, 0.60%)</title><rect x="99.3375%" y="421" width="0.6031%" height="15" fill="rgb(235,201,9)" fg:x="11695" fg:w="71"/><text x="99.5875%" y="431.50"></text></g><g><title>iroh`tokio::runtime::context::set_scheduler (1,950 samples, 16.56%)</title><rect x="83.4112%" y="437" width="16.5633%" height="15" fill="rgb(217,80,15)" fg:x="9820" fg:w="1950"/><text x="83.6612%" y="447.50">iroh`tokio::runtime::conte..</text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="99.9575%" y="421" width="0.0170%" height="15" fill="rgb(219,152,8)" fg:x="11768" fg:w="2"/><text x="100.2075%" y="431.50"></text></g><g><title>iroh`tokio::runtime::scheduler::current_thread::Core::tick (2 samples, 0.02%)</title><rect x="99.9745%" y="437" width="0.0170%" height="15" fill="rgb(243,107,38)" fg:x="11770" fg:w="2"/><text x="100.2245%" y="447.50"></text></g><g><title>all (11,773 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(231,17,5)" fg:x="0" fg:w="11773"/><text x="0.2500%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (11,767 samples, 99.95%)</title><rect x="0.0510%" y="581" width="99.9490%" height="15" fill="rgb(209,25,54)" fg:x="6" fg:w="11767"/><text x="0.3010%" y="591.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (11,767 samples, 99.95%)</title><rect x="0.0510%" y="565" width="99.9490%" height="15" fill="rgb(219,0,2)" fg:x="6" fg:w="11767"/><text x="0.3010%" y="575.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>iroh`std::sys::unix::thread::Thread::new::thread_start (11,767 samples, 99.95%)</title><rect x="0.0510%" y="549" width="99.9490%" height="15" fill="rgb(246,9,5)" fg:x="6" fg:w="11767"/><text x="0.3010%" y="559.50">iroh`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>iroh`core::ops::function::FnOnce::call_once{{vtable.shim}} (11,767 samples, 99.95%)</title><rect x="0.0510%" y="533" width="99.9490%" height="15" fill="rgb(226,159,4)" fg:x="6" fg:w="11767"/><text x="0.3010%" y="543.50">iroh`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>iroh`std::sys_common::backtrace::__rust_begin_short_backtrace (11,767 samples, 99.95%)</title><rect x="0.0510%" y="517" width="99.9490%" height="15" fill="rgb(219,175,34)" fg:x="6" fg:w="11767"/><text x="0.3010%" y="527.50">iroh`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>iroh`tokio_util::task::spawn_pinned::LocalWorkerHandle::run (1,953 samples, 16.59%)</title><rect x="83.4112%" y="501" width="16.5888%" height="15" fill="rgb(236,10,46)" fg:x="9820" fg:w="1953"/><text x="83.6612%" y="511.50">iroh`tokio_util::task::spa..</text></g><g><title>iroh`tokio::runtime::runtime::Runtime::block_on (1,953 samples, 16.59%)</title><rect x="83.4112%" y="485" width="16.5888%" height="15" fill="rgb(240,211,16)" fg:x="9820" fg:w="1953"/><text x="83.6612%" y="495.50">iroh`tokio::runtime::runti..</text></g><g><title>iroh`tokio::runtime::context::runtime::enter_runtime (1,953 samples, 16.59%)</title><rect x="83.4112%" y="469" width="16.5888%" height="15" fill="rgb(205,3,43)" fg:x="9820" fg:w="1953"/><text x="83.6612%" y="479.50">iroh`tokio::runtime::conte..</text></g><g><title>iroh`tokio::runtime::scheduler::current_thread::CoreGuard::block_on (1,953 samples, 16.59%)</title><rect x="83.4112%" y="453" width="16.5888%" height="15" fill="rgb(245,7,22)" fg:x="9820" fg:w="1953"/><text x="83.6612%" y="463.50">iroh`tokio::runtime::sched..</text></g></svg></svg>