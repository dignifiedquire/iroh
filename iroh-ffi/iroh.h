/*! \file */
/*******************************************
 *                                         *
 *  File auto-generated by `::safer_ffi`.  *
 *                                         *
 *  Do not manually edit this file.        *
 *                                         *
 *******************************************/

#ifndef __RUST_IROH_FFI__
#define __RUST_IROH_FFI__
#ifdef __cplusplus
extern "C" {
#endif


#include <stddef.h>
#include <stdint.h>

/** \brief
 *  Constant values for error codes from iroh_error_t.
 */
/** \remark Has the same ABI as `uint32_t` **/
#ifdef DOXYGEN
typedef
#endif
enum iroh_error_code {
    /** <No documentation available> */
    IROH_ERROR_CODE_OTHER = 1,
}
#ifndef DOXYGEN
; typedef uint32_t
#endif
iroh_error_code_t;

/** \brief
 *  @class iroh_error_t
 *  An opaque struct representing an error.
 */
typedef struct iroh_error iroh_error_t;

/** \brief
 *  @memberof iroh_error_t
 *  Returns an error code that identifies the error.
 */
uint32_t
iroh_error_code_get (
    iroh_error_t const * error);

/** \brief
 *  @memberof iroh_error_t
 *  Deallocate an iroh_error_t.
 */
void
iroh_error_free (
    iroh_error_t * error);

/** \brief
 *  @memberof iroh_error_t
 *  Returns an owned string describing the error in greater detail.
 *
 *  Caller is responsible for deallocating returned string via iroh_string_free.
 */
char *
iroh_error_message_get (
    iroh_error_t const * error);

/** \brief
 *  @class iroh_node_t
 */
typedef struct iroh_node iroh_node_t;

/** \brief
 *  @memberof iroh_node_t
 *  Deallocate a ns_noosphere_t instance.
 */
void
iroh_free (
    iroh_node_t * node);

/** \brief
 *  @memberof iroh_node_t
 *  Get a collection from a peer.
 */
iroh_error_t *
iroh_get_ticket (
    iroh_node_t const * node,
    char const * ticket,
    char const * out_path);

/** \brief
 *  @memberof iroh_node_t
 *  Initialize a iroh_node_t instance.
 *
 */
iroh_node_t *
iroh_initialize (void);

/** \brief
 *  Deallocate an Iroh-allocated string.
 */
void
iroh_string_free (
    char * string);


#ifdef __cplusplus
} /* extern \"C\" */
#endif

#endif /* __RUST_IROH_FFI__ */
